{"version":3,"file":"godmode-diagnostic-browser.element-B--XD2vz.js","sources":["../../../assets/src/workspace/godmode/views/godmode-diagnostic-browser.element.ts"],"sourcesContent":["import { css, customElement, html, repeat, state, when } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\nimport { Diagnostic, DiagnosticGroup, DiagnosticSection, GodModeService } from \"../../../api\";\r\nimport { tryExecuteAndNotify } from \"@umbraco-cms/backoffice/resources\";\r\nimport { UUIInputEvent, UUISelectEvent } from \"@umbraco-cms/backoffice/external/uui\";\r\n\r\n@customElement('godmode-diagnostic-browser')\r\nexport class GodModeDiagnosticBrowserElement extends UmbLitElement {\r\n    @state()\r\n    diagnostics: Array<DiagnosticGroup> = [];\r\n\r\n    @state()\r\n    currentGroup?: DiagnosticGroup = undefined;\r\n\r\n    @state()\r\n    filteredSections: Array<DiagnosticSection> = [];\r\n\r\n    @state()\r\n    currentGroupId: string = '';\r\n\r\n    @state()\r\n    searchKey: string = '';\r\n\r\n    @state()\r\n    searchValue: string = '';\r\n\r\n    configurationGroups: Array<Option> = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.#loadDiagnostics();\r\n    }\r\n\r\n    async #loadDiagnostics() {\r\n        const { data } = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetEnvironmentDiagnostics());\r\n\r\n        if (data) {\r\n            this.diagnostics = data;\r\n\r\n            const groups = data.map(group => {\r\n                return { name: group.title, value: group.id.toString(), selected: group.id === 0 }\r\n            });\r\n\r\n            groups.unshift({ name: 'Select', value: '', selected: false });\r\n\r\n            this.configurationGroups = groups;\r\n            this.currentGroup = this.diagnostics[0];\r\n            this.currentGroupId = this.diagnostics[0]?.id.toString();\r\n            this.filteredSections = this.currentGroup.sections;\r\n        }\r\n    }\r\n\r\n    #configurationChange(event: UUISelectEvent) {\r\n        const newGroup = this.diagnostics.find(x => x.id.toString() == event.target.value as string);\r\n        if (newGroup) {\r\n            this.currentGroup = newGroup;\r\n            this.currentGroupId = newGroup.id.toString();\r\n            this.filteredSections = newGroup.sections;\r\n            this.searchKey = \"\";\r\n            this.searchValue = \"\";\r\n        }\r\n    }\r\n\r\n    #setSearchKey(event: UUIInputEvent) {\r\n        const value = event.target.value as string;\r\n        this.searchKey = value;\r\n        this.#filterValues();\r\n    }\r\n\r\n    #setSearchValue(event: UUIInputEvent) {\r\n        const value = event.target.value as string;\r\n        this.searchValue = value;\r\n        this.#filterValues();\r\n    }\r\n\r\n    #filterValues() {\r\n      if (this.currentGroup) {\r\n        if (this.searchKey !== '' || this.searchValue !== '') {\r\n            this.filteredSections = structuredClone(this.currentGroup.sections);\r\n            this.filteredSections?.forEach(section => {\r\n                section.diagnostics = section.diagnostics.filter(x => this.#filter(x));\r\n            });\r\n          }\r\n          else {\r\n            this.filteredSections = this.currentGroup?.sections;\r\n          }\r\n        }\r\n    }\r\n\r\n    #filter(diag: Diagnostic) {\r\n        let found: boolean = false;\r\n        if (this.searchKey !== '') {\r\n            found = diag.key.toLowerCase().includes(this.searchKey.toLowerCase());\r\n        }\r\n\r\n        if (this.searchValue !== '') {\r\n            found = diag.value.toLowerCase().includes(this.searchValue.toLowerCase());\r\n        }\r\n\r\n        if (this.searchKey !== '' && this.searchValue !== '') {\r\n            found = diag.key.toLowerCase().includes(this.searchKey.toLowerCase()) && diag.value.toLowerCase().includes(this.searchValue.toLowerCase());\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <umb-body-layout>\r\n                <godmode-header name=\"Diagnostics\" slot=\"header\"></godmode-header>\r\n\r\n                <uui-box>\r\n                    <div class=\"grid\">\r\n                        <div>\r\n                            <uui-label for=\"search-key\">Search Names:</uui-label>\r\n                            <uui-input\r\n                                id=\"search-key\"\r\n                                placeholder=\"Filter by name\"\r\n                                .value=${this.searchKey}\r\n                                @input=${this.#setSearchKey}>\r\n                            </uui-input>\r\n                        </div>\r\n                        <div>\r\n                            <uui-label for=\"search-value\">Search Values:</uui-label>\r\n                            <uui-input\r\n                                id=\"search-value\"\r\n                                placeholder=\"Filter by value\"\r\n                                .value=${this.searchValue}\r\n                                @input=${this.#setSearchValue}>\r\n                            </uui-input>\r\n                        </div>\r\n                        <div>\r\n                            <uui-label for=\"search-section\">Configuration Group:</uui-label>\r\n                            <uui-select\r\n                                id=\"search-section\"\r\n                                .options=${this.configurationGroups}\r\n                                @change=${this.#configurationChange}\r\n                                .value=${this.currentGroupId}>\r\n                            </uui-select>\r\n                        </div>\r\n                    </div>\r\n                </uui-box>\r\n\r\n                ${when(\r\n                  this.currentGroup !== undefined,\r\n                  () => html`\r\n                    <h4>${this.currentGroup?.title}</h4>\r\n      \r\n                    ${repeat(\r\n                        this.filteredSections,\r\n                        (group) => group.heading,\r\n                        (group) => group.diagnostics.length !== 0 ?\r\n                            html`\r\n                                <uui-box headline=${group.heading} style=\"--uui-box-default-padding: 0;\">\r\n                                    <uui-table>\r\n                                          <uui-table-head>\r\n                                              <uui-table-head-cell style=\"width: 30%\">Key</uui-table-head-cell>\r\n                                              <uui-table-head-cell style=\"width: 70%\">Value</uui-table-head-cell>\r\n                                          </uui-table-head>\r\n\r\n                                          ${repeat(\r\n                                              group.diagnostics,\r\n                                              (diagnostic) => diagnostic.key,\r\n                                              (diagnostic) => html`\r\n                                                  <uui-table-row>\r\n                                                      <uui-table-cell>${diagnostic.key}</uui-table-cell>\r\n                                                      <uui-table-cell>${diagnostic.value}</uui-table-cell>\r\n                                                  </uui-table-row>\r\n                                              `\r\n                                          )}\r\n                                      </uui-table>\r\n                                  </uui-box>\r\n                              ` : html``\r\n                      )}`,\r\n                    () => html`<uui-loader></uui-loader>`\r\n                )}\r\n                    \r\n            </umb-body-layout>\r\n        `\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            .grid {\r\n                display: grid;\r\n                grid-template-columns: repeat(3, 1fr);\r\n                gap: 20px;\r\n\r\n                div {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    align-items: flex-start;\r\n                }\r\n            }\r\n\r\n            uui-box {\r\n                margin-bottom: 20px;\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default GodModeDiagnosticBrowserElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'godmode-diagnostic-browser': GodModeDiagnosticBrowserElement;\r\n    }\r\n}\r\n"],"names":["_loadDiagnostics","loadDiagnostics_fn","_configurationChange","configurationChange_fn","_setSearchKey","setSearchKey_fn","_setSearchValue","setSearchValue_fn","_filterValues","filterValues_fn","_filter","filter_fn","GodModeDiagnosticBrowserElement","UmbLitElement","__privateAdd","__privateMethod","html","when","_a","repeat","group","diagnostic","data","tryExecuteAndNotify","GodModeService","groups","event","newGroup","x","value","section","_b","diag","found","css","__decorateClass","state","customElement","GodModeDiagnosticBrowserElement$1"],"mappings":"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"}