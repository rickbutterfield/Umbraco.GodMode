{"version":3,"file":"godmode-workspace.context-CETJZUKK.js","sources":["../../../assets/src/workspace/godmode/godmode-workspace.context.ts"],"sourcesContent":["import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport { UmbDefaultWorkspaceContext, UmbWorkspaceRouteManager } from \"@umbraco-cms/backoffice/workspace\";\nimport GodModeReflectionBrowserElement from \"../../elements/godmode-reflection-browser.element\";\n\nexport class GodModeWorkspaceContext extends UmbDefaultWorkspaceContext {\n  readonly routes = new UmbWorkspaceRouteManager(this);\n\n  constructor(host: UmbControllerHost) {\n    super(host);\n\n    this.routes.setRoutes([\n      {\n        path: 'edit/docTypeBrowser',\n        component: () => import('./views/godmode-doctype-browser.element')\n      },\n      {\n        path: 'edit/templateBrowser',\n        component: () => import('./views/godmode-template-browser.element')\n      },\n      {\n        path: 'edit/partialBrowser',\n        component: () => import('./views/godmode-partial-browser.element')\n      },\n      {\n        path: 'edit/dataTypeBrowser',\n        component: () => import('./views/godmode-datatype-browser.element')\n      },\n      {\n        path: 'edit/contentBrowser',\n        component: () => import('./views/godmode-content-browser.element')\n      },\n      {\n        path: 'edit/usageBrowser',\n        component: () => import('./views/godmode-usage-browser.element')\n      },\n      {\n        path: 'edit/mediaBrowser',\n        component: () => import('./views/godmode-media-browser.element')\n      },\n      {\n        path: 'edit/memberBrowser',\n        component: () => import('./views/godmode-member-browser.element')\n      },\n      {\n        path: 'edit/tagBrowser',\n        component: () => import('./views/godmode-tag-browser.element')\n      },\n      {\n        path: 'edit/serviceBrowser',\n        component: () => import('./views/godmode-services-browser.element')\n      },\n      {\n        path: 'edit/diagnosticBrowser',\n        component: () => import('./views/godmode-diagnostic-browser.element')\n      },\n      {\n        path: 'edit/utilityBrowser',\n        component: () => import('./views/godmode-utility-browser.element')\n      },\n      {\n        path: 'edit/reflectionBrowser/:unique',\n        component: GodModeReflectionBrowserElement,\n        setup: async (component, info) => {\n          const unique = info.match.params.unique;\n          (component as GodModeReflectionBrowserElement).type = unique;\n        }\n      },\n      {\n        path: 'edit/typeBrowser',\n        component: () => import('./views/godmode-interface-browser.element')\n      }\n    ])\n  }\n}\n\nexport { GodModeWorkspaceContext as api };"],"names":["GodModeWorkspaceContext","UmbDefaultWorkspaceContext","host","UmbWorkspaceRouteManager","GodModeReflectionBrowserElement","component","info","unique"],"mappings":";;AAIO,MAAMA,UAAgCC,EAA2B;AAAA,EAGtE,YAAYC,GAAyB;AACnC,UAAMA,CAAI,GAHH,KAAA,SAAS,IAAIC,EAAyB,IAAI,GAKjD,KAAK,OAAO,UAAU;AAAA,MACpB;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,+CAAyC;AAAA,MACnE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,gDAA0C;AAAA,MACpE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,+CAAyC;AAAA,MACnE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,gDAA0C;AAAA,MACpE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,+CAAyC;AAAA,MACnE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,6CAAuC;AAAA,MACjE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,6CAAuC;AAAA,MACjE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,8CAAwC;AAAA,MAClE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,2CAAqC;AAAA,MAC/D;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,gDAA0C;AAAA,MACpE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,kDAA4C;AAAA,MACtE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,+CAAyC;AAAA,MACnE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAWC;AAAA,QACX,OAAO,OAAOC,GAAWC,MAAS;AAC1B,gBAAAC,IAASD,EAAK,MAAM,OAAO;AAChC,UAAAD,EAA8C,OAAOE;AAAA,QACxD;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,iDAA2C;AAAA,MACrE;AAAA,IAAA,CACD;AAAA,EACH;AACF;"}