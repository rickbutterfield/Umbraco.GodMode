{"version":3,"file":"godmode-partial-browser.element-DYtdHMMG.js","sources":["../../../assets/src/workspace/godmode/views/godmode-partial-browser.element.ts"],"sourcesContent":["import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\nimport { LitElement, css, customElement, html, state } from \"@umbraco-cms/backoffice/external/lit\";\nimport { tryExecuteAndNotify } from \"@umbraco-cms/backoffice/resources\";\nimport { UUIBooleanInputEvent, UUIInputEvent, UUISelectEvent } from \"@umbraco-cms/backoffice/external/uui\";\nimport type { UmbTableColumn, UmbTableConfig, UmbTableElement, UmbTableItem, UmbTableOrderedEvent } from '@umbraco-cms/backoffice/components';\nimport { GodModeService, PartialMap, RegisteredService, TemplateModel } from \"../../../api\";\nimport { sortData } from \"../../../helpers/sort\";\nimport { DirectionModel } from \"@umbraco-cms/backoffice/external/backend-api\";\n\n@customElement('godmode-partial-browser')\nexport class GodModePartialBrowserElement extends UmbElementMixin(LitElement) {\n\n  @state()\n  private _tableConfig: UmbTableConfig = {\n    allowSelection: false,\n    hideIcon: true\n  }\n\n  @state()\n  private _tableColumns: Array<UmbTableColumn> = [\n    {\n      name: 'Partial Name',\n      alias: 'name',\n      allowSorting: true\n    },\n    {\n      name: 'Template Name',\n      alias: 'templateName',\n      allowSorting: true\n    }\n  ];\n\n  @state()\n  private _tableItems: Array<UmbTableItem> = [];\n\n  @state()\n  templates: TemplateModel[] = [];\n\n  @state()\n  partials: PartialMap[] = [];\n\n  @state()\n  filteredData: PartialMap[] = [];\n\n  @state()\n  searchName: string = '';\n\n  @state()\n  templateOptions: Option[] = [];\n\n  @state()\n  selectedTemplate: string = '';\n\n  constructor() {\n    super();\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    this.#loadPartials();\n  }\n\n  #sortingHandler(event: UmbTableOrderedEvent) {\n    const table = event.target as UmbTableElement;\n    const orderingColumn = table.orderingColumn as keyof PartialMap;\n    const orderingDesc = table.orderingDesc;\n\n    this.filteredData = sortData(structuredClone(this.partials), orderingColumn, orderingDesc ? DirectionModel.DESCENDING : DirectionModel.ASCENDING);\n    this._tableItems = this.#mapData(this.filteredData);\n  }\n\n  async #loadPartials() {\n    const { data } = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetTemplates());\n\n    if (data) {\n      this.templates = data;\n      this.partials = data.map((template) => {\n        return template.partials;\n      }).reduce((a, b) => {\n        return a.concat(b);\n      });\n\n      this.filteredData = structuredClone(this.partials);\n      this._tableItems = this.#mapData(this.filteredData);\n\n      let templates = [...new Set(this.partials.map(x => x.templateAlias))];\n      this.templateOptions = templates.map(x => { return { name: x, value: x } });\n      this.templateOptions.unshift({ name: 'Any', value: '', selected: true });\n    }\n  }\n\n  #mapData(data: PartialMap[]): UmbTableItem[] {\n    return data.map((data) => {\n      return {\n        id: data.name,\n        data: [\n          {\n            columnAlias: 'name',\n            value: data.name\n          },\n          {\n            columnAlias: 'templateName',\n            value: data.templateAlias\n          }\n        ]\n      }\n    });\n  }\n\n  #setSearchName(event: UUIInputEvent) {\n    const value = event.target.value as string;\n    this.searchName = value;\n    this.#filterValues();\n  }\n\n  #setSelectedTemplate(event: UUISelectEvent) {\n    const value = event.target.value as string;\n    this.selectedTemplate = value;\n    this.#filterValues();\n  }\n\n  #filterValues() {\n    this.filteredData = structuredClone(this.partials);\n\n    if (this.searchName !== '') {\n      this.filteredData = this.filteredData?.filter(x => x.name.toLowerCase().includes(this.searchName));\n    }\n\n    if (this.selectedTemplate !== '') {\n      this.filteredData = this.filteredData?.filter(x => x.templateAlias?.toLowerCase().includes(this.selectedTemplate));\n    }\n\n    if (this.filteredData) {\n      this._tableItems = this.#mapData(this.filteredData);\n    }\n    else this._tableItems = [];\n  }\n\n  override render() {\n    return html`\n            <umb-body-layout>\n                <godmode-header name=\"Partial Browser\" slot=\"header\"></godmode-header>\n                <uui-box>\n                    <div class=\"grid\">\n                        <div>\n                            <uui-label>Search:</uui-label>\n                            <uui-input\n                                placeholder=\"Filter partial names\"\n                                .value=${this.searchName}\n                                @input=${this.#setSearchName}>\n                            </uui-input>\n                        </div>\n                        <div>\n                            <uui-label>In Template:</uui-label>\n                            <uui-select\n                                .options=${this.templateOptions}\n                                .value=${this.selectedTemplate}\n                                @change=${this.#setSelectedTemplate}>\n                            </uui-select>\n                        </div>\n                    </div>\n                </uui-box>\n\n                ${this._tableItems.length !== 0 ?\n        html`\n                    <uui-box style=\"--uui-box-default-padding: 0;\">\n                        <umb-table .config=${this._tableConfig} .columns=${this._tableColumns} .items=${this._tableItems} @ordered=${this.#sortingHandler} />\n                    </uui-box>\n                ` : html``}\n            </umb-body-layout>\n        `;\n  }\n\n  static styles = [\n    css`\n            .grid {\n                display: grid;\n                grid-template-columns: repeat(2, 1fr);\n                gap: 20px;\n\n                div {\n                    display: flex;\n                    flex-direction: column;\n                    align-items: flex-start;\n                }\n            }\n\n            uui-box {\n\t            margin-bottom: 20px;\n            }\n\n            .inline-flex {\n                display: inline-flex;\n                align-items: center;\n\n                uui-icon {\n                    margin-right: 6px;\n                }\n            }\n        `\n  ]\n}\n\nexport default GodModePartialBrowserElement;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'godmode-partial-browser': GodModePartialBrowserElement;\n  }\n}\n"],"names":["_sortingHandler","sortingHandler_fn","_loadPartials","loadPartials_fn","_mapData","mapData_fn","_setSearchName","setSearchName_fn","_setSelectedTemplate","setSelectedTemplate_fn","_filterValues","filterValues_fn","GodModePartialBrowserElement","UmbElementMixin","LitElement","__privateAdd","__privateMethod","html","event","table","orderingColumn","orderingDesc","sortData","DirectionModel","data","tryExecuteAndNotify","GodModeService","template","b","templates","x","value","_a","_b","css","__decorateClass","state","customElement","GodModePartialBrowserElement$1"],"mappings":"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"}