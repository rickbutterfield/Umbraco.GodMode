{"version":3,"file":"index-C2dn3IU5.js","sources":["../../../assets/src/api/core/OpenAPI.ts","../../../assets/src/constants.ts","../../../assets/src/elements/godmode-header.element.ts","../../../assets/src/api/core/ApiError.ts","../../../assets/src/api/core/CancelablePromise.ts","../../../assets/src/api/core/request.ts","../../../assets/src/api/services.gen.ts","../../../assets/src/api/types.gen.ts","../../../assets/src/helpers/sort.ts","../../../assets/src/elements/godmode-reflection-browser.element.ts","../../../assets/src/workspace/godmode-root/manifests.ts","../../../assets/src/workspace/godmode/manifests.ts","../../../assets/src/workspace/godmode-folder/manifests.ts","../../../assets/src/workspace/manifests.ts","../../../assets/src/menu/manifests.ts","../../../assets/src/tree/manifests.ts","../../../assets/src/index.ts"],"sourcesContent":["import type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Headers = Record<string, string>;\ntype Middleware<T> = (value: T) => T | Promise<T>;\ntype Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;\n\nexport class Interceptors<T> {\n  _fns: Middleware<T>[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  eject(fn: Middleware<T>): void {\n    const index = this._fns.indexOf(fn);\n    if (index !== -1) {\n      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];\n    }\n  }\n\n  use(fn: Middleware<T>): void {\n    this._fns = [...this._fns, fn];\n  }\n}\n\nexport type OpenAPIConfig = {\n\tBASE: string;\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\n\tENCODE_PATH?: ((path: string) => string) | undefined;\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\n\tPASSWORD?: string | Resolver<string> | undefined;\n\tTOKEN?: string | Resolver<string> | undefined;\n\tUSERNAME?: string | Resolver<string> | undefined;\n\tVERSION: string;\n\tWITH_CREDENTIALS: boolean;\n\tinterceptors: {\n\t\trequest: Interceptors<RequestInit>;\n\t\tresponse: Interceptors<Response>;\n\t};\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n\tBASE: '',\n\tCREDENTIALS: 'include',\n\tENCODE_PATH: undefined,\n\tHEADERS: undefined,\n\tPASSWORD: undefined,\n\tTOKEN: undefined,\n\tUSERNAME: undefined,\n\tVERSION: 'Latest',\n\tWITH_CREDENTIALS: false,\n\tinterceptors: {\n\t\trequest: new Interceptors(),\n\t\tresponse: new Interceptors(),\n\t},\n};","export const GOD_MODE_TREE_REPOSITORY_ALIAS = 'Umb.Repository.GodMode.Tree';\r\nexport const GOD_MODE_TREE_STORE_ALIAS = 'Umb.Store.GodMode.Tree';\r\nexport const GOD_MODE_TREE_ALIAS = 'Umb.Tree.GodMode';\r\n","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { LitElement, css, customElement, html, ifDefined, property } from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\n@customElement('godmode-header')\r\nexport class GodModeHeaderElement extends UmbElementMixin(LitElement) {\r\n    @property({ type: String, attribute: true })\r\n    name?: string;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <div class=\"header\">\r\n                <uui-icon name=\"icon-sience\"></uui-icon>\r\n                <h3>God Mode ${ifDefined(this.name)}</h3>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            .header {\r\n                display: flex;\r\n                flex-direction: row;\r\n                align-items: center;\r\n\r\n                uui-icon {\r\n                    width: 24px;\r\n                    height: 24px;\r\n                    margin-right: var(--uui-size-space-2);\r\n                }\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default GodModeHeaderElement;","import type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n\tpublic readonly url: string;\n\tpublic readonly status: number;\n\tpublic readonly statusText: string;\n\tpublic readonly body: unknown;\n\tpublic readonly request: ApiRequestOptions;\n\n\tconstructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n\t\tsuper(message);\n\n\t\tthis.name = 'ApiError';\n\t\tthis.url = response.url;\n\t\tthis.status = response.status;\n\t\tthis.statusText = response.statusText;\n\t\tthis.body = response.body;\n\t\tthis.request = request;\n\t}\n}","export class CancelError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t\tthis.name = 'CancelError';\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport interface OnCancel {\n\treadonly isResolved: boolean;\n\treadonly isRejected: boolean;\n\treadonly isCancelled: boolean;\n\n\t(cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n\tprivate _isResolved: boolean;\n\tprivate _isRejected: boolean;\n\tprivate _isCancelled: boolean;\n\treadonly cancelHandlers: (() => void)[];\n\treadonly promise: Promise<T>;\n\tprivate _resolve?: (value: T | PromiseLike<T>) => void;\n\tprivate _reject?: (reason?: unknown) => void;\n\n\tconstructor(\n\t\texecutor: (\n\t\t\tresolve: (value: T | PromiseLike<T>) => void,\n\t\t\treject: (reason?: unknown) => void,\n\t\t\tonCancel: OnCancel\n\t\t) => void\n\t) {\n\t\tthis._isResolved = false;\n\t\tthis._isRejected = false;\n\t\tthis._isCancelled = false;\n\t\tthis.cancelHandlers = [];\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = (value: T | PromiseLike<T>): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tif (this._resolve) this._resolve(value);\n\t\t\t};\n\n\t\t\tconst onReject = (reason?: unknown): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isRejected = true;\n\t\t\t\tif (this._reject) this._reject(reason);\n\t\t\t};\n\n\t\t\tconst onCancel = (cancelHandler: () => void): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.cancelHandlers.push(cancelHandler);\n\t\t\t};\n\n\t\t\tObject.defineProperty(onCancel, 'isResolved', {\n\t\t\t\tget: (): boolean => this._isResolved,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isRejected', {\n\t\t\t\tget: (): boolean => this._isRejected,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isCancelled', {\n\t\t\t\tget: (): boolean => this._isCancelled,\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel as OnCancel);\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn \"Cancellable Promise\";\n\t}\n\n\tpublic then<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n\t\tonRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | null\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this.promise.then(onFulfilled, onRejected);\n\t}\n\n\tpublic catch<TResult = never>(\n\t\tonRejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | null\n\t): Promise<T | TResult> {\n\t\treturn this.promise.catch(onRejected);\n\t}\n\n\tpublic finally(onFinally?: (() => void) | null): Promise<T> {\n\t\treturn this.promise.finally(onFinally);\n\t}\n\n\tpublic cancel(): void {\n\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isCancelled = true;\n\t\tif (this.cancelHandlers.length) {\n\t\t\ttry {\n\t\t\t\tfor (const cancelHandler of this.cancelHandlers) {\n\t\t\t\t\tcancelHandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('Cancellation threw an error', error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.cancelHandlers.length = 0;\n\t\tif (this._reject) this._reject(new CancelError('Request aborted'));\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn this._isCancelled;\n\t}\n}","import { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isString = (value: unknown): value is string => {\n\treturn typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: unknown): value is string => {\n\treturn isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n\treturn value instanceof Blob;\n};\n\nexport const isFormData = (value: unknown): value is FormData => {\n\treturn value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n\ttry {\n\t\treturn btoa(str);\n\t} catch (err) {\n\t\t// @ts-ignore\n\t\treturn Buffer.from(str).toString('base64');\n\t}\n};\n\nexport const getQueryString = (params: Record<string, unknown>): string => {\n\tconst qs: string[] = [];\n\n\tconst append = (key: string, value: unknown) => {\n\t\tqs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n\t};\n\n\tconst encodePair = (key: string, value: unknown) => {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\tappend(key, value.toISOString());\n\t\t} else if (Array.isArray(value)) {\n\t\t\tvalue.forEach(v => encodePair(key, v));\n\t\t} else if (typeof value === 'object') {\n\t\t\tObject.entries(value).forEach(([k, v]) => encodePair(`${key}[${k}]`, v));\n\t\t} else {\n\t\t\tappend(key, value);\n\t\t}\n\t};\n\n\tObject.entries(params).forEach(([key, value]) => encodePair(key, value));\n\n\treturn qs.length ? `?${qs.join('&')}` : '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n\tconst encoder = config.ENCODE_PATH || encodeURI;\n\n\tconst path = options.url\n\t\t.replace('{api-version}', config.VERSION)\n\t\t.replace(/{(.*?)}/g, (substring: string, group: string) => {\n\t\t\tif (options.path?.hasOwnProperty(group)) {\n\t\t\t\treturn encoder(String(options.path[group]));\n\t\t\t}\n\t\t\treturn substring;\n\t\t});\n\n\tconst url = config.BASE + path;\n\treturn options.query ? url + getQueryString(options.query) : url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n\tif (options.formData) {\n\t\tconst formData = new FormData();\n\n\t\tconst process = (key: string, value: unknown) => {\n\t\t\tif (isString(value) || isBlob(value)) {\n\t\t\t\tformData.append(key, value);\n\t\t\t} else {\n\t\t\t\tformData.append(key, JSON.stringify(value));\n\t\t\t}\n\t\t};\n\n\t\tObject.entries(options.formData)\n\t\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t\t.forEach(([key, value]) => {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tvalue.forEach(v => process(key, v));\n\t\t\t\t} else {\n\t\t\t\t\tprocess(key, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn formData;\n\t}\n\treturn undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions<T>, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n\tif (typeof resolver === 'function') {\n\t\treturn (resolver as Resolver<T>)(options);\n\t}\n\treturn resolver;\n};\n\nexport const getHeaders = async <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): Promise<Headers> => {\n\tconst [token, username, password, additionalHeaders] = await Promise.all([\n\t\t// @ts-ignore\n\t\tresolve(options, config.TOKEN),\n\t\t// @ts-ignore\n\t\tresolve(options, config.USERNAME),\n\t\t// @ts-ignore\n\t\tresolve(options, config.PASSWORD),\n\t\t// @ts-ignore\n\t\tresolve(options, config.HEADERS),\n\t]);\n\n\tconst headers = Object.entries({\n\t\tAccept: 'application/json',\n\t\t...additionalHeaders,\n\t\t...options.headers,\n\t})\n\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t.reduce((headers, [key, value]) => ({\n\t\t\t...headers,\n\t\t\t[key]: String(value),\n\t\t}), {} as Record<string, string>);\n\n\tif (isStringWithValue(token)) {\n\t\theaders['Authorization'] = `Bearer ${token}`;\n\t}\n\n\tif (isStringWithValue(username) && isStringWithValue(password)) {\n\t\tconst credentials = base64(`${username}:${password}`);\n\t\theaders['Authorization'] = `Basic ${credentials}`;\n\t}\n\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType) {\n\t\t\theaders['Content-Type'] = options.mediaType;\n\t\t} else if (isBlob(options.body)) {\n\t\t\theaders['Content-Type'] = options.body.type || 'application/octet-stream';\n\t\t} else if (isString(options.body)) {\n\t\t\theaders['Content-Type'] = 'text/plain';\n\t\t} else if (!isFormData(options.body)) {\n\t\t\theaders['Content-Type'] = 'application/json';\n\t\t}\n\t}\n\n\treturn new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): unknown => {\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {\n\t\t\treturn JSON.stringify(options.body);\n\t\t} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n\t\t\treturn options.body;\n\t\t} else {\n\t\t\treturn JSON.stringify(options.body);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const sendRequest = async (\n\tconfig: OpenAPIConfig,\n\toptions: ApiRequestOptions,\n\turl: string,\n\tbody: any,\n\tformData: FormData | undefined,\n\theaders: Headers,\n\tonCancel: OnCancel\n): Promise<Response> => {\n\tconst controller = new AbortController();\n\n\tlet request: RequestInit = {\n\t\theaders,\n\t\tbody: body ?? formData,\n\t\tmethod: options.method,\n\t\tsignal: controller.signal,\n\t};\n\n\tif (config.WITH_CREDENTIALS) {\n\t\trequest.credentials = config.CREDENTIALS;\n\t}\n\n\tfor (const fn of config.interceptors.request._fns) {\n\t\trequest = await fn(request);\n\t}\n\n\tonCancel(() => controller.abort());\n\n\treturn await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n\tif (responseHeader) {\n\t\tconst content = response.headers.get(responseHeader);\n\t\tif (isString(content)) {\n\t\t\treturn content;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<unknown> => {\n\tif (response.status !== 204) {\n\t\ttry {\n\t\t\tconst contentType = response.headers.get('Content-Type');\n\t\t\tif (contentType) {\n\t\t\t\tconst binaryTypes = ['application/octet-stream', 'application/pdf', 'application/zip', 'audio/', 'image/', 'video/'];\n\t\t\t\tif (contentType.includes('application/json') || contentType.includes('+json')) {\n\t\t\t\t\treturn await response.json();\n\t\t\t\t} else if (binaryTypes.some(type => contentType.includes(type))) {\n\t\t\t\t\treturn await response.blob();\n\t\t\t\t} else if (contentType.includes('multipart/form-data')) {\n\t\t\t\t\treturn await response.formData();\n\t\t\t\t} else if (contentType.includes('text/')) {\n\t\t\t\t\treturn await response.text();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n\tconst errors: Record<number, string> = {\n\t\t400: 'Bad Request',\n\t\t401: 'Unauthorized',\n\t\t402: 'Payment Required',\n\t\t403: 'Forbidden',\n\t\t404: 'Not Found',\n\t\t405: 'Method Not Allowed',\n\t\t406: 'Not Acceptable',\n\t\t407: 'Proxy Authentication Required',\n\t\t408: 'Request Timeout',\n\t\t409: 'Conflict',\n\t\t410: 'Gone',\n\t\t411: 'Length Required',\n\t\t412: 'Precondition Failed',\n\t\t413: 'Payload Too Large',\n\t\t414: 'URI Too Long',\n\t\t415: 'Unsupported Media Type',\n\t\t416: 'Range Not Satisfiable',\n\t\t417: 'Expectation Failed',\n\t\t418: 'Im a teapot',\n\t\t421: 'Misdirected Request',\n\t\t422: 'Unprocessable Content',\n\t\t423: 'Locked',\n\t\t424: 'Failed Dependency',\n\t\t425: 'Too Early',\n\t\t426: 'Upgrade Required',\n\t\t428: 'Precondition Required',\n\t\t429: 'Too Many Requests',\n\t\t431: 'Request Header Fields Too Large',\n\t\t451: 'Unavailable For Legal Reasons',\n\t\t500: 'Internal Server Error',\n\t\t501: 'Not Implemented',\n\t\t502: 'Bad Gateway',\n\t\t503: 'Service Unavailable',\n\t\t504: 'Gateway Timeout',\n\t\t505: 'HTTP Version Not Supported',\n\t\t506: 'Variant Also Negotiates',\n\t\t507: 'Insufficient Storage',\n\t\t508: 'Loop Detected',\n\t\t510: 'Not Extended',\n\t\t511: 'Network Authentication Required',\n\t\t...options.errors,\n\t}\n\n\tconst error = errors[result.status];\n\tif (error) {\n\t\tthrow new ApiError(options, result, error);\n\t}\n\n\tif (!result.ok) {\n\t\tconst errorStatus = result.status ?? 'unknown';\n\t\tconst errorStatusText = result.statusText ?? 'unknown';\n\t\tconst errorBody = (() => {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(result.body, null, 2);\n\t\t\t} catch (e) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t})();\n\n\t\tthrow new ApiError(options, result,\n\t\t\t`Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n\t\t);\n\t}\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): CancelablePromise<T> => {\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\n\t\ttry {\n\t\t\tconst url = getUrl(config, options);\n\t\t\tconst formData = getFormData(options);\n\t\t\tconst body = getRequestBody(options);\n\t\t\tconst headers = await getHeaders(config, options);\n\n\t\t\tif (!onCancel.isCancelled) {\n\t\t\t\tlet response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n\n\t\t\t\tfor (const fn of config.interceptors.response._fns) {\n\t\t\t\t\tresponse = await fn(response);\n\t\t\t\t}\n\n\t\t\t\tconst responseBody = await getResponseBody(response);\n\t\t\t\tconst responseHeader = getResponseHeader(response, options.responseHeader);\n\n\t\t\t\tlet transformedBody = responseBody;\n\t\t\t\tif (options.responseTransformer && response.ok) {\n\t\t\t\t\ttransformedBody = await options.responseTransformer(responseBody)\n\t\t\t\t}\n\n\t\t\t\tconst result: ApiResult = {\n\t\t\t\t\turl,\n\t\t\t\t\tok: response.ok,\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\tbody: responseHeader ?? transformedBody,\n\t\t\t\t};\n\n\t\t\t\tcatchErrorCodes(options, result);\n\n\t\t\t\tresolve(result.body);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t});\n};","// This file is auto-generated by @hey-api/openapi-ts\n\nimport type { CancelablePromise } from './core/CancelablePromise';\nimport { OpenAPI } from './core/OpenAPI';\nimport { request as __request } from './core/request';\nimport type { GetContentmentConfigurationEditorModelsData, GetContentmentConfigurationEditorModelsResponse, PostContentmentDataListEditorData, PostContentmentDataListEditorResponse, GetCultureData, GetCultureResponse, PostDataTypeData, PostDataTypeResponse, GetDataTypeByIdData, GetDataTypeByIdResponse, DeleteDataTypeByIdData, DeleteDataTypeByIdResponse, PutDataTypeByIdData, PutDataTypeByIdResponse, PostDataTypeByIdCopyData, PostDataTypeByIdCopyResponse, GetDataTypeByIdIsUsedData, GetDataTypeByIdIsUsedResponse, PutDataTypeByIdMoveData, PutDataTypeByIdMoveResponse, GetDataTypeByIdReferencesData, GetDataTypeByIdReferencesResponse, GetDataTypeConfigurationResponse, PostDataTypeFolderData, PostDataTypeFolderResponse, GetDataTypeFolderByIdData, GetDataTypeFolderByIdResponse, DeleteDataTypeFolderByIdData, DeleteDataTypeFolderByIdResponse, PutDataTypeFolderByIdData, PutDataTypeFolderByIdResponse, GetFilterDataTypeData, GetFilterDataTypeResponse, GetItemDataTypeData, GetItemDataTypeResponse, GetItemDataTypeSearchData, GetItemDataTypeSearchResponse, GetTreeDataTypeAncestorsData, GetTreeDataTypeAncestorsResponse, GetTreeDataTypeChildrenData, GetTreeDataTypeChildrenResponse, GetTreeDataTypeRootData, GetTreeDataTypeRootResponse, GetDictionaryData, GetDictionaryResponse, PostDictionaryData, PostDictionaryResponse, GetDictionaryByIdData, GetDictionaryByIdResponse, DeleteDictionaryByIdData, DeleteDictionaryByIdResponse, PutDictionaryByIdData, PutDictionaryByIdResponse, GetDictionaryByIdExportData, GetDictionaryByIdExportResponse, PutDictionaryByIdMoveData, PutDictionaryByIdMoveResponse, PostDictionaryImportData, PostDictionaryImportResponse, GetItemDictionaryData, GetItemDictionaryResponse, GetTreeDictionaryAncestorsData, GetTreeDictionaryAncestorsResponse, GetTreeDictionaryChildrenData, GetTreeDictionaryChildrenResponse, GetTreeDictionaryRootData, GetTreeDictionaryRootResponse, PostDocumentBlueprintData, PostDocumentBlueprintResponse, GetDocumentBlueprintByIdData, GetDocumentBlueprintByIdResponse, DeleteDocumentBlueprintByIdData, DeleteDocumentBlueprintByIdResponse, PutDocumentBlueprintByIdData, PutDocumentBlueprintByIdResponse, PutDocumentBlueprintByIdMoveData, PutDocumentBlueprintByIdMoveResponse, PostDocumentBlueprintFolderData, PostDocumentBlueprintFolderResponse, GetDocumentBlueprintFolderByIdData, GetDocumentBlueprintFolderByIdResponse, DeleteDocumentBlueprintFolderByIdData, DeleteDocumentBlueprintFolderByIdResponse, PutDocumentBlueprintFolderByIdData, PutDocumentBlueprintFolderByIdResponse, PostDocumentBlueprintFromDocumentData, PostDocumentBlueprintFromDocumentResponse, GetItemDocumentBlueprintData, GetItemDocumentBlueprintResponse, GetTreeDocumentBlueprintAncestorsData, GetTreeDocumentBlueprintAncestorsResponse, GetTreeDocumentBlueprintChildrenData, GetTreeDocumentBlueprintChildrenResponse, GetTreeDocumentBlueprintRootData, GetTreeDocumentBlueprintRootResponse, PostDocumentTypeData, PostDocumentTypeResponse, GetDocumentTypeByIdData, GetDocumentTypeByIdResponse, DeleteDocumentTypeByIdData, DeleteDocumentTypeByIdResponse, PutDocumentTypeByIdData, PutDocumentTypeByIdResponse, GetDocumentTypeByIdAllowedChildrenData, GetDocumentTypeByIdAllowedChildrenResponse, GetDocumentTypeByIdBlueprintData, GetDocumentTypeByIdBlueprintResponse, GetDocumentTypeByIdCompositionReferencesData, GetDocumentTypeByIdCompositionReferencesResponse, PostDocumentTypeByIdCopyData, PostDocumentTypeByIdCopyResponse, GetDocumentTypeByIdExportData, GetDocumentTypeByIdExportResponse, PutDocumentTypeByIdImportData, PutDocumentTypeByIdImportResponse, PutDocumentTypeByIdMoveData, PutDocumentTypeByIdMoveResponse, GetDocumentTypeAllowedAtRootData, GetDocumentTypeAllowedAtRootResponse, PostDocumentTypeAvailableCompositionsData, PostDocumentTypeAvailableCompositionsResponse, GetDocumentTypeConfigurationResponse, PostDocumentTypeFolderData, PostDocumentTypeFolderResponse, GetDocumentTypeFolderByIdData, GetDocumentTypeFolderByIdResponse, DeleteDocumentTypeFolderByIdData, DeleteDocumentTypeFolderByIdResponse, PutDocumentTypeFolderByIdData, PutDocumentTypeFolderByIdResponse, PostDocumentTypeImportData, PostDocumentTypeImportResponse, GetItemDocumentTypeData, GetItemDocumentTypeResponse, GetItemDocumentTypeSearchData, GetItemDocumentTypeSearchResponse, GetTreeDocumentTypeAncestorsData, GetTreeDocumentTypeAncestorsResponse, GetTreeDocumentTypeChildrenData, GetTreeDocumentTypeChildrenResponse, GetTreeDocumentTypeRootData, GetTreeDocumentTypeRootResponse, GetDocumentVersionData, GetDocumentVersionResponse, GetDocumentVersionByIdData, GetDocumentVersionByIdResponse, PutDocumentVersionByIdPreventCleanupData, PutDocumentVersionByIdPreventCleanupResponse, PostDocumentVersionByIdRollbackData, PostDocumentVersionByIdRollbackResponse, GetCollectionDocumentByIdData, GetCollectionDocumentByIdResponse, PostDocumentData, PostDocumentResponse, GetDocumentByIdData, GetDocumentByIdResponse, DeleteDocumentByIdData, DeleteDocumentByIdResponse, PutDocumentByIdData, PutDocumentByIdResponse, GetDocumentByIdAuditLogData, GetDocumentByIdAuditLogResponse, PostDocumentByIdCopyData, PostDocumentByIdCopyResponse, GetDocumentByIdDomainsData, GetDocumentByIdDomainsResponse, PutDocumentByIdDomainsData, PutDocumentByIdDomainsResponse, PutDocumentByIdMoveData, PutDocumentByIdMoveResponse, PutDocumentByIdMoveToRecycleBinData, PutDocumentByIdMoveToRecycleBinResponse, GetDocumentByIdNotificationsData, GetDocumentByIdNotificationsResponse, PutDocumentByIdNotificationsData, PutDocumentByIdNotificationsResponse, PostDocumentByIdPublicAccessData, PostDocumentByIdPublicAccessResponse, DeleteDocumentByIdPublicAccessData, DeleteDocumentByIdPublicAccessResponse, GetDocumentByIdPublicAccessData, GetDocumentByIdPublicAccessResponse, PutDocumentByIdPublicAccessData, PutDocumentByIdPublicAccessResponse, PutDocumentByIdPublishData, PutDocumentByIdPublishResponse, PutDocumentByIdPublishWithDescendantsData, PutDocumentByIdPublishWithDescendantsResponse, GetDocumentByIdReferencedByData, GetDocumentByIdReferencedByResponse, GetDocumentByIdReferencedDescendantsData, GetDocumentByIdReferencedDescendantsResponse, PutDocumentByIdUnpublishData, PutDocumentByIdUnpublishResponse, PutDocumentByIdValidateData, PutDocumentByIdValidateResponse, GetDocumentAreReferencedData, GetDocumentAreReferencedResponse, GetDocumentConfigurationResponse, PutDocumentSortData, PutDocumentSortResponse, GetDocumentUrlsData, GetDocumentUrlsResponse, PostDocumentValidateData, PostDocumentValidateResponse, GetItemDocumentData, GetItemDocumentResponse, GetItemDocumentSearchData, GetItemDocumentSearchResponse, DeleteRecycleBinDocumentResponse, DeleteRecycleBinDocumentByIdData, DeleteRecycleBinDocumentByIdResponse, GetRecycleBinDocumentByIdOriginalParentData, GetRecycleBinDocumentByIdOriginalParentResponse, PutRecycleBinDocumentByIdRestoreData, PutRecycleBinDocumentByIdRestoreResponse, GetRecycleBinDocumentChildrenData, GetRecycleBinDocumentChildrenResponse, GetRecycleBinDocumentRootData, GetRecycleBinDocumentRootResponse, GetTreeDocumentAncestorsData, GetTreeDocumentAncestorsResponse, GetTreeDocumentChildrenData, GetTreeDocumentChildrenResponse, GetTreeDocumentRootData, GetTreeDocumentRootResponse, PostDynamicRootQueryData, PostDynamicRootQueryResponse, GetDynamicRootStepsResponse, PostUmbracoManagementApiV1GodModeClearUmbracoCacheData, PostUmbracoManagementApiV1GodModeClearUmbracoCacheResponse, PostUmbracoManagementApiV1GodModeCopyDataTypeData, PostUmbracoManagementApiV1GodModeCopyDataTypeResponse, PostUmbracoManagementApiV1GodModeDeleteTagData, PostUmbracoManagementApiV1GodModeDeleteTagResponse, PostUmbracoManagementApiV1GodModeFixTemplateMastersResponse, GetUmbracoManagementApiV1GodModeGetApiControllersResponse, GetUmbracoManagementApiV1GodModeGetAssembliesResponse, GetUmbracoManagementApiV1GodModeGetAssembliesWithInterfacesResponse, GetUmbracoManagementApiV1GodModeGetComposersResponse, GetUmbracoManagementApiV1GodModeGetCompositionsResponse, GetUmbracoManagementApiV1GodModeGetConfigResponse, GetUmbracoManagementApiV1GodModeGetContentFindersResponse, GetUmbracoManagementApiV1GodModeGetContentPagedData, GetUmbracoManagementApiV1GodModeGetContentPagedResponse, GetUmbracoManagementApiV1GodModeGetContentTypeAliasesResponse, GetUmbracoManagementApiV1GodModeGetContentTypeMapResponse, GetUmbracoManagementApiV1GodModeGetContentUsageDataData, GetUmbracoManagementApiV1GodModeGetContentUsageDataResponse, GetUmbracoManagementApiV1GodModeGetDataTypesResponse, GetUmbracoManagementApiV1GodModeGetDataTypesStatusResponse, GetUmbracoManagementApiV1GodModeGetEnvironmentDiagnosticsResponse, GetUmbracoManagementApiV1GodModeGetInterfacesFromData, GetUmbracoManagementApiV1GodModeGetInterfacesFromResponse, GetUmbracoManagementApiV1GodModeGetLanguagesResponse, GetUmbracoManagementApiV1GodModeGetMediaData, GetUmbracoManagementApiV1GodModeGetMediaResponse, GetUmbracoManagementApiV1GodModeGetMediaTypesResponse, GetUmbracoManagementApiV1GodModeGetMemberGroupsResponse, GetUmbracoManagementApiV1GodModeGetMembersPagedData, GetUmbracoManagementApiV1GodModeGetMembersPagedResponse, GetUmbracoManagementApiV1GodModeGetNonMsAssembliesResponse, GetUmbracoManagementApiV1GodModeGetNuCacheItemData, GetUmbracoManagementApiV1GodModeGetNuCacheItemResponse, GetUmbracoManagementApiV1GodModeGetNuCacheTypeResponse, GetUmbracoManagementApiV1GodModeGetOrphanedTagsResponse, GetUmbracoManagementApiV1GodModeGetPropertyEditorsResponse, GetUmbracoManagementApiV1GodModeGetPropertyGroupsResponse, GetUmbracoManagementApiV1GodModeGetPropertyValueConvertersResponse, GetUmbracoManagementApiV1GodModeGetPublishedContentModelsResponse, GetUmbracoManagementApiV1GodModeGetRegisteredServicesResponse, GetUmbracoManagementApiV1GodModeGetRenderMvcControllersResponse, GetUmbracoManagementApiV1GodModeGetStandardContentTypeAliasesResponse, GetUmbracoManagementApiV1GodModeGetSurfaceControllersResponse, GetUmbracoManagementApiV1GodModeGetTagHelpersResponse, GetUmbracoManagementApiV1GodModeGetTagMappingResponse, GetUmbracoManagementApiV1GodModeGetTemplatesResponse, GetUmbracoManagementApiV1GodModeGetTemplateUrlsToPingResponse, GetUmbracoManagementApiV1GodModeGetTypesAssignableFromData, GetUmbracoManagementApiV1GodModeGetTypesAssignableFromResponse, GetUmbracoManagementApiV1GodModeGetTypesFromData, GetUmbracoManagementApiV1GodModeGetTypesFromResponse, GetUmbracoManagementApiV1GodModeGetUmbracoAssembliesResponse, GetUmbracoManagementApiV1GodModeGetUrlProvidersResponse, GetUmbracoManagementApiV1GodModeGetUrlsToPingData, GetUmbracoManagementApiV1GodModeGetUrlsToPingResponse, GetUmbracoManagementApiV1GodModeGetViewComponentsResponse, PostUmbracoManagementApiV1GodModePurgeMediaCacheResponse, PostUmbracoManagementApiV1GodModeRestartAppPoolResponse, GetHealthCheckGroupData, GetHealthCheckGroupResponse, GetHealthCheckGroupByNameData, GetHealthCheckGroupByNameResponse, PostHealthCheckGroupByNameCheckData, PostHealthCheckGroupByNameCheckResponse, PostHealthCheckExecuteActionData, PostHealthCheckExecuteActionResponse, GetHelpData, GetHelpResponse, GetImagingResizeUrlsData, GetImagingResizeUrlsResponse, GetImportAnalyzeData, GetImportAnalyzeResponse, GetIndexerData, GetIndexerResponse, GetIndexerByIndexNameData, GetIndexerByIndexNameResponse, PostIndexerByIndexNameRebuildData, PostIndexerByIndexNameRebuildResponse, GetInstallSettingsResponse, PostInstallSetupData, PostInstallSetupResponse, PostInstallValidateDatabaseData, PostInstallValidateDatabaseResponse, GetItemLanguageData, GetItemLanguageResponse, GetItemLanguageDefaultResponse, GetLanguageData, GetLanguageResponse, PostLanguageData, PostLanguageResponse, GetLanguageByIsoCodeData, GetLanguageByIsoCodeResponse, DeleteLanguageByIsoCodeData, DeleteLanguageByIsoCodeResponse, PutLanguageByIsoCodeData, PutLanguageByIsoCodeResponse, GetLogViewerLevelData, GetLogViewerLevelResponse, GetLogViewerLevelCountData, GetLogViewerLevelCountResponse, GetLogViewerLogData, GetLogViewerLogResponse, GetLogViewerMessageTemplateData, GetLogViewerMessageTemplateResponse, GetLogViewerSavedSearchData, GetLogViewerSavedSearchResponse, PostLogViewerSavedSearchData, PostLogViewerSavedSearchResponse, GetLogViewerSavedSearchByNameData, GetLogViewerSavedSearchByNameResponse, DeleteLogViewerSavedSearchByNameData, DeleteLogViewerSavedSearchByNameResponse, GetLogViewerValidateLogsSizeData, GetLogViewerValidateLogsSizeResponse, GetManifestManifestResponse, GetManifestManifestPrivateResponse, GetManifestManifestPublicResponse, GetItemMediaTypeData, GetItemMediaTypeResponse, GetItemMediaTypeAllowedData, GetItemMediaTypeAllowedResponse, GetItemMediaTypeFoldersData, GetItemMediaTypeFoldersResponse, GetItemMediaTypeSearchData, GetItemMediaTypeSearchResponse, PostMediaTypeData, PostMediaTypeResponse, GetMediaTypeByIdData, GetMediaTypeByIdResponse, DeleteMediaTypeByIdData, DeleteMediaTypeByIdResponse, PutMediaTypeByIdData, PutMediaTypeByIdResponse, GetMediaTypeByIdAllowedChildrenData, GetMediaTypeByIdAllowedChildrenResponse, GetMediaTypeByIdCompositionReferencesData, GetMediaTypeByIdCompositionReferencesResponse, PostMediaTypeByIdCopyData, PostMediaTypeByIdCopyResponse, GetMediaTypeByIdExportData, GetMediaTypeByIdExportResponse, PutMediaTypeByIdImportData, PutMediaTypeByIdImportResponse, PutMediaTypeByIdMoveData, PutMediaTypeByIdMoveResponse, GetMediaTypeAllowedAtRootData, GetMediaTypeAllowedAtRootResponse, PostMediaTypeAvailableCompositionsData, PostMediaTypeAvailableCompositionsResponse, PostMediaTypeFolderData, PostMediaTypeFolderResponse, GetMediaTypeFolderByIdData, GetMediaTypeFolderByIdResponse, DeleteMediaTypeFolderByIdData, DeleteMediaTypeFolderByIdResponse, PutMediaTypeFolderByIdData, PutMediaTypeFolderByIdResponse, PostMediaTypeImportData, PostMediaTypeImportResponse, GetTreeMediaTypeAncestorsData, GetTreeMediaTypeAncestorsResponse, GetTreeMediaTypeChildrenData, GetTreeMediaTypeChildrenResponse, GetTreeMediaTypeRootData, GetTreeMediaTypeRootResponse, GetCollectionMediaData, GetCollectionMediaResponse, GetItemMediaData, GetItemMediaResponse, GetItemMediaSearchData, GetItemMediaSearchResponse, PostMediaData, PostMediaResponse, GetMediaByIdData, GetMediaByIdResponse, DeleteMediaByIdData, DeleteMediaByIdResponse, PutMediaByIdData, PutMediaByIdResponse, GetMediaByIdAuditLogData, GetMediaByIdAuditLogResponse, PutMediaByIdMoveData, PutMediaByIdMoveResponse, PutMediaByIdMoveToRecycleBinData, PutMediaByIdMoveToRecycleBinResponse, GetMediaByIdReferencedByData, GetMediaByIdReferencedByResponse, GetMediaByIdReferencedDescendantsData, GetMediaByIdReferencedDescendantsResponse, PutMediaByIdValidateData, PutMediaByIdValidateResponse, GetMediaAreReferencedData, GetMediaAreReferencedResponse, GetMediaConfigurationResponse, PutMediaSortData, PutMediaSortResponse, GetMediaUrlsData, GetMediaUrlsResponse, PostMediaValidateData, PostMediaValidateResponse, DeleteRecycleBinMediaResponse, DeleteRecycleBinMediaByIdData, DeleteRecycleBinMediaByIdResponse, GetRecycleBinMediaByIdOriginalParentData, GetRecycleBinMediaByIdOriginalParentResponse, PutRecycleBinMediaByIdRestoreData, PutRecycleBinMediaByIdRestoreResponse, GetRecycleBinMediaChildrenData, GetRecycleBinMediaChildrenResponse, GetRecycleBinMediaRootData, GetRecycleBinMediaRootResponse, GetTreeMediaAncestorsData, GetTreeMediaAncestorsResponse, GetTreeMediaChildrenData, GetTreeMediaChildrenResponse, GetTreeMediaRootData, GetTreeMediaRootResponse, GetItemMemberGroupData, GetItemMemberGroupResponse, GetMemberGroupData, GetMemberGroupResponse, PostMemberGroupData, PostMemberGroupResponse, GetMemberGroupByIdData, GetMemberGroupByIdResponse, DeleteMemberGroupByIdData, DeleteMemberGroupByIdResponse, PutMemberGroupByIdData, PutMemberGroupByIdResponse, GetTreeMemberGroupRootData, GetTreeMemberGroupRootResponse, GetItemMemberTypeData, GetItemMemberTypeResponse, GetItemMemberTypeSearchData, GetItemMemberTypeSearchResponse, PostMemberTypeData, PostMemberTypeResponse, GetMemberTypeByIdData, GetMemberTypeByIdResponse, DeleteMemberTypeByIdData, DeleteMemberTypeByIdResponse, PutMemberTypeByIdData, PutMemberTypeByIdResponse, GetMemberTypeByIdCompositionReferencesData, GetMemberTypeByIdCompositionReferencesResponse, PostMemberTypeByIdCopyData, PostMemberTypeByIdCopyResponse, PostMemberTypeAvailableCompositionsData, PostMemberTypeAvailableCompositionsResponse, GetTreeMemberTypeRootData, GetTreeMemberTypeRootResponse, GetFilterMemberData, GetFilterMemberResponse, GetItemMemberData, GetItemMemberResponse, GetItemMemberSearchData, GetItemMemberSearchResponse, PostMemberData, PostMemberResponse, GetMemberByIdData, GetMemberByIdResponse, DeleteMemberByIdData, DeleteMemberByIdResponse, PutMemberByIdData, PutMemberByIdResponse, PutMemberByIdValidateData, PutMemberByIdValidateResponse, GetMemberConfigurationResponse, PostMemberValidateData, PostMemberValidateResponse, PostModelsBuilderBuildResponse, GetModelsBuilderDashboardResponse, GetModelsBuilderStatusResponse, GetObjectTypesData, GetObjectTypesResponse, GetOembedQueryData, GetOembedQueryResponse, PostPackageByNameRunMigrationData, PostPackageByNameRunMigrationResponse, GetPackageConfigurationResponse, GetPackageCreatedData, GetPackageCreatedResponse, PostPackageCreatedData, PostPackageCreatedResponse, GetPackageCreatedByIdData, GetPackageCreatedByIdResponse, DeletePackageCreatedByIdData, DeletePackageCreatedByIdResponse, PutPackageCreatedByIdData, PutPackageCreatedByIdResponse, GetPackageCreatedByIdDownloadData, GetPackageCreatedByIdDownloadResponse, GetPackageMigrationStatusData, GetPackageMigrationStatusResponse, GetItemPartialViewData, GetItemPartialViewResponse, PostPartialViewData, PostPartialViewResponse, GetPartialViewByPathData, GetPartialViewByPathResponse, DeletePartialViewByPathData, DeletePartialViewByPathResponse, PutPartialViewByPathData, PutPartialViewByPathResponse, PutPartialViewByPathRenameData, PutPartialViewByPathRenameResponse, PostPartialViewFolderData, PostPartialViewFolderResponse, GetPartialViewFolderByPathData, GetPartialViewFolderByPathResponse, DeletePartialViewFolderByPathData, DeletePartialViewFolderByPathResponse, GetPartialViewSnippetData, GetPartialViewSnippetResponse, GetPartialViewSnippetByIdData, GetPartialViewSnippetByIdResponse, GetTreePartialViewAncestorsData, GetTreePartialViewAncestorsResponse, GetTreePartialViewChildrenData, GetTreePartialViewChildrenResponse, GetTreePartialViewRootData, GetTreePartialViewRootResponse, DeletePreviewResponse, PostPreviewResponse, GetProfilingStatusResponse, PutProfilingStatusData, PutProfilingStatusResponse, GetPropertyTypeIsUsedData, GetPropertyTypeIsUsedResponse, PostPublishedCacheCollectResponse, PostPublishedCacheRebuildResponse, PostPublishedCacheReloadResponse, GetPublishedCacheStatusResponse, GetRedirectManagementData, GetRedirectManagementResponse, GetRedirectManagementByIdData, GetRedirectManagementByIdResponse, DeleteRedirectManagementByIdData, DeleteRedirectManagementByIdResponse, GetRedirectManagementStatusResponse, PostRedirectManagementStatusData, PostRedirectManagementStatusResponse, GetItemRelationTypeData, GetItemRelationTypeResponse, GetRelationTypeData, GetRelationTypeResponse, GetRelationTypeByIdData, GetRelationTypeByIdResponse, GetItemScriptData, GetItemScriptResponse, PostScriptData, PostScriptResponse, GetScriptByPathData, GetScriptByPathResponse, DeleteScriptByPathData, DeleteScriptByPathResponse, PutScriptByPathData, PutScriptByPathResponse, PutScriptByPathRenameData, PutScriptByPathRenameResponse, PostScriptFolderData, PostScriptFolderResponse, GetScriptFolderByPathData, GetScriptFolderByPathResponse, DeleteScriptFolderByPathData, DeleteScriptFolderByPathResponse, GetTreeScriptAncestorsData, GetTreeScriptAncestorsResponse, GetTreeScriptChildrenData, GetTreeScriptChildrenResponse, GetTreeScriptRootData, GetTreeScriptRootResponse, GetSearcherData, GetSearcherResponse, GetSearcherBySearcherNameQueryData, GetSearcherBySearcherNameQueryResponse, GetSecurityConfigurationResponse, PostSecurityForgotPasswordData, PostSecurityForgotPasswordResponse, PostSecurityForgotPasswordResetData, PostSecurityForgotPasswordResetResponse, PostSecurityForgotPasswordVerifyData, PostSecurityForgotPasswordVerifyResponse, GetSegmentData, GetSegmentResponse, GetServerConfigurationResponse, GetServerInformationResponse, GetServerStatusResponse, GetServerTroubleshootingResponse, GetItemStaticFileData, GetItemStaticFileResponse, GetTreeStaticFileAncestorsData, GetTreeStaticFileAncestorsResponse, GetTreeStaticFileChildrenData, GetTreeStaticFileChildrenResponse, GetTreeStaticFileRootData, GetTreeStaticFileRootResponse, GetItemStylesheetData, GetItemStylesheetResponse, PostStylesheetData, PostStylesheetResponse, GetStylesheetByPathData, GetStylesheetByPathResponse, DeleteStylesheetByPathData, DeleteStylesheetByPathResponse, PutStylesheetByPathData, PutStylesheetByPathResponse, PutStylesheetByPathRenameData, PutStylesheetByPathRenameResponse, PostStylesheetFolderData, PostStylesheetFolderResponse, GetStylesheetFolderByPathData, GetStylesheetFolderByPathResponse, DeleteStylesheetFolderByPathData, DeleteStylesheetFolderByPathResponse, GetTreeStylesheetAncestorsData, GetTreeStylesheetAncestorsResponse, GetTreeStylesheetChildrenData, GetTreeStylesheetChildrenResponse, GetTreeStylesheetRootData, GetTreeStylesheetRootResponse, GetTagData, GetTagResponse, GetTelemetryData, GetTelemetryResponse, GetTelemetryLevelResponse, PostTelemetryLevelData, PostTelemetryLevelResponse, GetItemTemplateData, GetItemTemplateResponse, GetItemTemplateSearchData, GetItemTemplateSearchResponse, PostTemplateData, PostTemplateResponse, GetTemplateByIdData, GetTemplateByIdResponse, DeleteTemplateByIdData, DeleteTemplateByIdResponse, PutTemplateByIdData, PutTemplateByIdResponse, GetTemplateConfigurationResponse, PostTemplateQueryExecuteData, PostTemplateQueryExecuteResponse, GetTemplateQuerySettingsResponse, GetTreeTemplateAncestorsData, GetTreeTemplateAncestorsResponse, GetTreeTemplateChildrenData, GetTreeTemplateChildrenResponse, GetTreeTemplateRootData, GetTreeTemplateRootResponse, PostTemporaryFileData, PostTemporaryFileResponse, GetTemporaryFileByIdData, GetTemporaryFileByIdResponse, DeleteTemporaryFileByIdData, DeleteTemporaryFileByIdResponse, GetTemporaryFileConfigurationResponse, PostUpgradeAuthorizeResponse, GetUpgradeSettingsResponse, PostUserDataData, PostUserDataResponse, GetUserDataData, GetUserDataResponse, PutUserDataData, PutUserDataResponse, GetUserDataByIdData, GetUserDataByIdResponse, GetFilterUserGroupData, GetFilterUserGroupResponse, GetItemUserGroupData, GetItemUserGroupResponse, DeleteUserGroupData, DeleteUserGroupResponse, PostUserGroupData, PostUserGroupResponse, GetUserGroupData, GetUserGroupResponse, GetUserGroupByIdData, GetUserGroupByIdResponse, DeleteUserGroupByIdData, DeleteUserGroupByIdResponse, PutUserGroupByIdData, PutUserGroupByIdResponse, DeleteUserGroupByIdUsersData, DeleteUserGroupByIdUsersResponse, PostUserGroupByIdUsersData, PostUserGroupByIdUsersResponse, GetFilterUserData, GetFilterUserResponse, GetItemUserData, GetItemUserResponse, PostUserData, PostUserResponse, DeleteUserData, DeleteUserResponse, GetUserData, GetUserResponse, GetUserByIdData, GetUserByIdResponse, DeleteUserByIdData, DeleteUserByIdResponse, PutUserByIdData, PutUserByIdResponse, GetUserById2FaData, GetUserById2FaResponse, DeleteUserById2FaByProviderNameData, DeleteUserById2FaByProviderNameResponse, PostUserByIdChangePasswordData, PostUserByIdChangePasswordResponse, PostUserByIdResetPasswordData, PostUserByIdResetPasswordResponse, DeleteUserAvatarByIdData, DeleteUserAvatarByIdResponse, PostUserAvatarByIdData, PostUserAvatarByIdResponse, GetUserConfigurationResponse, GetUserCurrentResponse, GetUserCurrent2FaResponse, DeleteUserCurrent2FaByProviderNameData, DeleteUserCurrent2FaByProviderNameResponse, PostUserCurrent2FaByProviderNameData, PostUserCurrent2FaByProviderNameResponse, GetUserCurrent2FaByProviderNameData, GetUserCurrent2FaByProviderNameResponse, PostUserCurrentAvatarData, PostUserCurrentAvatarResponse, PostUserCurrentChangePasswordData, PostUserCurrentChangePasswordResponse, GetUserCurrentConfigurationResponse, GetUserCurrentLoginProvidersResponse, GetUserCurrentPermissionsData, GetUserCurrentPermissionsResponse, GetUserCurrentPermissionsDocumentData, GetUserCurrentPermissionsDocumentResponse, GetUserCurrentPermissionsMediaData, GetUserCurrentPermissionsMediaResponse, PostUserDisableData, PostUserDisableResponse, PostUserEnableData, PostUserEnableResponse, PostUserInviteData, PostUserInviteResponse, PostUserInviteCreatePasswordData, PostUserInviteCreatePasswordResponse, PostUserInviteResendData, PostUserInviteResendResponse, PostUserInviteVerifyData, PostUserInviteVerifyResponse, PostUserSetUserGroupsData, PostUserSetUserGroupsResponse, PostUserUnlockData, PostUserUnlockResponse, GetItemWebhookData, GetItemWebhookResponse, GetWebhookData, GetWebhookResponse, PostWebhookData, PostWebhookResponse, GetWebhookByIdData, GetWebhookByIdResponse, DeleteWebhookByIdData, DeleteWebhookByIdResponse, PutWebhookByIdData, PutWebhookByIdResponse, GetWebhookEventsData, GetWebhookEventsResponse } from './types.gen';\n\nexport class ContentmentService {\n    /**\n     * @param data The data for the request.\n     * @param data.type\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getContentmentConfigurationEditorModels(data: GetContentmentConfigurationEditorModelsData = {}): CancelablePromise<GetContentmentConfigurationEditorModelsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/contentment/configuration-editor/models',\n            query: {\n                type: data.type\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postContentmentDataListEditor(data: PostContentmentDataListEditorData = {}): CancelablePromise<PostContentmentDataListEditorResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/contentment/data-list/editor',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class CultureService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getCulture(data: GetCultureData = {}): CancelablePromise<GetCultureResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/culture',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}\n\nexport class DataTypeService {\n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDataType(data: PostDataTypeData = {}): CancelablePromise<PostDataTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/data-type',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDataTypeById(data: GetDataTypeByIdData): CancelablePromise<GetDataTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/data-type/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteDataTypeById(data: DeleteDataTypeByIdData): CancelablePromise<DeleteDataTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/data-type/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDataTypeById(data: PutDataTypeByIdData): CancelablePromise<PutDataTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/data-type/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDataTypeByIdCopy(data: PostDataTypeByIdCopyData): CancelablePromise<PostDataTypeByIdCopyResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/data-type/{id}/copy',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns boolean OK\n     * @throws ApiError\n     */\n    public static getDataTypeByIdIsUsed(data: GetDataTypeByIdIsUsedData): CancelablePromise<GetDataTypeByIdIsUsedResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/data-type/{id}/is-used',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDataTypeByIdMove(data: PutDataTypeByIdMoveData): CancelablePromise<PutDataTypeByIdMoveResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/data-type/{id}/move',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDataTypeByIdReferences(data: GetDataTypeByIdReferencesData): CancelablePromise<GetDataTypeByIdReferencesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/data-type/{id}/references',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDataTypeConfiguration(): CancelablePromise<GetDataTypeConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/data-type/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDataTypeFolder(data: PostDataTypeFolderData = {}): CancelablePromise<PostDataTypeFolderResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/data-type/folder',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDataTypeFolderById(data: GetDataTypeFolderByIdData): CancelablePromise<GetDataTypeFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/data-type/folder/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteDataTypeFolderById(data: DeleteDataTypeFolderByIdData): CancelablePromise<DeleteDataTypeFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/data-type/folder/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDataTypeFolderById(data: PutDataTypeFolderByIdData): CancelablePromise<PutDataTypeFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/data-type/folder/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.name\n     * @param data.editorUiAlias\n     * @param data.editorAlias\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getFilterDataType(data: GetFilterDataTypeData = {}): CancelablePromise<GetFilterDataTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/filter/data-type',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                name: data.name,\n                editorUiAlias: data.editorUiAlias,\n                editorAlias: data.editorAlias\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemDataType(data: GetItemDataTypeData = {}): CancelablePromise<GetItemDataTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/data-type',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.query\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemDataTypeSearch(data: GetItemDataTypeSearchData = {}): CancelablePromise<GetItemDataTypeSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/data-type/search',\n            query: {\n                query: data.query,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDataTypeAncestors(data: GetTreeDataTypeAncestorsData = {}): CancelablePromise<GetTreeDataTypeAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/data-type/ancestors',\n            query: {\n                descendantId: data.descendantId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @param data.foldersOnly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDataTypeChildren(data: GetTreeDataTypeChildrenData = {}): CancelablePromise<GetTreeDataTypeChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/data-type/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take,\n                foldersOnly: data.foldersOnly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.foldersOnly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDataTypeRoot(data: GetTreeDataTypeRootData = {}): CancelablePromise<GetTreeDataTypeRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/data-type/root',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                foldersOnly: data.foldersOnly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class DictionaryService {\n    /**\n     * @param data The data for the request.\n     * @param data.filter\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDictionary(data: GetDictionaryData = {}): CancelablePromise<GetDictionaryResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/dictionary',\n            query: {\n                filter: data.filter,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDictionary(data: PostDictionaryData = {}): CancelablePromise<PostDictionaryResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/dictionary',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found',\n                409: 'Conflict'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDictionaryById(data: GetDictionaryByIdData): CancelablePromise<GetDictionaryByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/dictionary/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteDictionaryById(data: DeleteDictionaryByIdData): CancelablePromise<DeleteDictionaryByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/dictionary/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDictionaryById(data: PutDictionaryByIdData): CancelablePromise<PutDictionaryByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/dictionary/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.includeChildren\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDictionaryByIdExport(data: GetDictionaryByIdExportData): CancelablePromise<GetDictionaryByIdExportResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/dictionary/{id}/export',\n            path: {\n                id: data.id\n            },\n            query: {\n                includeChildren: data.includeChildren\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDictionaryByIdMove(data: PutDictionaryByIdMoveData): CancelablePromise<PutDictionaryByIdMoveResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/dictionary/{id}/move',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDictionaryImport(data: PostDictionaryImportData = {}): CancelablePromise<PostDictionaryImportResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/dictionary/import',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemDictionary(data: GetItemDictionaryData = {}): CancelablePromise<GetItemDictionaryResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/dictionary',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDictionaryAncestors(data: GetTreeDictionaryAncestorsData = {}): CancelablePromise<GetTreeDictionaryAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/dictionary/ancestors',\n            query: {\n                descendantId: data.descendantId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDictionaryChildren(data: GetTreeDictionaryChildrenData = {}): CancelablePromise<GetTreeDictionaryChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/dictionary/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDictionaryRoot(data: GetTreeDictionaryRootData = {}): CancelablePromise<GetTreeDictionaryRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/dictionary/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class DocumentBlueprintService {\n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocumentBlueprint(data: PostDocumentBlueprintData = {}): CancelablePromise<PostDocumentBlueprintResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document-blueprint',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentBlueprintById(data: GetDocumentBlueprintByIdData): CancelablePromise<GetDocumentBlueprintByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-blueprint/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteDocumentBlueprintById(data: DeleteDocumentBlueprintByIdData): CancelablePromise<DeleteDocumentBlueprintByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/document-blueprint/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentBlueprintById(data: PutDocumentBlueprintByIdData): CancelablePromise<PutDocumentBlueprintByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document-blueprint/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentBlueprintByIdMove(data: PutDocumentBlueprintByIdMoveData): CancelablePromise<PutDocumentBlueprintByIdMoveResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document-blueprint/{id}/move',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocumentBlueprintFolder(data: PostDocumentBlueprintFolderData = {}): CancelablePromise<PostDocumentBlueprintFolderResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document-blueprint/folder',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentBlueprintFolderById(data: GetDocumentBlueprintFolderByIdData): CancelablePromise<GetDocumentBlueprintFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-blueprint/folder/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteDocumentBlueprintFolderById(data: DeleteDocumentBlueprintFolderByIdData): CancelablePromise<DeleteDocumentBlueprintFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/document-blueprint/folder/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentBlueprintFolderById(data: PutDocumentBlueprintFolderByIdData): CancelablePromise<PutDocumentBlueprintFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document-blueprint/folder/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocumentBlueprintFromDocument(data: PostDocumentBlueprintFromDocumentData = {}): CancelablePromise<PostDocumentBlueprintFromDocumentResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document-blueprint/from-document',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemDocumentBlueprint(data: GetItemDocumentBlueprintData = {}): CancelablePromise<GetItemDocumentBlueprintResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/document-blueprint',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDocumentBlueprintAncestors(data: GetTreeDocumentBlueprintAncestorsData = {}): CancelablePromise<GetTreeDocumentBlueprintAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/document-blueprint/ancestors',\n            query: {\n                descendantId: data.descendantId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @param data.foldersOnly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDocumentBlueprintChildren(data: GetTreeDocumentBlueprintChildrenData = {}): CancelablePromise<GetTreeDocumentBlueprintChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/document-blueprint/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take,\n                foldersOnly: data.foldersOnly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.foldersOnly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDocumentBlueprintRoot(data: GetTreeDocumentBlueprintRootData = {}): CancelablePromise<GetTreeDocumentBlueprintRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/document-blueprint/root',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                foldersOnly: data.foldersOnly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class DocumentTypeService {\n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocumentType(data: PostDocumentTypeData = {}): CancelablePromise<PostDocumentTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document-type',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentTypeById(data: GetDocumentTypeByIdData): CancelablePromise<GetDocumentTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-type/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteDocumentTypeById(data: DeleteDocumentTypeByIdData): CancelablePromise<DeleteDocumentTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/document-type/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentTypeById(data: PutDocumentTypeByIdData): CancelablePromise<PutDocumentTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document-type/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentTypeByIdAllowedChildren(data: GetDocumentTypeByIdAllowedChildrenData): CancelablePromise<GetDocumentTypeByIdAllowedChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-type/{id}/allowed-children',\n            path: {\n                id: data.id\n            },\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentTypeByIdBlueprint(data: GetDocumentTypeByIdBlueprintData): CancelablePromise<GetDocumentTypeByIdBlueprintResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-type/{id}/blueprint',\n            path: {\n                id: data.id\n            },\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentTypeByIdCompositionReferences(data: GetDocumentTypeByIdCompositionReferencesData): CancelablePromise<GetDocumentTypeByIdCompositionReferencesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-type/{id}/composition-references',\n            path: {\n                id: data.id\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocumentTypeByIdCopy(data: PostDocumentTypeByIdCopyData): CancelablePromise<PostDocumentTypeByIdCopyResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document-type/{id}/copy',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentTypeByIdExport(data: GetDocumentTypeByIdExportData): CancelablePromise<GetDocumentTypeByIdExportResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-type/{id}/export',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentTypeByIdImport(data: PutDocumentTypeByIdImportData): CancelablePromise<PutDocumentTypeByIdImportResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document-type/{id}/import',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentTypeByIdMove(data: PutDocumentTypeByIdMoveData): CancelablePromise<PutDocumentTypeByIdMoveResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document-type/{id}/move',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentTypeAllowedAtRoot(data: GetDocumentTypeAllowedAtRootData = {}): CancelablePromise<GetDocumentTypeAllowedAtRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-type/allowed-at-root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postDocumentTypeAvailableCompositions(data: PostDocumentTypeAvailableCompositionsData = {}): CancelablePromise<PostDocumentTypeAvailableCompositionsResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document-type/available-compositions',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentTypeConfiguration(): CancelablePromise<GetDocumentTypeConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-type/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocumentTypeFolder(data: PostDocumentTypeFolderData = {}): CancelablePromise<PostDocumentTypeFolderResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document-type/folder',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentTypeFolderById(data: GetDocumentTypeFolderByIdData): CancelablePromise<GetDocumentTypeFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-type/folder/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteDocumentTypeFolderById(data: DeleteDocumentTypeFolderByIdData): CancelablePromise<DeleteDocumentTypeFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/document-type/folder/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentTypeFolderById(data: PutDocumentTypeFolderByIdData): CancelablePromise<PutDocumentTypeFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document-type/folder/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocumentTypeImport(data: PostDocumentTypeImportData = {}): CancelablePromise<PostDocumentTypeImportResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document-type/import',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemDocumentType(data: GetItemDocumentTypeData = {}): CancelablePromise<GetItemDocumentTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/document-type',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.query\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemDocumentTypeSearch(data: GetItemDocumentTypeSearchData = {}): CancelablePromise<GetItemDocumentTypeSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/document-type/search',\n            query: {\n                query: data.query,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDocumentTypeAncestors(data: GetTreeDocumentTypeAncestorsData = {}): CancelablePromise<GetTreeDocumentTypeAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/document-type/ancestors',\n            query: {\n                descendantId: data.descendantId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @param data.foldersOnly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDocumentTypeChildren(data: GetTreeDocumentTypeChildrenData = {}): CancelablePromise<GetTreeDocumentTypeChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/document-type/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take,\n                foldersOnly: data.foldersOnly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.foldersOnly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDocumentTypeRoot(data: GetTreeDocumentTypeRootData = {}): CancelablePromise<GetTreeDocumentTypeRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/document-type/root',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                foldersOnly: data.foldersOnly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class DocumentVersionService {\n    /**\n     * @param data The data for the request.\n     * @param data.documentId\n     * @param data.culture\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentVersion(data: GetDocumentVersionData): CancelablePromise<GetDocumentVersionResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-version',\n            query: {\n                documentId: data.documentId,\n                culture: data.culture,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentVersionById(data: GetDocumentVersionByIdData): CancelablePromise<GetDocumentVersionByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document-version/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.preventCleanup\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentVersionByIdPreventCleanup(data: PutDocumentVersionByIdPreventCleanupData): CancelablePromise<PutDocumentVersionByIdPreventCleanupResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document-version/{id}/prevent-cleanup',\n            path: {\n                id: data.id\n            },\n            query: {\n                preventCleanup: data.preventCleanup\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.culture\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postDocumentVersionByIdRollback(data: PostDocumentVersionByIdRollbackData): CancelablePromise<PostDocumentVersionByIdRollbackResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document-version/{id}/rollback',\n            path: {\n                id: data.id\n            },\n            query: {\n                culture: data.culture\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class DocumentService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.dataTypeId\n     * @param data.orderBy\n     * @param data.orderCulture\n     * @param data.orderDirection\n     * @param data.filter\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getCollectionDocumentById(data: GetCollectionDocumentByIdData): CancelablePromise<GetCollectionDocumentByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/collection/document/{id}',\n            path: {\n                id: data.id\n            },\n            query: {\n                dataTypeId: data.dataTypeId,\n                orderBy: data.orderBy,\n                orderCulture: data.orderCulture,\n                orderDirection: data.orderDirection,\n                filter: data.filter,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocument(data: PostDocumentData = {}): CancelablePromise<PostDocumentResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentById(data: GetDocumentByIdData): CancelablePromise<GetDocumentByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteDocumentById(data: DeleteDocumentByIdData): CancelablePromise<DeleteDocumentByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/document/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentById(data: PutDocumentByIdData): CancelablePromise<PutDocumentByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.orderDirection\n     * @param data.sinceDate\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentByIdAuditLog(data: GetDocumentByIdAuditLogData): CancelablePromise<GetDocumentByIdAuditLogResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/{id}/audit-log',\n            path: {\n                id: data.id\n            },\n            query: {\n                orderDirection: data.orderDirection,\n                sinceDate: data.sinceDate,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocumentByIdCopy(data: PostDocumentByIdCopyData): CancelablePromise<PostDocumentByIdCopyResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document/{id}/copy',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentByIdDomains(data: GetDocumentByIdDomainsData): CancelablePromise<GetDocumentByIdDomainsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/{id}/domains',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentByIdDomains(data: PutDocumentByIdDomainsData): CancelablePromise<PutDocumentByIdDomainsResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}/domains',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found',\n                409: 'Conflict'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentByIdMove(data: PutDocumentByIdMoveData): CancelablePromise<PutDocumentByIdMoveResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}/move',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentByIdMoveToRecycleBin(data: PutDocumentByIdMoveToRecycleBinData): CancelablePromise<PutDocumentByIdMoveToRecycleBinResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}/move-to-recycle-bin',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentByIdNotifications(data: GetDocumentByIdNotificationsData): CancelablePromise<GetDocumentByIdNotificationsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/{id}/notifications',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentByIdNotifications(data: PutDocumentByIdNotificationsData): CancelablePromise<PutDocumentByIdNotificationsResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}/notifications',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postDocumentByIdPublicAccess(data: PostDocumentByIdPublicAccessData): CancelablePromise<PostDocumentByIdPublicAccessResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document/{id}/public-access',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteDocumentByIdPublicAccess(data: DeleteDocumentByIdPublicAccessData): CancelablePromise<DeleteDocumentByIdPublicAccessResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/document/{id}/public-access',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentByIdPublicAccess(data: GetDocumentByIdPublicAccessData): CancelablePromise<GetDocumentByIdPublicAccessResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/{id}/public-access',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentByIdPublicAccess(data: PutDocumentByIdPublicAccessData): CancelablePromise<PutDocumentByIdPublicAccessResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}/public-access',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentByIdPublish(data: PutDocumentByIdPublishData): CancelablePromise<PutDocumentByIdPublishResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}/publish',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentByIdPublishWithDescendants(data: PutDocumentByIdPublishWithDescendantsData): CancelablePromise<PutDocumentByIdPublishWithDescendantsResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}/publish-with-descendants',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentByIdReferencedBy(data: GetDocumentByIdReferencedByData): CancelablePromise<GetDocumentByIdReferencedByResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/{id}/referenced-by',\n            path: {\n                id: data.id\n            },\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentByIdReferencedDescendants(data: GetDocumentByIdReferencedDescendantsData): CancelablePromise<GetDocumentByIdReferencedDescendantsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/{id}/referenced-descendants',\n            path: {\n                id: data.id\n            },\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentByIdUnpublish(data: PutDocumentByIdUnpublishData): CancelablePromise<PutDocumentByIdUnpublishResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}/unpublish',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentByIdValidate(data: PutDocumentByIdValidateData): CancelablePromise<PutDocumentByIdValidateResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/{id}/validate',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentAreReferenced(data: GetDocumentAreReferencedData = {}): CancelablePromise<GetDocumentAreReferencedResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/are-referenced',\n            query: {\n                id: data.id,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentConfiguration(): CancelablePromise<GetDocumentConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putDocumentSort(data: PutDocumentSortData = {}): CancelablePromise<PutDocumentSortResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/document/sort',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDocumentUrls(data: GetDocumentUrlsData = {}): CancelablePromise<GetDocumentUrlsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/document/urls',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postDocumentValidate(data: PostDocumentValidateData = {}): CancelablePromise<PostDocumentValidateResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/document/validate',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemDocument(data: GetItemDocumentData = {}): CancelablePromise<GetItemDocumentResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/document',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.query\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemDocumentSearch(data: GetItemDocumentSearchData = {}): CancelablePromise<GetItemDocumentSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/document/search',\n            query: {\n                query: data.query,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteRecycleBinDocument(): CancelablePromise<DeleteRecycleBinDocumentResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/recycle-bin/document',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteRecycleBinDocumentById(data: DeleteRecycleBinDocumentByIdData): CancelablePromise<DeleteRecycleBinDocumentByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/recycle-bin/document/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRecycleBinDocumentByIdOriginalParent(data: GetRecycleBinDocumentByIdOriginalParentData): CancelablePromise<GetRecycleBinDocumentByIdOriginalParentResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/recycle-bin/document/{id}/original-parent',\n            path: {\n                id: data.id\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putRecycleBinDocumentByIdRestore(data: PutRecycleBinDocumentByIdRestoreData): CancelablePromise<PutRecycleBinDocumentByIdRestoreResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/recycle-bin/document/{id}/restore',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRecycleBinDocumentChildren(data: GetRecycleBinDocumentChildrenData = {}): CancelablePromise<GetRecycleBinDocumentChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/recycle-bin/document/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRecycleBinDocumentRoot(data: GetRecycleBinDocumentRootData = {}): CancelablePromise<GetRecycleBinDocumentRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/recycle-bin/document/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDocumentAncestors(data: GetTreeDocumentAncestorsData = {}): CancelablePromise<GetTreeDocumentAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/document/ancestors',\n            query: {\n                descendantId: data.descendantId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @param data.dataTypeId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDocumentChildren(data: GetTreeDocumentChildrenData = {}): CancelablePromise<GetTreeDocumentChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/document/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take,\n                dataTypeId: data.dataTypeId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.dataTypeId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeDocumentRoot(data: GetTreeDocumentRootData = {}): CancelablePromise<GetTreeDocumentRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/document/root',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                dataTypeId: data.dataTypeId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class DynamicRootService {\n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postDynamicRootQuery(data: PostDynamicRootQueryData = {}): CancelablePromise<PostDynamicRootQueryResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/dynamic-root/query',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static getDynamicRootSteps(): CancelablePromise<GetDynamicRootStepsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/dynamic-root/steps',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class GodModeService {\n    /**\n     * @param data The data for the request.\n     * @param data.cache\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postUmbracoManagementApiV1GodModeClearUmbracoCache(data: PostUmbracoManagementApiV1GodModeClearUmbracoCacheData = {}): CancelablePromise<PostUmbracoManagementApiV1GodModeClearUmbracoCacheResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/god-mode/ClearUmbracoCache',\n            query: {\n                cache: data.cache\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postUmbracoManagementApiV1GodModeCopyDataType(data: PostUmbracoManagementApiV1GodModeCopyDataTypeData = {}): CancelablePromise<PostUmbracoManagementApiV1GodModeCopyDataTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/god-mode/CopyDataType',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postUmbracoManagementApiV1GodModeDeleteTag(data: PostUmbracoManagementApiV1GodModeDeleteTagData = {}): CancelablePromise<PostUmbracoManagementApiV1GodModeDeleteTagResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/god-mode/DeleteTag',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns number OK\n     * @throws ApiError\n     */\n    public static postUmbracoManagementApiV1GodModeFixTemplateMasters(): CancelablePromise<PostUmbracoManagementApiV1GodModeFixTemplateMastersResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/god-mode/FixTemplateMasters',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetApiControllers(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetApiControllersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetApiControllers',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetAssemblies(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetAssembliesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetAssemblies',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetAssembliesWithInterfaces(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetAssembliesWithInterfacesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetAssembliesWithInterfaces',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetComposers(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetComposersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetComposers',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetCompositions(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetCompositionsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetCompositions',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetConfig(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetConfigResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetConfig',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetContentFinders(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetContentFindersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetContentFinders',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.page\n     * @param data.pageSize\n     * @param data.name\n     * @param data.alias\n     * @param data.creatorId\n     * @param data.id\n     * @param data.level\n     * @param data.trashed\n     * @param data.updaterId\n     * @param data.languageId\n     * @param data.orderBy\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetContentPaged(data: GetUmbracoManagementApiV1GodModeGetContentPagedData = {}): CancelablePromise<GetUmbracoManagementApiV1GodModeGetContentPagedResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetContentPaged',\n            query: {\n                page: data.page,\n                pageSize: data.pageSize,\n                name: data.name,\n                alias: data.alias,\n                creatorId: data.creatorId,\n                id: data.id,\n                level: data.level,\n                trashed: data.trashed,\n                updaterId: data.updaterId,\n                languageId: data.languageId,\n                orderBy: data.orderBy\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetContentTypeAliases(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetContentTypeAliasesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetContentTypeAliases',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetContentTypeMap(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetContentTypeMapResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetContentTypeMap',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.orderBy\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetContentUsageData(data: GetUmbracoManagementApiV1GodModeGetContentUsageDataData = {}): CancelablePromise<GetUmbracoManagementApiV1GodModeGetContentUsageDataResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetContentUsageData',\n            query: {\n                id: data.id,\n                orderBy: data.orderBy\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetDataTypes(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetDataTypesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetDataTypes',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetDataTypesStatus(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetDataTypesStatusResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetDataTypesStatus',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetEnvironmentDiagnostics(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetEnvironmentDiagnosticsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetEnvironmentDiagnostics',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.assembly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetInterfacesFrom(data: GetUmbracoManagementApiV1GodModeGetInterfacesFromData = {}): CancelablePromise<GetUmbracoManagementApiV1GodModeGetInterfacesFromResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetInterfacesFrom',\n            query: {\n                assembly: data.assembly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetLanguages(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetLanguagesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetLanguages',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.page\n     * @param data.pageSize\n     * @param data.name\n     * @param data.id\n     * @param data.mediaTypeId\n     * @param data.orderBy\n     * @param data.orderByDir\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetMedia(data: GetUmbracoManagementApiV1GodModeGetMediaData = {}): CancelablePromise<GetUmbracoManagementApiV1GodModeGetMediaResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetMedia',\n            query: {\n                page: data.page,\n                pageSize: data.pageSize,\n                name: data.name,\n                id: data.id,\n                mediaTypeId: data.mediaTypeId,\n                orderBy: data.orderBy,\n                orderByDir: data.orderByDir\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetMediaTypes(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetMediaTypesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetMediaTypes',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetMemberGroups(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetMemberGroupsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetMemberGroups',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.page\n     * @param data.pageSize\n     * @param data.groupId\n     * @param data.search\n     * @param data.orderBy\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetMembersPaged(data: GetUmbracoManagementApiV1GodModeGetMembersPagedData = {}): CancelablePromise<GetUmbracoManagementApiV1GodModeGetMembersPagedResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetMembersPaged',\n            query: {\n                page: data.page,\n                pageSize: data.pageSize,\n                groupId: data.groupId,\n                search: data.search,\n                orderBy: data.orderBy\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetNonMsAssemblies(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetNonMsAssembliesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetNonMsAssemblies',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetNuCacheItem(data: GetUmbracoManagementApiV1GodModeGetNuCacheItemData = {}): CancelablePromise<GetUmbracoManagementApiV1GodModeGetNuCacheItemResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetNuCacheItem',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetNuCacheType(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetNuCacheTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetNuCacheType',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetOrphanedTags(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetOrphanedTagsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetOrphanedTags',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetPropertyEditors(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetPropertyEditorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetPropertyEditors',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetPropertyGroups(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetPropertyGroupsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetPropertyGroups',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetPropertyValueConverters(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetPropertyValueConvertersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetPropertyValueConverters',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetPublishedContentModels(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetPublishedContentModelsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetPublishedContentModels',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetRegisteredServices(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetRegisteredServicesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetRegisteredServices',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetRenderMvcControllers(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetRenderMvcControllersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetRenderMvcControllers',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetStandardContentTypeAliases(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetStandardContentTypeAliasesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetStandardContentTypeAliases',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetSurfaceControllers(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetSurfaceControllersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetSurfaceControllers',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetTagHelpers(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetTagHelpersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetTagHelpers',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetTagMapping(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetTagMappingResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetTagMapping',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetTemplates(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetTemplatesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetTemplates',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetTemplateUrlsToPing(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetTemplateUrlsToPingResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetTemplateUrlsToPing',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.baseType\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetTypesAssignableFrom(data: GetUmbracoManagementApiV1GodModeGetTypesAssignableFromData = {}): CancelablePromise<GetUmbracoManagementApiV1GodModeGetTypesAssignableFromResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetTypesAssignableFrom',\n            query: {\n                baseType: data.baseType\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.assembly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetTypesFrom(data: GetUmbracoManagementApiV1GodModeGetTypesFromData = {}): CancelablePromise<GetUmbracoManagementApiV1GodModeGetTypesFromResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetTypesFrom',\n            query: {\n                assembly: data.assembly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetUmbracoAssemblies(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetUmbracoAssembliesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetUmbracoAssemblies',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetUrlProviders(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetUrlProvidersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetUrlProviders',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.culture\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetUrlsToPing(data: GetUmbracoManagementApiV1GodModeGetUrlsToPingData = {}): CancelablePromise<GetUmbracoManagementApiV1GodModeGetUrlsToPingResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetUrlsToPing',\n            query: {\n                culture: data.culture\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUmbracoManagementApiV1GodModeGetViewComponents(): CancelablePromise<GetUmbracoManagementApiV1GodModeGetViewComponentsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/god-mode/GetViewComponents',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postUmbracoManagementApiV1GodModePurgeMediaCache(): CancelablePromise<PostUmbracoManagementApiV1GodModePurgeMediaCacheResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/god-mode/PurgeMediaCache',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postUmbracoManagementApiV1GodModeRestartAppPool(): CancelablePromise<PostUmbracoManagementApiV1GodModeRestartAppPoolResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/god-mode/RestartAppPool',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class HealthCheckService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getHealthCheckGroup(data: GetHealthCheckGroupData = {}): CancelablePromise<GetHealthCheckGroupResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/health-check-group',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.name\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getHealthCheckGroupByName(data: GetHealthCheckGroupByNameData): CancelablePromise<GetHealthCheckGroupByNameResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/health-check-group/{name}',\n            path: {\n                name: data.name\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.name\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postHealthCheckGroupByNameCheck(data: PostHealthCheckGroupByNameCheckData): CancelablePromise<PostHealthCheckGroupByNameCheckResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/health-check-group/{name}/check',\n            path: {\n                name: data.name\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postHealthCheckExecuteAction(data: PostHealthCheckExecuteActionData = {}): CancelablePromise<PostHealthCheckExecuteActionResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/health-check/execute-action',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class HelpService {\n    /**\n     * @param data The data for the request.\n     * @param data.section\n     * @param data.tree\n     * @param data.skip\n     * @param data.take\n     * @param data.baseUrl\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getHelp(data: GetHelpData = {}): CancelablePromise<GetHelpResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/help',\n            query: {\n                section: data.section,\n                tree: data.tree,\n                skip: data.skip,\n                take: data.take,\n                baseUrl: data.baseUrl\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}\n\nexport class ImagingService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.height\n     * @param data.width\n     * @param data.mode\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getImagingResizeUrls(data: GetImagingResizeUrlsData = {}): CancelablePromise<GetImagingResizeUrlsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/imaging/resize/urls',\n            query: {\n                id: data.id,\n                height: data.height,\n                width: data.width,\n                mode: data.mode\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class ImportService {\n    /**\n     * @param data The data for the request.\n     * @param data.temporaryFileId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getImportAnalyze(data: GetImportAnalyzeData = {}): CancelablePromise<GetImportAnalyzeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/import/analyze',\n            query: {\n                temporaryFileId: data.temporaryFileId\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class IndexerService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getIndexer(data: GetIndexerData = {}): CancelablePromise<GetIndexerResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/indexer',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.indexName\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getIndexerByIndexName(data: GetIndexerByIndexNameData): CancelablePromise<GetIndexerByIndexNameResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/indexer/{indexName}',\n            path: {\n                indexName: data.indexName\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.indexName\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postIndexerByIndexNameRebuild(data: PostIndexerByIndexNameRebuildData): CancelablePromise<PostIndexerByIndexNameRebuildResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/indexer/{indexName}/rebuild',\n            path: {\n                indexName: data.indexName\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found',\n                409: 'Conflict'\n            }\n        });\n    }\n    \n}\n\nexport class InstallService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getInstallSettings(): CancelablePromise<GetInstallSettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/install/settings',\n            errors: {\n                428: 'Precondition Required'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postInstallSetup(data: PostInstallSetupData = {}): CancelablePromise<PostInstallSetupResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/install/setup',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                428: 'Precondition Required'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postInstallValidateDatabase(data: PostInstallValidateDatabaseData = {}): CancelablePromise<PostInstallValidateDatabaseResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/install/validate-database',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request'\n            }\n        });\n    }\n    \n}\n\nexport class LanguageService {\n    /**\n     * @param data The data for the request.\n     * @param data.isoCode\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemLanguage(data: GetItemLanguageData = {}): CancelablePromise<GetItemLanguageResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/language',\n            query: {\n                isoCode: data.isoCode\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemLanguageDefault(): CancelablePromise<GetItemLanguageDefaultResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/language/default',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLanguage(data: GetLanguageData = {}): CancelablePromise<GetLanguageResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/language',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postLanguage(data: PostLanguageData = {}): CancelablePromise<PostLanguageResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/language',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.isoCode\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLanguageByIsoCode(data: GetLanguageByIsoCodeData): CancelablePromise<GetLanguageByIsoCodeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/language/{isoCode}',\n            path: {\n                isoCode: data.isoCode\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.isoCode\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteLanguageByIsoCode(data: DeleteLanguageByIsoCodeData): CancelablePromise<DeleteLanguageByIsoCodeResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/language/{isoCode}',\n            path: {\n                isoCode: data.isoCode\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.isoCode\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putLanguageByIsoCode(data: PutLanguageByIsoCodeData): CancelablePromise<PutLanguageByIsoCodeResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/language/{isoCode}',\n            path: {\n                isoCode: data.isoCode\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class LogViewerService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLogViewerLevel(data: GetLogViewerLevelData = {}): CancelablePromise<GetLogViewerLevelResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/log-viewer/level',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.startDate\n     * @param data.endDate\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLogViewerLevelCount(data: GetLogViewerLevelCountData = {}): CancelablePromise<GetLogViewerLevelCountResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/log-viewer/level-count',\n            query: {\n                startDate: data.startDate,\n                endDate: data.endDate\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.orderDirection\n     * @param data.filterExpression\n     * @param data.logLevel\n     * @param data.startDate\n     * @param data.endDate\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLogViewerLog(data: GetLogViewerLogData = {}): CancelablePromise<GetLogViewerLogResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/log-viewer/log',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                orderDirection: data.orderDirection,\n                filterExpression: data.filterExpression,\n                logLevel: data.logLevel,\n                startDate: data.startDate,\n                endDate: data.endDate\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.startDate\n     * @param data.endDate\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLogViewerMessageTemplate(data: GetLogViewerMessageTemplateData = {}): CancelablePromise<GetLogViewerMessageTemplateResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/log-viewer/message-template',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                startDate: data.startDate,\n                endDate: data.endDate\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLogViewerSavedSearch(data: GetLogViewerSavedSearchData = {}): CancelablePromise<GetLogViewerSavedSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/log-viewer/saved-search',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postLogViewerSavedSearch(data: PostLogViewerSavedSearchData = {}): CancelablePromise<PostLogViewerSavedSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/log-viewer/saved-search',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.name\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLogViewerSavedSearchByName(data: GetLogViewerSavedSearchByNameData): CancelablePromise<GetLogViewerSavedSearchByNameResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/log-viewer/saved-search/{name}',\n            path: {\n                name: data.name\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.name\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteLogViewerSavedSearchByName(data: DeleteLogViewerSavedSearchByNameData): CancelablePromise<DeleteLogViewerSavedSearchByNameResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/log-viewer/saved-search/{name}',\n            path: {\n                name: data.name\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.startDate\n     * @param data.endDate\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLogViewerValidateLogsSize(data: GetLogViewerValidateLogsSizeData = {}): CancelablePromise<GetLogViewerValidateLogsSizeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/log-viewer/validate-logs-size',\n            query: {\n                startDate: data.startDate,\n                endDate: data.endDate\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class ManifestService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getManifestManifest(): CancelablePromise<GetManifestManifestResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/manifest/manifest',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getManifestManifestPrivate(): CancelablePromise<GetManifestManifestPrivateResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/manifest/manifest/private',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getManifestManifestPublic(): CancelablePromise<GetManifestManifestPublicResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/manifest/manifest/public'\n        });\n    }\n    \n}\n\nexport class MediaTypeService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMediaType(data: GetItemMediaTypeData = {}): CancelablePromise<GetItemMediaTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/media-type',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.fileExtension\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMediaTypeAllowed(data: GetItemMediaTypeAllowedData = {}): CancelablePromise<GetItemMediaTypeAllowedResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/media-type/allowed',\n            query: {\n                fileExtension: data.fileExtension,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMediaTypeFolders(data: GetItemMediaTypeFoldersData = {}): CancelablePromise<GetItemMediaTypeFoldersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/media-type/folders',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.query\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMediaTypeSearch(data: GetItemMediaTypeSearchData = {}): CancelablePromise<GetItemMediaTypeSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/media-type/search',\n            query: {\n                query: data.query,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postMediaType(data: PostMediaTypeData = {}): CancelablePromise<PostMediaTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/media-type',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaTypeById(data: GetMediaTypeByIdData): CancelablePromise<GetMediaTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media-type/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteMediaTypeById(data: DeleteMediaTypeByIdData): CancelablePromise<DeleteMediaTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/media-type/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMediaTypeById(data: PutMediaTypeByIdData): CancelablePromise<PutMediaTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/media-type/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaTypeByIdAllowedChildren(data: GetMediaTypeByIdAllowedChildrenData): CancelablePromise<GetMediaTypeByIdAllowedChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media-type/{id}/allowed-children',\n            path: {\n                id: data.id\n            },\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaTypeByIdCompositionReferences(data: GetMediaTypeByIdCompositionReferencesData): CancelablePromise<GetMediaTypeByIdCompositionReferencesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media-type/{id}/composition-references',\n            path: {\n                id: data.id\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postMediaTypeByIdCopy(data: PostMediaTypeByIdCopyData): CancelablePromise<PostMediaTypeByIdCopyResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/media-type/{id}/copy',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaTypeByIdExport(data: GetMediaTypeByIdExportData): CancelablePromise<GetMediaTypeByIdExportResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media-type/{id}/export',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMediaTypeByIdImport(data: PutMediaTypeByIdImportData): CancelablePromise<PutMediaTypeByIdImportResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/media-type/{id}/import',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMediaTypeByIdMove(data: PutMediaTypeByIdMoveData): CancelablePromise<PutMediaTypeByIdMoveResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/media-type/{id}/move',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaTypeAllowedAtRoot(data: GetMediaTypeAllowedAtRootData = {}): CancelablePromise<GetMediaTypeAllowedAtRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media-type/allowed-at-root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postMediaTypeAvailableCompositions(data: PostMediaTypeAvailableCompositionsData = {}): CancelablePromise<PostMediaTypeAvailableCompositionsResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/media-type/available-compositions',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postMediaTypeFolder(data: PostMediaTypeFolderData = {}): CancelablePromise<PostMediaTypeFolderResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/media-type/folder',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaTypeFolderById(data: GetMediaTypeFolderByIdData): CancelablePromise<GetMediaTypeFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media-type/folder/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteMediaTypeFolderById(data: DeleteMediaTypeFolderByIdData): CancelablePromise<DeleteMediaTypeFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/media-type/folder/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMediaTypeFolderById(data: PutMediaTypeFolderByIdData): CancelablePromise<PutMediaTypeFolderByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/media-type/folder/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postMediaTypeImport(data: PostMediaTypeImportData = {}): CancelablePromise<PostMediaTypeImportResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/media-type/import',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeMediaTypeAncestors(data: GetTreeMediaTypeAncestorsData = {}): CancelablePromise<GetTreeMediaTypeAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/media-type/ancestors',\n            query: {\n                descendantId: data.descendantId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @param data.foldersOnly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeMediaTypeChildren(data: GetTreeMediaTypeChildrenData = {}): CancelablePromise<GetTreeMediaTypeChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/media-type/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take,\n                foldersOnly: data.foldersOnly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.foldersOnly\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeMediaTypeRoot(data: GetTreeMediaTypeRootData = {}): CancelablePromise<GetTreeMediaTypeRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/media-type/root',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                foldersOnly: data.foldersOnly\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class MediaService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.dataTypeId\n     * @param data.orderBy\n     * @param data.orderDirection\n     * @param data.filter\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getCollectionMedia(data: GetCollectionMediaData = {}): CancelablePromise<GetCollectionMediaResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/collection/media',\n            query: {\n                id: data.id,\n                dataTypeId: data.dataTypeId,\n                orderBy: data.orderBy,\n                orderDirection: data.orderDirection,\n                filter: data.filter,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMedia(data: GetItemMediaData = {}): CancelablePromise<GetItemMediaResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/media',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.query\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMediaSearch(data: GetItemMediaSearchData = {}): CancelablePromise<GetItemMediaSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/media/search',\n            query: {\n                query: data.query,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postMedia(data: PostMediaData = {}): CancelablePromise<PostMediaResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/media',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaById(data: GetMediaByIdData): CancelablePromise<GetMediaByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteMediaById(data: DeleteMediaByIdData): CancelablePromise<DeleteMediaByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/media/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMediaById(data: PutMediaByIdData): CancelablePromise<PutMediaByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/media/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.orderDirection\n     * @param data.sinceDate\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaByIdAuditLog(data: GetMediaByIdAuditLogData): CancelablePromise<GetMediaByIdAuditLogResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media/{id}/audit-log',\n            path: {\n                id: data.id\n            },\n            query: {\n                orderDirection: data.orderDirection,\n                sinceDate: data.sinceDate,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMediaByIdMove(data: PutMediaByIdMoveData): CancelablePromise<PutMediaByIdMoveResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/media/{id}/move',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMediaByIdMoveToRecycleBin(data: PutMediaByIdMoveToRecycleBinData): CancelablePromise<PutMediaByIdMoveToRecycleBinResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/media/{id}/move-to-recycle-bin',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaByIdReferencedBy(data: GetMediaByIdReferencedByData): CancelablePromise<GetMediaByIdReferencedByResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media/{id}/referenced-by',\n            path: {\n                id: data.id\n            },\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaByIdReferencedDescendants(data: GetMediaByIdReferencedDescendantsData): CancelablePromise<GetMediaByIdReferencedDescendantsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media/{id}/referenced-descendants',\n            path: {\n                id: data.id\n            },\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMediaByIdValidate(data: PutMediaByIdValidateData): CancelablePromise<PutMediaByIdValidateResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/media/{id}/validate',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaAreReferenced(data: GetMediaAreReferencedData = {}): CancelablePromise<GetMediaAreReferencedResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media/are-referenced',\n            query: {\n                id: data.id,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaConfiguration(): CancelablePromise<GetMediaConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMediaSort(data: PutMediaSortData = {}): CancelablePromise<PutMediaSortResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/media/sort',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMediaUrls(data: GetMediaUrlsData = {}): CancelablePromise<GetMediaUrlsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/media/urls',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postMediaValidate(data: PostMediaValidateData = {}): CancelablePromise<PostMediaValidateResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/media/validate',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteRecycleBinMedia(): CancelablePromise<DeleteRecycleBinMediaResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/recycle-bin/media',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteRecycleBinMediaById(data: DeleteRecycleBinMediaByIdData): CancelablePromise<DeleteRecycleBinMediaByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/recycle-bin/media/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRecycleBinMediaByIdOriginalParent(data: GetRecycleBinMediaByIdOriginalParentData): CancelablePromise<GetRecycleBinMediaByIdOriginalParentResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/recycle-bin/media/{id}/original-parent',\n            path: {\n                id: data.id\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putRecycleBinMediaByIdRestore(data: PutRecycleBinMediaByIdRestoreData): CancelablePromise<PutRecycleBinMediaByIdRestoreResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/recycle-bin/media/{id}/restore',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRecycleBinMediaChildren(data: GetRecycleBinMediaChildrenData = {}): CancelablePromise<GetRecycleBinMediaChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/recycle-bin/media/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRecycleBinMediaRoot(data: GetRecycleBinMediaRootData = {}): CancelablePromise<GetRecycleBinMediaRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/recycle-bin/media/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeMediaAncestors(data: GetTreeMediaAncestorsData = {}): CancelablePromise<GetTreeMediaAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/media/ancestors',\n            query: {\n                descendantId: data.descendantId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @param data.dataTypeId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeMediaChildren(data: GetTreeMediaChildrenData = {}): CancelablePromise<GetTreeMediaChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/media/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take,\n                dataTypeId: data.dataTypeId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.dataTypeId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeMediaRoot(data: GetTreeMediaRootData = {}): CancelablePromise<GetTreeMediaRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/media/root',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                dataTypeId: data.dataTypeId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class MemberGroupService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMemberGroup(data: GetItemMemberGroupData = {}): CancelablePromise<GetItemMemberGroupResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/member-group',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMemberGroup(data: GetMemberGroupData = {}): CancelablePromise<GetMemberGroupResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/member-group',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postMemberGroup(data: PostMemberGroupData = {}): CancelablePromise<PostMemberGroupResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/member-group',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMemberGroupById(data: GetMemberGroupByIdData): CancelablePromise<GetMemberGroupByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/member-group/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteMemberGroupById(data: DeleteMemberGroupByIdData): CancelablePromise<DeleteMemberGroupByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/member-group/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMemberGroupById(data: PutMemberGroupByIdData): CancelablePromise<PutMemberGroupByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/member-group/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeMemberGroupRoot(data: GetTreeMemberGroupRootData = {}): CancelablePromise<GetTreeMemberGroupRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/member-group/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class MemberTypeService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMemberType(data: GetItemMemberTypeData = {}): CancelablePromise<GetItemMemberTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/member-type',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.query\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMemberTypeSearch(data: GetItemMemberTypeSearchData = {}): CancelablePromise<GetItemMemberTypeSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/member-type/search',\n            query: {\n                query: data.query,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postMemberType(data: PostMemberTypeData = {}): CancelablePromise<PostMemberTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/member-type',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMemberTypeById(data: GetMemberTypeByIdData): CancelablePromise<GetMemberTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/member-type/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteMemberTypeById(data: DeleteMemberTypeByIdData): CancelablePromise<DeleteMemberTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/member-type/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMemberTypeById(data: PutMemberTypeByIdData): CancelablePromise<PutMemberTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/member-type/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMemberTypeByIdCompositionReferences(data: GetMemberTypeByIdCompositionReferencesData): CancelablePromise<GetMemberTypeByIdCompositionReferencesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/member-type/{id}/composition-references',\n            path: {\n                id: data.id\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postMemberTypeByIdCopy(data: PostMemberTypeByIdCopyData): CancelablePromise<PostMemberTypeByIdCopyResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/member-type/{id}/copy',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postMemberTypeAvailableCompositions(data: PostMemberTypeAvailableCompositionsData = {}): CancelablePromise<PostMemberTypeAvailableCompositionsResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/member-type/available-compositions',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeMemberTypeRoot(data: GetTreeMemberTypeRootData = {}): CancelablePromise<GetTreeMemberTypeRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/member-type/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class MemberService {\n    /**\n     * @param data The data for the request.\n     * @param data.memberTypeId\n     * @param data.memberGroupName\n     * @param data.isApproved\n     * @param data.isLockedOut\n     * @param data.orderBy\n     * @param data.orderDirection\n     * @param data.filter\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getFilterMember(data: GetFilterMemberData = {}): CancelablePromise<GetFilterMemberResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/filter/member',\n            query: {\n                memberTypeId: data.memberTypeId,\n                memberGroupName: data.memberGroupName,\n                isApproved: data.isApproved,\n                isLockedOut: data.isLockedOut,\n                orderBy: data.orderBy,\n                orderDirection: data.orderDirection,\n                filter: data.filter,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMember(data: GetItemMemberData = {}): CancelablePromise<GetItemMemberResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/member',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.query\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemMemberSearch(data: GetItemMemberSearchData = {}): CancelablePromise<GetItemMemberSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/member/search',\n            query: {\n                query: data.query,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postMember(data: PostMemberData = {}): CancelablePromise<PostMemberResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/member',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMemberById(data: GetMemberByIdData): CancelablePromise<GetMemberByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/member/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteMemberById(data: DeleteMemberByIdData): CancelablePromise<DeleteMemberByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/member/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMemberById(data: PutMemberByIdData): CancelablePromise<PutMemberByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/member/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putMemberByIdValidate(data: PutMemberByIdValidateData): CancelablePromise<PutMemberByIdValidateResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/member/{id}/validate',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getMemberConfiguration(): CancelablePromise<GetMemberConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/member/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postMemberValidate(data: PostMemberValidateData = {}): CancelablePromise<PostMemberValidateResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/member/validate',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class ModelsBuilderService {\n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postModelsBuilderBuild(): CancelablePromise<PostModelsBuilderBuildResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/models-builder/build',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                428: 'Precondition Required'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getModelsBuilderDashboard(): CancelablePromise<GetModelsBuilderDashboardResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/models-builder/dashboard',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getModelsBuilderStatus(): CancelablePromise<GetModelsBuilderStatusResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/models-builder/status',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class ObjectTypesService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getObjectTypes(data: GetObjectTypesData = {}): CancelablePromise<GetObjectTypesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/object-types',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}\n\nexport class OEmbedService {\n    /**\n     * @param data The data for the request.\n     * @param data.url\n     * @param data.maxWidth\n     * @param data.maxHeight\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getOembedQuery(data: GetOembedQueryData = {}): CancelablePromise<GetOembedQueryResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/oembed/query',\n            query: {\n                url: data.url,\n                maxWidth: data.maxWidth,\n                maxHeight: data.maxHeight\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class PackageService {\n    /**\n     * @param data The data for the request.\n     * @param data.name\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postPackageByNameRunMigration(data: PostPackageByNameRunMigrationData): CancelablePromise<PostPackageByNameRunMigrationResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/package/{name}/run-migration',\n            path: {\n                name: data.name\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found',\n                409: 'Conflict'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPackageConfiguration(): CancelablePromise<GetPackageConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/package/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPackageCreated(data: GetPackageCreatedData = {}): CancelablePromise<GetPackageCreatedResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/package/created',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postPackageCreated(data: PostPackageCreatedData = {}): CancelablePromise<PostPackageCreatedResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/package/created',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPackageCreatedById(data: GetPackageCreatedByIdData): CancelablePromise<GetPackageCreatedByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/package/created/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deletePackageCreatedById(data: DeletePackageCreatedByIdData): CancelablePromise<DeletePackageCreatedByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/package/created/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putPackageCreatedById(data: PutPackageCreatedByIdData): CancelablePromise<PutPackageCreatedByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/package/created/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPackageCreatedByIdDownload(data: GetPackageCreatedByIdDownloadData): CancelablePromise<GetPackageCreatedByIdDownloadResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/package/created/{id}/download',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPackageMigrationStatus(data: GetPackageMigrationStatusData = {}): CancelablePromise<GetPackageMigrationStatusResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/package/migration-status',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class PartialViewService {\n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemPartialView(data: GetItemPartialViewData = {}): CancelablePromise<GetItemPartialViewResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/partial-view',\n            query: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postPartialView(data: PostPartialViewData = {}): CancelablePromise<PostPartialViewResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/partial-view',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPartialViewByPath(data: GetPartialViewByPathData): CancelablePromise<GetPartialViewByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/partial-view/{path}',\n            path: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deletePartialViewByPath(data: DeletePartialViewByPathData): CancelablePromise<DeletePartialViewByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/partial-view/{path}',\n            path: {\n                path: data.path\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putPartialViewByPath(data: PutPartialViewByPathData): CancelablePromise<PutPartialViewByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/partial-view/{path}',\n            path: {\n                path: data.path\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static putPartialViewByPathRename(data: PutPartialViewByPathRenameData): CancelablePromise<PutPartialViewByPathRenameResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/partial-view/{path}/rename',\n            path: {\n                path: data.path\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postPartialViewFolder(data: PostPartialViewFolderData = {}): CancelablePromise<PostPartialViewFolderResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/partial-view/folder',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPartialViewFolderByPath(data: GetPartialViewFolderByPathData): CancelablePromise<GetPartialViewFolderByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/partial-view/folder/{path}',\n            path: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deletePartialViewFolderByPath(data: DeletePartialViewFolderByPathData): CancelablePromise<DeletePartialViewFolderByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/partial-view/folder/{path}',\n            path: {\n                path: data.path\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPartialViewSnippet(data: GetPartialViewSnippetData = {}): CancelablePromise<GetPartialViewSnippetResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/partial-view/snippet',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPartialViewSnippetById(data: GetPartialViewSnippetByIdData): CancelablePromise<GetPartialViewSnippetByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/partial-view/snippet/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantPath\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreePartialViewAncestors(data: GetTreePartialViewAncestorsData = {}): CancelablePromise<GetTreePartialViewAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/partial-view/ancestors',\n            query: {\n                descendantPath: data.descendantPath\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentPath\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreePartialViewChildren(data: GetTreePartialViewChildrenData = {}): CancelablePromise<GetTreePartialViewChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/partial-view/children',\n            query: {\n                parentPath: data.parentPath,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreePartialViewRoot(data: GetTreePartialViewRootData = {}): CancelablePromise<GetTreePartialViewRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/partial-view/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class PreviewService {\n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deletePreview(): CancelablePromise<DeletePreviewResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/preview',\n            responseHeader: 'Umb-Notifications'\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postPreview(): CancelablePromise<PostPreviewResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/preview',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}\n\nexport class ProfilingService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getProfilingStatus(): CancelablePromise<GetProfilingStatusResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/profiling/status',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putProfilingStatus(data: PutProfilingStatusData = {}): CancelablePromise<PutProfilingStatusResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/profiling/status',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class PropertyTypeService {\n    /**\n     * @param data The data for the request.\n     * @param data.contentTypeId\n     * @param data.propertyAlias\n     * @returns boolean OK\n     * @throws ApiError\n     */\n    public static getPropertyTypeIsUsed(data: GetPropertyTypeIsUsedData = {}): CancelablePromise<GetPropertyTypeIsUsedResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/property-type/is-used',\n            query: {\n                contentTypeId: data.contentTypeId,\n                propertyAlias: data.propertyAlias\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class PublishedCacheService {\n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postPublishedCacheCollect(): CancelablePromise<PostPublishedCacheCollectResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/published-cache/collect',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postPublishedCacheRebuild(): CancelablePromise<PostPublishedCacheRebuildResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/published-cache/rebuild',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postPublishedCacheReload(): CancelablePromise<PostPublishedCacheReloadResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/published-cache/reload',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static getPublishedCacheStatus(): CancelablePromise<GetPublishedCacheStatusResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/published-cache/status',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}\n\nexport class RedirectManagementService {\n    /**\n     * @param data The data for the request.\n     * @param data.filter\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRedirectManagement(data: GetRedirectManagementData = {}): CancelablePromise<GetRedirectManagementResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/redirect-management',\n            query: {\n                filter: data.filter,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRedirectManagementById(data: GetRedirectManagementByIdData): CancelablePromise<GetRedirectManagementByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/redirect-management/{id}',\n            path: {\n                id: data.id\n            },\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteRedirectManagementById(data: DeleteRedirectManagementByIdData): CancelablePromise<DeleteRedirectManagementByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/redirect-management/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRedirectManagementStatus(): CancelablePromise<GetRedirectManagementStatusResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/redirect-management/status',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.status\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postRedirectManagementStatus(data: PostRedirectManagementStatusData = {}): CancelablePromise<PostRedirectManagementStatusResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/redirect-management/status',\n            query: {\n                status: data.status\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class RelationTypeService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemRelationType(data: GetItemRelationTypeData = {}): CancelablePromise<GetItemRelationTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/relation-type',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRelationType(data: GetRelationTypeData = {}): CancelablePromise<GetRelationTypeResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/relation-type',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRelationTypeById(data: GetRelationTypeByIdData): CancelablePromise<GetRelationTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/relation-type/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class RelationService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getRelationTypeById(data: GetRelationTypeByIdData): CancelablePromise<GetRelationTypeByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/relation/type/{id}',\n            path: {\n                id: data.id\n            },\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class ScriptService {\n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemScript(data: GetItemScriptData = {}): CancelablePromise<GetItemScriptResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/script',\n            query: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postScript(data: PostScriptData = {}): CancelablePromise<PostScriptResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/script',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getScriptByPath(data: GetScriptByPathData): CancelablePromise<GetScriptByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/script/{path}',\n            path: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteScriptByPath(data: DeleteScriptByPathData): CancelablePromise<DeleteScriptByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/script/{path}',\n            path: {\n                path: data.path\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putScriptByPath(data: PutScriptByPathData): CancelablePromise<PutScriptByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/script/{path}',\n            path: {\n                path: data.path\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static putScriptByPathRename(data: PutScriptByPathRenameData): CancelablePromise<PutScriptByPathRenameResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/script/{path}/rename',\n            path: {\n                path: data.path\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postScriptFolder(data: PostScriptFolderData = {}): CancelablePromise<PostScriptFolderResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/script/folder',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getScriptFolderByPath(data: GetScriptFolderByPathData): CancelablePromise<GetScriptFolderByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/script/folder/{path}',\n            path: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteScriptFolderByPath(data: DeleteScriptFolderByPathData): CancelablePromise<DeleteScriptFolderByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/script/folder/{path}',\n            path: {\n                path: data.path\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantPath\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeScriptAncestors(data: GetTreeScriptAncestorsData = {}): CancelablePromise<GetTreeScriptAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/script/ancestors',\n            query: {\n                descendantPath: data.descendantPath\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentPath\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeScriptChildren(data: GetTreeScriptChildrenData = {}): CancelablePromise<GetTreeScriptChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/script/children',\n            query: {\n                parentPath: data.parentPath,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeScriptRoot(data: GetTreeScriptRootData = {}): CancelablePromise<GetTreeScriptRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/script/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class SearcherService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getSearcher(data: GetSearcherData = {}): CancelablePromise<GetSearcherResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/searcher',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.searcherName\n     * @param data.term\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getSearcherBySearcherNameQuery(data: GetSearcherBySearcherNameQueryData): CancelablePromise<GetSearcherBySearcherNameQueryResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/searcher/{searcherName}/query',\n            path: {\n                searcherName: data.searcherName\n            },\n            query: {\n                term: data.term,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class SecurityService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getSecurityConfiguration(): CancelablePromise<GetSecurityConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/security/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postSecurityForgotPassword(data: PostSecurityForgotPasswordData = {}): CancelablePromise<PostSecurityForgotPasswordResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/security/forgot-password',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string No Content\n     * @throws ApiError\n     */\n    public static postSecurityForgotPasswordReset(data: PostSecurityForgotPasswordResetData = {}): CancelablePromise<PostSecurityForgotPasswordResetResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/security/forgot-password/reset',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postSecurityForgotPasswordVerify(data: PostSecurityForgotPasswordVerifyData = {}): CancelablePromise<PostSecurityForgotPasswordVerifyResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/security/forgot-password/verify',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                400: 'Bad Request',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class SegmentService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getSegment(data: GetSegmentData = {}): CancelablePromise<GetSegmentResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/segment',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class ServerService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getServerConfiguration(): CancelablePromise<GetServerConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/server/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getServerInformation(): CancelablePromise<GetServerInformationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/server/information',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getServerStatus(): CancelablePromise<GetServerStatusResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/server/status',\n            errors: {\n                400: 'Bad Request'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getServerTroubleshooting(): CancelablePromise<GetServerTroubleshootingResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/server/troubleshooting',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}\n\nexport class StaticFileService {\n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemStaticFile(data: GetItemStaticFileData = {}): CancelablePromise<GetItemStaticFileResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/static-file',\n            query: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantPath\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeStaticFileAncestors(data: GetTreeStaticFileAncestorsData = {}): CancelablePromise<GetTreeStaticFileAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/static-file/ancestors',\n            query: {\n                descendantPath: data.descendantPath\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentPath\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeStaticFileChildren(data: GetTreeStaticFileChildrenData = {}): CancelablePromise<GetTreeStaticFileChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/static-file/children',\n            query: {\n                parentPath: data.parentPath,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeStaticFileRoot(data: GetTreeStaticFileRootData = {}): CancelablePromise<GetTreeStaticFileRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/static-file/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}\n\nexport class StylesheetService {\n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemStylesheet(data: GetItemStylesheetData = {}): CancelablePromise<GetItemStylesheetResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/stylesheet',\n            query: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postStylesheet(data: PostStylesheetData = {}): CancelablePromise<PostStylesheetResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/stylesheet',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getStylesheetByPath(data: GetStylesheetByPathData): CancelablePromise<GetStylesheetByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/stylesheet/{path}',\n            path: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteStylesheetByPath(data: DeleteStylesheetByPathData): CancelablePromise<DeleteStylesheetByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/stylesheet/{path}',\n            path: {\n                path: data.path\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putStylesheetByPath(data: PutStylesheetByPathData): CancelablePromise<PutStylesheetByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/stylesheet/{path}',\n            path: {\n                path: data.path\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static putStylesheetByPathRename(data: PutStylesheetByPathRenameData): CancelablePromise<PutStylesheetByPathRenameResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/stylesheet/{path}/rename',\n            path: {\n                path: data.path\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postStylesheetFolder(data: PostStylesheetFolderData = {}): CancelablePromise<PostStylesheetFolderResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/stylesheet/folder',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getStylesheetFolderByPath(data: GetStylesheetFolderByPathData): CancelablePromise<GetStylesheetFolderByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/stylesheet/folder/{path}',\n            path: {\n                path: data.path\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.path\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteStylesheetFolderByPath(data: DeleteStylesheetFolderByPathData): CancelablePromise<DeleteStylesheetFolderByPathResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/stylesheet/folder/{path}',\n            path: {\n                path: data.path\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantPath\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeStylesheetAncestors(data: GetTreeStylesheetAncestorsData = {}): CancelablePromise<GetTreeStylesheetAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/stylesheet/ancestors',\n            query: {\n                descendantPath: data.descendantPath\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentPath\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeStylesheetChildren(data: GetTreeStylesheetChildrenData = {}): CancelablePromise<GetTreeStylesheetChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/stylesheet/children',\n            query: {\n                parentPath: data.parentPath,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeStylesheetRoot(data: GetTreeStylesheetRootData = {}): CancelablePromise<GetTreeStylesheetRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/stylesheet/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class TagService {\n    /**\n     * @param data The data for the request.\n     * @param data.query\n     * @param data.tagGroup\n     * @param data.culture\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTag(data: GetTagData = {}): CancelablePromise<GetTagResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tag',\n            query: {\n                query: data.query,\n                tagGroup: data.tagGroup,\n                culture: data.culture,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}\n\nexport class TelemetryService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTelemetry(data: GetTelemetryData = {}): CancelablePromise<GetTelemetryResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/telemetry',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTelemetryLevel(): CancelablePromise<GetTelemetryLevelResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/telemetry/level',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postTelemetryLevel(data: PostTelemetryLevelData = {}): CancelablePromise<PostTelemetryLevelResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/telemetry/level',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class TemplateService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemTemplate(data: GetItemTemplateData = {}): CancelablePromise<GetItemTemplateResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/template',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.query\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemTemplateSearch(data: GetItemTemplateSearchData = {}): CancelablePromise<GetItemTemplateSearchResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/template/search',\n            query: {\n                query: data.query,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postTemplate(data: PostTemplateData = {}): CancelablePromise<PostTemplateResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/template',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTemplateById(data: GetTemplateByIdData): CancelablePromise<GetTemplateByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/template/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteTemplateById(data: DeleteTemplateByIdData): CancelablePromise<DeleteTemplateByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/template/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putTemplateById(data: PutTemplateByIdData): CancelablePromise<PutTemplateByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/template/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTemplateConfiguration(): CancelablePromise<GetTemplateConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/template/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postTemplateQueryExecute(data: PostTemplateQueryExecuteData = {}): CancelablePromise<PostTemplateQueryExecuteResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/template/query/execute',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTemplateQuerySettings(): CancelablePromise<GetTemplateQuerySettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/template/query/settings',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.descendantId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeTemplateAncestors(data: GetTreeTemplateAncestorsData = {}): CancelablePromise<GetTreeTemplateAncestorsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/template/ancestors',\n            query: {\n                descendantId: data.descendantId\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.parentId\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeTemplateChildren(data: GetTreeTemplateChildrenData = {}): CancelablePromise<GetTreeTemplateChildrenResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/template/children',\n            query: {\n                parentId: data.parentId,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTreeTemplateRoot(data: GetTreeTemplateRootData = {}): CancelablePromise<GetTreeTemplateRootResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/tree/template/root',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class TemporaryFileService {\n    /**\n     * @param data The data for the request.\n     * @param data.formData\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postTemporaryFile(data: PostTemporaryFileData = {}): CancelablePromise<PostTemporaryFileResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/temporary-file',\n            formData: data.formData,\n            mediaType: 'multipart/form-data',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTemporaryFileById(data: GetTemporaryFileByIdData): CancelablePromise<GetTemporaryFileByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/temporary-file/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteTemporaryFileById(data: DeleteTemporaryFileByIdData): CancelablePromise<DeleteTemporaryFileByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/temporary-file/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getTemporaryFileConfiguration(): CancelablePromise<GetTemporaryFileConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/temporary-file/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}\n\nexport class UpgradeService {\n    /**\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUpgradeAuthorize(): CancelablePromise<PostUpgradeAuthorizeResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/upgrade/authorize',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                428: 'Precondition Required',\n                500: 'Internal Server Error'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUpgradeSettings(): CancelablePromise<GetUpgradeSettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/upgrade/settings',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                428: 'Precondition Required'\n            }\n        });\n    }\n    \n}\n\nexport class UserDataService {\n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postUserData(data: PostUserDataData = {}): CancelablePromise<PostUserDataResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user-data',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.groups\n     * @param data.identifiers\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserData(data: GetUserDataData = {}): CancelablePromise<GetUserDataResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user-data',\n            query: {\n                groups: data.groups,\n                identifiers: data.identifiers,\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putUserData(data: PutUserDataData = {}): CancelablePromise<PutUserDataResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/user-data',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserDataById(data: GetUserDataByIdData): CancelablePromise<GetUserDataByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user-data/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class UserGroupService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.filter\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getFilterUserGroup(data: GetFilterUserGroupData = {}): CancelablePromise<GetFilterUserGroupResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/filter/user-group',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                filter: data.filter\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemUserGroup(data: GetItemUserGroupData = {}): CancelablePromise<GetItemUserGroupResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/user-group',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteUserGroup(data: DeleteUserGroupData = {}): CancelablePromise<DeleteUserGroupResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/user-group',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postUserGroup(data: PostUserGroupData = {}): CancelablePromise<PostUserGroupResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user-group',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserGroup(data: GetUserGroupData = {}): CancelablePromise<GetUserGroupResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user-group',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserGroupById(data: GetUserGroupByIdData): CancelablePromise<GetUserGroupByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user-group/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteUserGroupById(data: DeleteUserGroupByIdData): CancelablePromise<DeleteUserGroupByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/user-group/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putUserGroupById(data: PutUserGroupByIdData): CancelablePromise<PutUserGroupByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/user-group/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteUserGroupByIdUsers(data: DeleteUserGroupByIdUsersData): CancelablePromise<DeleteUserGroupByIdUsersResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/user-group/{id}/users',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserGroupByIdUsers(data: PostUserGroupByIdUsersData): CancelablePromise<PostUserGroupByIdUsersResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user-group/{id}/users',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n}\n\nexport class UserService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.orderBy\n     * @param data.orderDirection\n     * @param data.userGroupIds\n     * @param data.userStates\n     * @param data.filter\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getFilterUser(data: GetFilterUserData = {}): CancelablePromise<GetFilterUserResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/filter/user',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                orderBy: data.orderBy,\n                orderDirection: data.orderDirection,\n                userGroupIds: data.userGroupIds,\n                userStates: data.userStates,\n                filter: data.filter\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemUser(data: GetItemUserData = {}): CancelablePromise<GetItemUserResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/user',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postUser(data: PostUserData = {}): CancelablePromise<PostUserResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteUser(data: DeleteUserData = {}): CancelablePromise<DeleteUserResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/user',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUser(data: GetUserData = {}): CancelablePromise<GetUserResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserById(data: GetUserByIdData): CancelablePromise<GetUserByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteUserById(data: DeleteUserByIdData): CancelablePromise<DeleteUserByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/user/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putUserById(data: PutUserByIdData): CancelablePromise<PutUserByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/user/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserById2Fa(data: GetUserById2FaData): CancelablePromise<GetUserById2FaResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/{id}/2fa',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.providerName\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteUserById2FaByProviderName(data: DeleteUserById2FaByProviderNameData): CancelablePromise<DeleteUserById2FaByProviderNameResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/user/{id}/2fa/{providerName}',\n            path: {\n                id: data.id,\n                providerName: data.providerName\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserByIdChangePassword(data: PostUserByIdChangePasswordData): CancelablePromise<PostUserByIdChangePasswordResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/{id}/change-password',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postUserByIdResetPassword(data: PostUserByIdResetPasswordData): CancelablePromise<PostUserByIdResetPasswordResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/{id}/reset-password',\n            path: {\n                id: data.id\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteUserAvatarById(data: DeleteUserAvatarByIdData): CancelablePromise<DeleteUserAvatarByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/user/avatar/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserAvatarById(data: PostUserAvatarByIdData): CancelablePromise<PostUserAvatarByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/avatar/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserConfiguration(): CancelablePromise<GetUserConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserCurrent(): CancelablePromise<GetUserCurrentResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/current',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserCurrent2Fa(): CancelablePromise<GetUserCurrent2FaResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/current/2fa',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.providerName\n     * @param data.code\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteUserCurrent2FaByProviderName(data: DeleteUserCurrent2FaByProviderNameData): CancelablePromise<DeleteUserCurrent2FaByProviderNameResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/user/current/2fa/{providerName}',\n            path: {\n                providerName: data.providerName\n            },\n            query: {\n                code: data.code\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.providerName\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postUserCurrent2FaByProviderName(data: PostUserCurrent2FaByProviderNameData): CancelablePromise<PostUserCurrent2FaByProviderNameResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/current/2fa/{providerName}',\n            path: {\n                providerName: data.providerName\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.providerName\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserCurrent2FaByProviderName(data: GetUserCurrent2FaByProviderNameData): CancelablePromise<GetUserCurrent2FaByProviderNameResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/current/2fa/{providerName}',\n            path: {\n                providerName: data.providerName\n            },\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserCurrentAvatar(data: PostUserCurrentAvatarData = {}): CancelablePromise<PostUserCurrentAvatarResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/current/avatar',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserCurrentChangePassword(data: PostUserCurrentChangePasswordData = {}): CancelablePromise<PostUserCurrentChangePasswordResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/current/change-password',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserCurrentConfiguration(): CancelablePromise<GetUserCurrentConfigurationResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/current/configuration',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserCurrentLoginProviders(): CancelablePromise<GetUserCurrentLoginProvidersResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/current/login-providers',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserCurrentPermissions(data: GetUserCurrentPermissionsData = {}): CancelablePromise<GetUserCurrentPermissionsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/current/permissions',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserCurrentPermissionsDocument(data: GetUserCurrentPermissionsDocumentData = {}): CancelablePromise<GetUserCurrentPermissionsDocumentResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/current/permissions/document',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getUserCurrentPermissionsMedia(data: GetUserCurrentPermissionsMediaData = {}): CancelablePromise<GetUserCurrentPermissionsMediaResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/user/current/permissions/media',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserDisable(data: PostUserDisableData = {}): CancelablePromise<PostUserDisableResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/disable',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserEnable(data: PostUserEnableData = {}): CancelablePromise<PostUserEnableResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/enable',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postUserInvite(data: PostUserInviteData = {}): CancelablePromise<PostUserInviteResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/invite',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserInviteCreatePassword(data: PostUserInviteCreatePasswordData = {}): CancelablePromise<PostUserInviteCreatePasswordResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/invite/create-password',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserInviteResend(data: PostUserInviteResendData = {}): CancelablePromise<PostUserInviteResendResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/invite/resend',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static postUserInviteVerify(data: PostUserInviteVerifyData = {}): CancelablePromise<PostUserInviteVerifyResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/invite/verify',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            errors: {\n                400: 'Bad Request',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserSetUserGroups(data: PostUserSetUserGroupsData = {}): CancelablePromise<PostUserSetUserGroupsResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/set-user-groups',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static postUserUnlock(data: PostUserUnlockData = {}): CancelablePromise<PostUserUnlockResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/user/unlock',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource'\n            }\n        });\n    }\n    \n}\n\nexport class WebhookService {\n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getItemWebhook(data: GetItemWebhookData = {}): CancelablePromise<GetItemWebhookResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/item/webhook',\n            query: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getWebhook(data: GetWebhookData = {}): CancelablePromise<GetWebhookResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/webhook',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns string Created\n     * @throws ApiError\n     */\n    public static postWebhook(data: PostWebhookData = {}): CancelablePromise<PostWebhookResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/management/api/v1/webhook',\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Generated-Resource',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getWebhookById(data: GetWebhookByIdData): CancelablePromise<GetWebhookByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/webhook/{id}',\n            path: {\n                id: data.id\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static deleteWebhookById(data: DeleteWebhookByIdData): CancelablePromise<DeleteWebhookByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/umbraco/management/api/v1/webhook/{id}',\n            path: {\n                id: data.id\n            },\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @param data.requestBody\n     * @returns string OK\n     * @throws ApiError\n     */\n    public static putWebhookById(data: PutWebhookByIdData): CancelablePromise<PutWebhookByIdResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/umbraco/management/api/v1/webhook/{id}',\n            path: {\n                id: data.id\n            },\n            body: data.requestBody,\n            mediaType: 'application/json',\n            responseHeader: 'Umb-Notifications',\n            errors: {\n                400: 'Bad Request',\n                401: 'The resource is protected and requires an authentication token',\n                403: 'The authenticated user do not have access to this resource',\n                404: 'Not Found'\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getWebhookEvents(data: GetWebhookEventsData = {}): CancelablePromise<GetWebhookEventsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/management/api/v1/webhook/events',\n            query: {\n                skip: data.skip,\n                take: data.take\n            },\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}","// This file is auto-generated by @hey-api/openapi-ts\n\nexport type AllowedDocumentTypeModel = {\n    id: string;\n    name: string;\n    description?: string | null;\n    icon?: string | null;\n};\n\nexport type AllowedMediaTypeModel = {\n    id: string;\n    name: string;\n    description?: string | null;\n    icon?: string | null;\n};\n\nexport type AuditLogResponseModel = {\n    user: ReferenceByIdModel;\n    timestamp: string;\n    logType: AuditTypeModel;\n    comment?: string | null;\n    parameters?: string | null;\n};\n\nexport enum AuditTypeModel {\n    NEW = 'New',\n    SAVE = 'Save',\n    SAVE_VARIANT = 'SaveVariant',\n    OPEN = 'Open',\n    DELETE = 'Delete',\n    PUBLISH = 'Publish',\n    PUBLISH_VARIANT = 'PublishVariant',\n    SEND_TO_PUBLISH = 'SendToPublish',\n    SEND_TO_PUBLISH_VARIANT = 'SendToPublishVariant',\n    UNPUBLISH = 'Unpublish',\n    UNPUBLISH_VARIANT = 'UnpublishVariant',\n    MOVE = 'Move',\n    COPY = 'Copy',\n    ASSIGN_DOMAIN = 'AssignDomain',\n    PUBLIC_ACCESS = 'PublicAccess',\n    SORT = 'Sort',\n    NOTIFY = 'Notify',\n    SYSTEM = 'System',\n    ROLL_BACK = 'RollBack',\n    PACKAGER_INSTALL = 'PackagerInstall',\n    PACKAGER_UNINSTALL = 'PackagerUninstall',\n    CUSTOM = 'Custom',\n    CONTENT_VERSION_PREVENT_CLEANUP = 'ContentVersionPreventCleanup',\n    CONTENT_VERSION_ENABLE_CLEANUP = 'ContentVersionEnableCleanup'\n}\n\nexport type AvailableDocumentTypeCompositionResponseModel = {\n    id: string;\n    name: string;\n    icon: string;\n    folderPath: Array<(string)>;\n    isCompatible: boolean;\n};\n\nexport type AvailableMediaTypeCompositionResponseModel = {\n    id: string;\n    name: string;\n    icon: string;\n    folderPath: Array<(string)>;\n    isCompatible: boolean;\n};\n\nexport type AvailableMemberTypeCompositionResponseModel = {\n    id: string;\n    name: string;\n    icon: string;\n    folderPath: Array<(string)>;\n    isCompatible: boolean;\n};\n\nexport type ChangePasswordCurrentUserRequestModel = {\n    newPassword: string;\n    oldPassword?: string | null;\n};\n\nexport type ChangePasswordUserRequestModel = {\n    newPassword: string;\n};\n\nexport type ComponentMap = {\n    templateId: number;\n    templateAlias: string;\n    name: string;\n    parameters: string;\n    tagHelper: boolean;\n};\n\nexport enum CompositionTypeModel {\n    COMPOSITION = 'Composition',\n    INHERITANCE = 'Inheritance'\n}\n\nexport type ConfigurationEditorItemRequestModel = {\n    key?: string | null;\n    value?: {\n        [key: string]: unknown;\n    } | null;\n};\n\nexport type ConfigurationEditorModel = {\n    key: string;\n    name: string;\n    description?: string | null;\n    icon?: string | null;\n    group?: string | null;\n    fields: Array<(ContentmentConfigurationFieldModel)>;\n    defaultValues?: {\n        [key: string]: unknown;\n    } | null;\n    overlaySize: OverlaySize;\n    expressions?: {\n        [key: string]: (string);\n    } | null;\n    /**\n     * @deprecated\n     */\n    nameTemplate?: string | null;\n    /**\n     * @deprecated\n     */\n    descriptionTemplate?: string | null;\n};\n\nexport type ConfigurationEditorModelsResponseModel = {\n    items: Array<(ConfigurationEditorModel)>;\n};\n\nexport type ConsentLevelPresentationModel = {\n    level: TelemetryLevelModel;\n    description: string;\n};\n\nexport type ContentItem = {\n    id: number;\n    udi: string;\n    alias: string;\n    name: string;\n    icon: string;\n    parentId: number;\n    level: number;\n    trashed: boolean;\n    path: string;\n    createDate: string;\n    updateDate: string;\n    creatorId: number;\n    creatorName: string;\n    updaterId: number;\n    updaterName: string;\n    culture: string;\n};\n\nexport type ContentTags = {\n    id: number;\n    udi: string;\n    alias: string;\n    name: string;\n    icon: string;\n    type: string;\n    tags: Array<(Tag)>;\n};\n\nexport type ContentTypeData = {\n    id: number;\n    udi: string;\n    name: string;\n    alias: string;\n    isOpen: boolean;\n    icon: string;\n    description: string;\n    isMaster: boolean;\n    hasCompositions: boolean;\n    selected: boolean;\n};\n\nexport type ContentTypeMap = {\n    id: number;\n    udi: string;\n    name: string;\n    alias: string;\n    isOpen: boolean;\n    icon: string;\n    description: string;\n    isMaster: boolean;\n    hasCompositions: boolean;\n    selected: boolean;\n    templates: Array<(TemplateMap)>;\n    properties: Array<(PropertyTypeMap)>;\n    compositionProperties: Array<(PropertyTypeMap)>;\n    allProperties: Array<(PropertyTypeMap)>;\n    compositions: Array<(ContentTypeData)>;\n    propertyGroups: Array<(string)>;\n    hasTemplates: boolean;\n    isListView: boolean;\n    allowedAtRoot: boolean;\n    isComposition: boolean;\n    isElement: boolean;\n    variesBy: ContentVariationModel;\n    variesByCulture: boolean;\n    createDate: string;\n};\n\nexport enum ContentVariationModel {\n    NOTHING = 'Nothing',\n    CULTURE = 'Culture',\n    SEGMENT = 'Segment',\n    CULTURE_AND_SEGMENT = 'CultureAndSegment'\n}\n\nexport type ContentmentConfigurationFieldModel = {\n    key?: string | null;\n    name?: string | null;\n    description?: string | null;\n    view?: string | null;\n    propertyEditorUiAlias?: string | null;\n    config?: {\n        [key: string]: unknown;\n    } | null;\n};\n\nexport type CopyDataTypeRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type CopyDocumentRequestModel = {\n    target?: ReferenceByIdModel | null;\n    relateToOriginal: boolean;\n    includeDescendants: boolean;\n};\n\nexport type CopyDocumentTypeRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type CopyMediaTypeRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type CreateDataTypeRequestModel = {\n    name: string;\n    editorAlias: string;\n    editorUiAlias: string;\n    values: Array<(DataTypePropertyPresentationModel)>;\n    id?: string | null;\n    parent?: ReferenceByIdModel | null;\n};\n\nexport type CreateDictionaryItemRequestModel = {\n    name: string;\n    translations: Array<(DictionaryItemTranslationModel)>;\n    id?: string | null;\n    parent?: ReferenceByIdModel | null;\n};\n\nexport type CreateDocumentBlueprintFromDocumentRequestModel = {\n    document: ReferenceByIdModel;\n    id?: string | null;\n    name: string;\n    parent?: ReferenceByIdModel | null;\n};\n\nexport type CreateDocumentBlueprintRequestModel = {\n    values: Array<(DocumentValueModel)>;\n    variants: Array<(DocumentVariantRequestModel)>;\n    id?: string | null;\n    parent?: ReferenceByIdModel | null;\n    documentType: ReferenceByIdModel;\n};\n\nexport type CreateDocumentRequestModel = {\n    values: Array<(DocumentValueModel)>;\n    variants: Array<(DocumentVariantRequestModel)>;\n    id?: string | null;\n    parent?: ReferenceByIdModel | null;\n    documentType: ReferenceByIdModel;\n    template: ReferenceByIdModel | null;\n};\n\nexport type CreateDocumentTypePropertyTypeContainerRequestModel = {\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name?: string | null;\n    type: string;\n    sortOrder: number;\n};\n\nexport type CreateDocumentTypePropertyTypeRequestModel = {\n    id: string;\n    container?: ReferenceByIdModel | null;\n    sortOrder: number;\n    alias: string;\n    name: string;\n    description?: string | null;\n    dataType: ReferenceByIdModel;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    validation: PropertyTypeValidationModel;\n    appearance: PropertyTypeAppearanceModel;\n};\n\nexport type CreateDocumentTypeRequestModel = {\n    alias: string;\n    name: string;\n    description?: string | null;\n    icon: string;\n    allowedAsRoot: boolean;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    collection?: ReferenceByIdModel | null;\n    isElement: boolean;\n    properties: Array<(CreateDocumentTypePropertyTypeRequestModel)>;\n    containers: Array<(CreateDocumentTypePropertyTypeContainerRequestModel)>;\n    id?: string | null;\n    parent?: ReferenceByIdModel | null;\n    allowedTemplates: Array<(ReferenceByIdModel)>;\n    defaultTemplate?: ReferenceByIdModel | null;\n    cleanup: DocumentTypeCleanupModel;\n    allowedDocumentTypes: Array<(DocumentTypeSortModel)>;\n    compositions: Array<(DocumentTypeCompositionModel)>;\n};\n\nexport type CreateFolderRequestModel = {\n    name: string;\n    id?: string | null;\n    parent?: ReferenceByIdModel | null;\n};\n\nexport type CreateInitialPasswordUserRequestModel = {\n    user: ReferenceByIdModel;\n    token: string;\n    password: string;\n};\n\nexport type CreateLanguageRequestModel = {\n    name: string;\n    isDefault: boolean;\n    isMandatory: boolean;\n    fallbackIsoCode?: string | null;\n    isoCode: string;\n};\n\nexport type CreateMediaRequestModel = {\n    values: Array<(MediaValueModel)>;\n    variants: Array<(MediaVariantRequestModel)>;\n    id?: string | null;\n    parent?: ReferenceByIdModel | null;\n    mediaType: ReferenceByIdModel;\n};\n\nexport type CreateMediaTypePropertyTypeContainerRequestModel = {\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name?: string | null;\n    type: string;\n    sortOrder: number;\n};\n\nexport type CreateMediaTypePropertyTypeRequestModel = {\n    id: string;\n    container?: ReferenceByIdModel | null;\n    sortOrder: number;\n    alias: string;\n    name: string;\n    description?: string | null;\n    dataType: ReferenceByIdModel;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    validation: PropertyTypeValidationModel;\n    appearance: PropertyTypeAppearanceModel;\n};\n\nexport type CreateMediaTypeRequestModel = {\n    alias: string;\n    name: string;\n    description?: string | null;\n    icon: string;\n    allowedAsRoot: boolean;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    isElement: boolean;\n    properties: Array<(CreateMediaTypePropertyTypeRequestModel)>;\n    containers: Array<(CreateMediaTypePropertyTypeContainerRequestModel)>;\n    id?: string | null;\n    parent?: ReferenceByIdModel | null;\n    allowedMediaTypes: Array<(MediaTypeSortModel)>;\n    compositions: Array<(MediaTypeCompositionModel)>;\n    collection?: ReferenceByIdModel | null;\n};\n\nexport type CreateMemberGroupRequestModel = {\n    name: string;\n    id?: string | null;\n};\n\nexport type CreateMemberRequestModel = {\n    values: Array<(MemberValueModel)>;\n    variants: Array<(MemberVariantRequestModel)>;\n    id?: string | null;\n    email: string;\n    username: string;\n    password: string;\n    memberType: ReferenceByIdModel;\n    groups?: Array<(string)> | null;\n    isApproved: boolean;\n};\n\nexport type CreateMemberTypePropertyTypeContainerRequestModel = {\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name?: string | null;\n    type: string;\n    sortOrder: number;\n};\n\nexport type CreateMemberTypePropertyTypeRequestModel = {\n    id: string;\n    container?: ReferenceByIdModel | null;\n    sortOrder: number;\n    alias: string;\n    name: string;\n    description?: string | null;\n    dataType: ReferenceByIdModel;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    validation: PropertyTypeValidationModel;\n    appearance: PropertyTypeAppearanceModel;\n    isSensitive: boolean;\n    visibility: MemberTypePropertyTypeVisibilityModel;\n};\n\nexport type CreateMemberTypeRequestModel = {\n    alias: string;\n    name: string;\n    description?: string | null;\n    icon: string;\n    allowedAsRoot: boolean;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    collection?: ReferenceByIdModel | null;\n    isElement: boolean;\n    properties: Array<(CreateMemberTypePropertyTypeRequestModel)>;\n    containers: Array<(CreateMemberTypePropertyTypeContainerRequestModel)>;\n    id?: string | null;\n    compositions: Array<(MemberTypeCompositionModel)>;\n};\n\nexport type CreatePackageRequestModel = {\n    name: string;\n    contentNodeId?: string | null;\n    contentLoadChildNodes: boolean;\n    mediaIds: Array<(string)>;\n    mediaLoadChildNodes: boolean;\n    documentTypes: Array<(string)>;\n    mediaTypes: Array<(string)>;\n    dataTypes: Array<(string)>;\n    templates: Array<(string)>;\n    partialViews: Array<(string)>;\n    stylesheets: Array<(string)>;\n    scripts: Array<(string)>;\n    languages: Array<(string)>;\n    dictionaryItems: Array<(string)>;\n    id?: string | null;\n};\n\nexport type CreatePartialViewFolderRequestModel = {\n    name: string;\n    parent?: FileSystemFolderModel | null;\n};\n\nexport type CreatePartialViewRequestModel = {\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    content: string;\n};\n\nexport type CreateScriptFolderRequestModel = {\n    name: string;\n    parent?: FileSystemFolderModel | null;\n};\n\nexport type CreateScriptRequestModel = {\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    content: string;\n};\n\nexport type CreateStylesheetFolderRequestModel = {\n    name: string;\n    parent?: FileSystemFolderModel | null;\n};\n\nexport type CreateStylesheetRequestModel = {\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    content: string;\n};\n\nexport type CreateTemplateRequestModel = {\n    name: string;\n    alias: string;\n    content?: string | null;\n    id?: string | null;\n};\n\nexport type CreateUserDataRequestModel = {\n    group: string;\n    identifier: string;\n    value: string;\n    key?: string | null;\n};\n\nexport type CreateUserGroupRequestModel = {\n    name: string;\n    alias: string;\n    icon?: string | null;\n    sections: Array<(string)>;\n    languages: Array<(string)>;\n    hasAccessToAllLanguages: boolean;\n    documentStartNode?: ReferenceByIdModel | null;\n    documentRootAccess: boolean;\n    mediaStartNode?: ReferenceByIdModel | null;\n    mediaRootAccess: boolean;\n    fallbackPermissions: Array<(string)>;\n    permissions: Array<(DocumentPermissionPresentationModel | UnknownTypePermissionPresentationModel)>;\n    id?: string | null;\n};\n\nexport type CreateUserRequestModel = {\n    email: string;\n    userName: string;\n    name: string;\n    userGroupIds: Array<(ReferenceByIdModel)>;\n    id?: string | null;\n};\n\nexport type CreateWebhookRequestModel = {\n    enabled: boolean;\n    url: string;\n    contentTypeKeys: Array<(string)>;\n    headers: {\n        [key: string]: (string);\n    };\n    id?: string | null;\n    events: Array<(string)>;\n};\n\nexport type CultureAndScheduleRequestModel = {\n    culture?: string | null;\n    schedule?: ScheduleRequestModel | null;\n};\n\nexport type CultureReponseModel = {\n    name: string;\n    englishName: string;\n};\n\nexport type CurrenUserConfigurationResponseModel = {\n    keepUserLoggedIn: boolean;\n    usernameIsEmail: boolean;\n    passwordConfiguration: PasswordConfigurationResponseModel;\n};\n\nexport type CurrentUserResponseModel = {\n    id: string;\n    email: string;\n    userName: string;\n    name: string;\n    languageIsoCode: string | null;\n    documentStartNodeIds: Array<(ReferenceByIdModel)>;\n    hasDocumentRootAccess: boolean;\n    mediaStartNodeIds: Array<(ReferenceByIdModel)>;\n    hasMediaRootAccess: boolean;\n    avatarUrls: Array<(string)>;\n    languages: Array<(string)>;\n    hasAccessToAllLanguages: boolean;\n    hasAccessToSensitiveData: boolean;\n    fallbackPermissions: Array<(string)>;\n    permissions: Array<(DocumentPermissionPresentationModel | UnknownTypePermissionPresentationModel)>;\n    allowedSections: Array<(string)>;\n    isAdmin: boolean;\n};\n\nexport type DataListConfigurationRequestModel = {\n    dataSource?: Array<(ConfigurationEditorItemRequestModel)> | null;\n    listEditor?: Array<(ConfigurationEditorItemRequestModel)> | null;\n};\n\nexport type DataListEditorResponseModel = {\n    propertyEditorUiAlias?: string | null;\n    config?: Array<(DataTypePropertyPresentationModel)> | null;\n};\n\nexport enum DataTypeChangeModeModel {\n    TRUE = 'True',\n    FALSE = 'False',\n    FALSE_WITH_HELP_TEXT = 'FalseWithHelpText'\n}\n\nexport type DataTypeContentTypeReferenceModel = {\n    id: string;\n    type: string | null;\n    name: string | null;\n    icon: string | null;\n};\n\nexport type DataTypeItemResponseModel = {\n    id: string;\n    name: string;\n    editorUiAlias?: string | null;\n    isDeletable: boolean;\n};\n\nexport type DataTypeMap = {\n    id: number;\n    udi: string;\n    name: string;\n    alias: string;\n    isOpen: boolean;\n    dbType: string;\n    isUsed: boolean;\n    updateDate: string;\n};\n\nexport type DataTypePropertyPresentationModel = {\n    alias: string;\n    value?: unknown;\n};\n\nexport type DataTypePropertyReferenceModel = {\n    name: string;\n    alias: string;\n};\n\nexport type DataTypeReferenceResponseModel = {\n    contentType: DataTypeContentTypeReferenceModel;\n    properties: Array<(DataTypePropertyReferenceModel)>;\n};\n\nexport type DataTypeResponseModel = {\n    name: string;\n    editorAlias: string;\n    editorUiAlias: string;\n    values: Array<(DataTypePropertyPresentationModel)>;\n    id: string;\n    isDeletable: boolean;\n    canIgnoreStartNodes: boolean;\n};\n\nexport type DataTypeTreeItemResponseModel = {\n    hasChildren: boolean;\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name: string;\n    isFolder: boolean;\n    editorUiAlias?: string | null;\n    isDeletable: boolean;\n};\n\nexport type DatabaseInstallRequestModel = {\n    id: string;\n    providerName: string;\n    server?: string | null;\n    name?: string | null;\n    username?: string | null;\n    password?: string | null;\n    useIntegratedAuthentication: boolean;\n    connectionString?: string | null;\n    trustServerCertificate: boolean;\n};\n\nexport type DatabaseSettingsPresentationModel = {\n    id: string;\n    sortOrder: number;\n    displayName: string;\n    defaultDatabaseName: string;\n    providerName: string;\n    isConfigured: boolean;\n    requiresServer: boolean;\n    serverPlaceholder: string;\n    requiresCredentials: boolean;\n    supportsIntegratedAuthentication: boolean;\n    requiresConnectionTest: boolean;\n};\n\nexport type DatatypeConfigurationResponseModel = {\n    canBeChanged: DataTypeChangeModeModel;\n    documentListViewId: string;\n    mediaListViewId: string;\n};\n\nexport type DefaultReferenceResponseModel = {\n    id: string;\n    name?: string | null;\n    type?: string | null;\n    icon?: string | null;\n};\n\nexport type DeleteUserGroupsRequestModel = {\n    userGroupIds: Array<(ReferenceByIdModel)>;\n};\n\nexport type DeleteUsersRequestModel = {\n    userIds: Array<(ReferenceByIdModel)>;\n};\n\nexport type Diagnostic = {\n    key: string;\n    value: string;\n};\n\nexport type DiagnosticGroup = {\n    id: number;\n    title: string;\n    sections: Array<(DiagnosticSection)>;\n};\n\nexport type DiagnosticSection = {\n    heading: string;\n    diagnostics: Array<(Diagnostic)>;\n};\n\nexport type DiagnosticsConfig = {\n    groupsToHide: Array<(string)>;\n    sectionsToHide: Array<(string)>;\n    keysToRedact: Array<(string)>;\n};\n\nexport type DictionaryItemItemResponseModel = {\n    id: string;\n    name: string;\n};\n\nexport type DictionaryItemResponseModel = {\n    name: string;\n    translations: Array<(DictionaryItemTranslationModel)>;\n    id: string;\n};\n\nexport type DictionaryItemTranslationModel = {\n    isoCode: string;\n    translation: string;\n};\n\nexport type DictionaryOverviewResponseModel = {\n    name?: string | null;\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    translatedIsoCodes: Array<(string)>;\n};\n\nexport enum DirectionModel {\n    ASCENDING = 'Ascending',\n    DESCENDING = 'Descending'\n}\n\nexport type DisableUserRequestModel = {\n    userIds: Array<(ReferenceByIdModel)>;\n};\n\nexport type DocumentBlueprintItemResponseModel = {\n    id: string;\n    name: string;\n    documentType: DocumentTypeReferenceResponseModel;\n};\n\nexport type DocumentBlueprintResponseModel = {\n    values: Array<(DocumentValueModel)>;\n    variants: Array<(DocumentVariantResponseModel)>;\n    id: string;\n    documentType: DocumentTypeReferenceResponseModel;\n};\n\nexport type DocumentBlueprintTreeItemResponseModel = {\n    hasChildren: boolean;\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name: string;\n    isFolder: boolean;\n    documentType?: DocumentTypeReferenceResponseModel | null;\n};\n\nexport type DocumentCollectionResponseModel = {\n    values: Array<(DocumentValueModel)>;\n    variants: Array<(DocumentVariantResponseModel)>;\n    id: string;\n    creator?: string | null;\n    sortOrder: number;\n    documentType: DocumentTypeCollectionReferenceResponseModel;\n    updater?: string | null;\n};\n\nexport type DocumentConfigurationResponseModel = {\n    disableDeleteWhenReferenced: boolean;\n    disableUnpublishWhenReferenced: boolean;\n    allowEditInvariantFromNonDefault: boolean;\n    allowNonExistingSegmentsCreation: boolean;\n    reservedFieldNames: Array<(string)>;\n};\n\nexport type DocumentItemResponseModel = {\n    id: string;\n    isTrashed: boolean;\n    isProtected: boolean;\n    documentType: DocumentTypeReferenceResponseModel;\n    variants: Array<(DocumentVariantItemResponseModel)>;\n};\n\nexport type DocumentNotificationResponseModel = {\n    actionId: string;\n    subscribed: boolean;\n};\n\nexport type DocumentPermissionPresentationModel = {\n    $type: string;\n    document: ReferenceByIdModel;\n    verbs: Array<(string)>;\n};\n\nexport type DocumentRecycleBinItemResponseModel = {\n    id: string;\n    hasChildren: boolean;\n    parent?: ItemReferenceByIdResponseModel | null;\n    documentType: DocumentTypeReferenceResponseModel;\n    variants: Array<(DocumentVariantItemResponseModel)>;\n};\n\nexport type DocumentReferenceResponseModel = {\n    id: string;\n    name?: string | null;\n    published?: boolean | null;\n    documentType: TrackedReferenceDocumentTypeModel;\n};\n\nexport type DocumentResponseModel = {\n    values: Array<(DocumentValueModel)>;\n    variants: Array<(DocumentVariantResponseModel)>;\n    id: string;\n    documentType: DocumentTypeReferenceResponseModel;\n    urls: Array<(DocumentUrlInfoModel)>;\n    template?: ReferenceByIdModel | null;\n    isTrashed: boolean;\n};\n\nexport type DocumentTreeItemResponseModel = {\n    hasChildren: boolean;\n    parent?: ReferenceByIdModel | null;\n    noAccess: boolean;\n    isTrashed: boolean;\n    id: string;\n    isProtected: boolean;\n    documentType: DocumentTypeReferenceResponseModel;\n    variants: Array<(DocumentVariantItemResponseModel)>;\n};\n\nexport type DocumentTypeBlueprintItemResponseModel = {\n    id: string;\n    name: string;\n};\n\nexport type DocumentTypeCleanupModel = {\n    preventCleanup: boolean;\n    keepAllVersionsNewerThanDays?: number | null;\n    keepLatestVersionPerDayForDays?: number | null;\n};\n\nexport type DocumentTypeCollectionReferenceResponseModel = {\n    id: string;\n    alias: string;\n    icon: string;\n};\n\nexport type DocumentTypeCompositionModel = {\n    documentType: ReferenceByIdModel;\n    compositionType: CompositionTypeModel;\n};\n\nexport type DocumentTypeCompositionRequestModel = {\n    id?: string | null;\n    currentPropertyAliases: Array<(string)>;\n    currentCompositeIds: Array<(string)>;\n    isElement: boolean;\n};\n\nexport type DocumentTypeCompositionResponseModel = {\n    id: string;\n    name: string;\n    icon: string;\n};\n\nexport type DocumentTypeConfigurationResponseModel = {\n    dataTypesCanBeChanged: DataTypeChangeModeModel;\n    disableTemplates: boolean;\n    useSegments: boolean;\n};\n\nexport type DocumentTypeItemResponseModel = {\n    id: string;\n    name: string;\n    isElement: boolean;\n    icon?: string | null;\n};\n\nexport type DocumentTypePropertyTypeContainerResponseModel = {\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name?: string | null;\n    type: string;\n    sortOrder: number;\n};\n\nexport type DocumentTypePropertyTypeResponseModel = {\n    id: string;\n    container?: ReferenceByIdModel | null;\n    sortOrder: number;\n    alias: string;\n    name: string;\n    description?: string | null;\n    dataType: ReferenceByIdModel;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    validation: PropertyTypeValidationModel;\n    appearance: PropertyTypeAppearanceModel;\n};\n\nexport type DocumentTypeReferenceResponseModel = {\n    id: string;\n    icon: string;\n    collection?: ReferenceByIdModel | null;\n};\n\nexport type DocumentTypeResponseModel = {\n    alias: string;\n    name: string;\n    description?: string | null;\n    icon: string;\n    allowedAsRoot: boolean;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    collection?: ReferenceByIdModel | null;\n    isElement: boolean;\n    properties: Array<(DocumentTypePropertyTypeResponseModel)>;\n    containers: Array<(DocumentTypePropertyTypeContainerResponseModel)>;\n    id: string;\n    allowedTemplates: Array<(ReferenceByIdModel)>;\n    defaultTemplate?: ReferenceByIdModel | null;\n    cleanup: DocumentTypeCleanupModel;\n    allowedDocumentTypes: Array<(DocumentTypeSortModel)>;\n    compositions: Array<(DocumentTypeCompositionModel)>;\n};\n\nexport type DocumentTypeSortModel = {\n    documentType: ReferenceByIdModel;\n    sortOrder: number;\n};\n\nexport type DocumentTypeTreeItemResponseModel = {\n    hasChildren: boolean;\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name: string;\n    isFolder: boolean;\n    isElement: boolean;\n    icon: string;\n};\n\nexport type DocumentUrlInfoModel = {\n    culture: string | null;\n    url: string;\n};\n\nexport type DocumentUrlInfoResponseModel = {\n    id: string;\n    urlInfos: Array<(DocumentUrlInfoModel)>;\n};\n\nexport type DocumentValueModel = {\n    culture?: string | null;\n    segment?: string | null;\n    alias: string;\n    value?: unknown;\n};\n\nexport type DocumentVariantItemResponseModel = {\n    name: string;\n    culture?: string | null;\n    state: DocumentVariantStateModel;\n};\n\nexport type DocumentVariantRequestModel = {\n    culture?: string | null;\n    segment?: string | null;\n    name: string;\n};\n\nexport type DocumentVariantResponseModel = {\n    culture?: string | null;\n    segment?: string | null;\n    name: string;\n    createDate: string;\n    updateDate: string;\n    state: DocumentVariantStateModel;\n    publishDate?: string | null;\n};\n\nexport enum DocumentVariantStateModel {\n    NOT_CREATED = 'NotCreated',\n    DRAFT = 'Draft',\n    PUBLISHED = 'Published',\n    PUBLISHED_PENDING_CHANGES = 'PublishedPendingChanges'\n}\n\nexport type DocumentVersionItemResponseModel = {\n    id: string;\n    document: ReferenceByIdModel;\n    documentType: ReferenceByIdModel;\n    user: ReferenceByIdModel;\n    versionDate: string;\n    isCurrentPublishedVersion: boolean;\n    isCurrentDraftVersion: boolean;\n    preventCleanup: boolean;\n};\n\nexport type DocumentVersionResponseModel = {\n    values: Array<(DocumentValueModel)>;\n    variants: Array<(DocumentVariantResponseModel)>;\n    id: string;\n    documentType: DocumentTypeReferenceResponseModel;\n    document?: ReferenceByIdModel | null;\n};\n\nexport type DomainPresentationModel = {\n    domainName: string;\n    isoCode: string;\n};\n\nexport type DomainsResponseModel = {\n    defaultIsoCode?: string | null;\n    domains: Array<(DomainPresentationModel)>;\n};\n\nexport type DynamicRootContextRequestModel = {\n    id?: string | null;\n    parent: ReferenceByIdModel;\n    culture?: string | null;\n    segment?: string | null;\n};\n\nexport type DynamicRootQueryOriginRequestModel = {\n    alias: string;\n    id?: string | null;\n};\n\nexport type DynamicRootQueryRequestModel = {\n    origin: DynamicRootQueryOriginRequestModel;\n    steps: Array<(DynamicRootQueryStepRequestModel)>;\n};\n\nexport type DynamicRootQueryStepRequestModel = {\n    alias: string;\n    documentTypeIds: Array<(string)>;\n};\n\nexport type DynamicRootRequestModel = {\n    context: DynamicRootContextRequestModel;\n    query: DynamicRootQueryRequestModel;\n};\n\nexport type DynamicRootResponseModel = {\n    roots: Array<(string)>;\n};\n\nexport type EnableTwoFactorRequestModel = {\n    code: string;\n    secret: string;\n};\n\nexport type EnableUserRequestModel = {\n    userIds: Array<(ReferenceByIdModel)>;\n};\n\nexport type EntityImportAnalysisResponseModel = {\n    entityType: string;\n    alias?: string | null;\n    key?: string | null;\n};\n\nexport enum EventMessageTypeModel {\n    DEFAULT = 'Default',\n    INFO = 'Info',\n    ERROR = 'Error',\n    SUCCESS = 'Success',\n    WARNING = 'Warning'\n}\n\nexport type FieldPresentationModel = {\n    name: string;\n    values: Array<(string)>;\n};\n\nexport type FileSystemFolderModel = {\n    path: string;\n};\n\nexport type FileSystemTreeItemPresentationModel = {\n    hasChildren: boolean;\n    name: string;\n    path: string;\n    parent?: FileSystemFolderModel | null;\n    isFolder: boolean;\n};\n\nexport type FolderResponseModel = {\n    name: string;\n    id: string;\n};\n\nexport type GodModeConfig = {\n    featuresToHide: Array<(string)>;\n    diagnostics: DiagnosticsConfig;\n};\n\nexport type HealthCheckActionRequestModel = {\n    healthCheck: ReferenceByIdModel;\n    alias?: string | null;\n    name?: string | null;\n    description?: string | null;\n    valueRequired: boolean;\n    providedValue?: string | null;\n    providedValueValidation?: string | null;\n    providedValueValidationRegex?: string | null;\n};\n\nexport type HealthCheckGroupPresentationModel = {\n    name: string;\n    checks: Array<(HealthCheckModel)>;\n};\n\nexport type HealthCheckGroupResponseModel = {\n    name: string;\n};\n\nexport type HealthCheckGroupWithResultResponseModel = {\n    checks: Array<(HealthCheckWithResultPresentationModel)>;\n};\n\nexport type HealthCheckModel = {\n    id: string;\n    name: string;\n    description?: string | null;\n};\n\nexport type HealthCheckResultResponseModel = {\n    message: string;\n    resultType: StatusResultTypeModel;\n    actions?: Array<(HealthCheckActionRequestModel)> | null;\n    readMoreLink?: string | null;\n};\n\nexport type HealthCheckWithResultPresentationModel = {\n    id: string;\n    results?: Array<(HealthCheckResultResponseModel)> | null;\n};\n\nexport enum HealthStatusModel {\n    HEALTHY = 'Healthy',\n    UNHEALTHY = 'Unhealthy',\n    REBUILDING = 'Rebuilding'\n}\n\nexport type HealthStatusResponseModel = {\n    status: HealthStatusModel;\n    message?: string | null;\n};\n\nexport type HelpPageResponseModel = {\n    name?: string | null;\n    description?: string | null;\n    url?: string | null;\n    type?: string | null;\n};\n\nexport enum ImageCropModeModel {\n    CROP = 'Crop',\n    MAX = 'Max',\n    STRETCH = 'Stretch',\n    PAD = 'Pad',\n    BOX_PAD = 'BoxPad',\n    MIN = 'Min'\n}\n\nexport type ImportDictionaryRequestModel = {\n    temporaryFile: ReferenceByIdModel;\n    parent?: ReferenceByIdModel | null;\n};\n\nexport type ImportDocumentTypeRequestModel = {\n    file: ReferenceByIdModel;\n};\n\nexport type ImportMediaTypeRequestModel = {\n    file: ReferenceByIdModel;\n};\n\nexport type IndexResponseModel = {\n    name: string;\n    healthStatus: HealthStatusResponseModel;\n    canRebuild: boolean;\n    searcherName: string;\n    documentCount: number;\n    fieldCount: number;\n    providerProperties?: {\n        [key: string]: unknown;\n    } | null;\n};\n\nexport type InstallRequestModel = {\n    user: UserInstallRequestModel;\n    database: DatabaseInstallRequestModel;\n    telemetryLevel: TelemetryLevelModel;\n};\n\nexport type InstallSettingsResponseModel = {\n    user: UserSettingsPresentationModel;\n    databases: Array<(DatabaseSettingsPresentationModel)>;\n};\n\nexport type InviteUserRequestModel = {\n    email: string;\n    userName: string;\n    name: string;\n    userGroupIds: Array<(ReferenceByIdModel)>;\n    id?: string | null;\n    message?: string | null;\n};\n\nexport type ItemBase = {\n    id: number;\n    udi: string;\n    name: string;\n    alias: string;\n    isOpen: boolean;\n};\n\nexport type ItemReferenceByIdResponseModel = {\n    id: string;\n};\n\nexport type ItemSortingRequestModel = {\n    id: string;\n    sortOrder: number;\n};\n\nexport type Lang = {\n    id: number;\n    name: string;\n    culture: string;\n};\n\nexport type LanguageItemResponseModel = {\n    name: string;\n    isoCode: string;\n};\n\nexport type LanguageResponseModel = {\n    name: string;\n    isDefault: boolean;\n    isMandatory: boolean;\n    fallbackIsoCode?: string | null;\n    isoCode: string;\n};\n\nexport type LogLevelCountsReponseModel = {\n    information: number;\n    debug: number;\n    warning: number;\n    error: number;\n    fatal: number;\n};\n\nexport enum LogLevelModel {\n    VERBOSE = 'Verbose',\n    DEBUG = 'Debug',\n    INFORMATION = 'Information',\n    WARNING = 'Warning',\n    ERROR = 'Error',\n    FATAL = 'Fatal'\n}\n\nexport type LogMessagePropertyPresentationModel = {\n    name: string;\n    value?: string | null;\n};\n\nexport type LogMessageResponseModel = {\n    timestamp: string;\n    level: LogLevelModel;\n    messageTemplate?: string | null;\n    renderedMessage?: string | null;\n    properties: Array<(LogMessagePropertyPresentationModel)>;\n    exception?: string | null;\n};\n\nexport type LogTemplateResponseModel = {\n    messageTemplate?: string | null;\n    count: number;\n};\n\nexport type LoggerResponseModel = {\n    name: string;\n    level: LogLevelModel;\n};\n\nexport type ManifestResponseModel = {\n    name: string;\n    version?: string | null;\n    extensions: Array<unknown>;\n};\n\nexport type MediaCollectionResponseModel = {\n    values: Array<(MediaValueModel)>;\n    variants: Array<(MediaVariantResponseModel)>;\n    id: string;\n    creator?: string | null;\n    sortOrder: number;\n    mediaType: MediaTypeCollectionReferenceResponseModel;\n};\n\nexport type MediaConfigurationResponseModel = {\n    disableDeleteWhenReferenced: boolean;\n    disableUnpublishWhenReferenced: boolean;\n    reservedFieldNames: Array<(string)>;\n};\n\nexport type MediaItemResponseModel = {\n    id: string;\n    isTrashed: boolean;\n    mediaType: MediaTypeReferenceResponseModel;\n    variants: Array<(VariantItemResponseModel)>;\n};\n\nexport type MediaMap = {\n    id: number;\n    udi: string;\n    name: string;\n    alias: string;\n    isOpen: boolean;\n    ext: string;\n    type: string;\n    size: number;\n    createDate: string;\n    updateDate: string;\n    path: string;\n};\n\nexport type MediaRecycleBinItemResponseModel = {\n    id: string;\n    hasChildren: boolean;\n    parent?: ItemReferenceByIdResponseModel | null;\n    mediaType: MediaTypeReferenceResponseModel;\n    variants: Array<(VariantItemResponseModel)>;\n};\n\nexport type MediaReferenceResponseModel = {\n    id: string;\n    name?: string | null;\n    mediaType: TrackedReferenceMediaTypeModel;\n};\n\nexport type MediaResponseModel = {\n    values: Array<(MediaValueModel)>;\n    variants: Array<(MediaVariantResponseModel)>;\n    id: string;\n    urls: Array<(MediaUrlInfoModel)>;\n    isTrashed: boolean;\n    mediaType: MediaTypeReferenceResponseModel;\n};\n\nexport type MediaTreeItemResponseModel = {\n    hasChildren: boolean;\n    parent?: ReferenceByIdModel | null;\n    noAccess: boolean;\n    isTrashed: boolean;\n    id: string;\n    mediaType: MediaTypeReferenceResponseModel;\n    variants: Array<(VariantItemResponseModel)>;\n};\n\nexport type MediaTypeCollectionReferenceResponseModel = {\n    id: string;\n    alias: string;\n    icon: string;\n};\n\nexport type MediaTypeCompositionModel = {\n    mediaType: ReferenceByIdModel;\n    compositionType: CompositionTypeModel;\n};\n\nexport type MediaTypeCompositionRequestModel = {\n    id?: string | null;\n    currentPropertyAliases: Array<(string)>;\n    currentCompositeIds: Array<(string)>;\n};\n\nexport type MediaTypeCompositionResponseModel = {\n    id: string;\n    name: string;\n    icon: string;\n};\n\nexport type MediaTypeItemResponseModel = {\n    id: string;\n    name: string;\n    icon?: string | null;\n};\n\nexport type MediaTypePropertyTypeContainerResponseModel = {\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name?: string | null;\n    type: string;\n    sortOrder: number;\n};\n\nexport type MediaTypePropertyTypeResponseModel = {\n    id: string;\n    container?: ReferenceByIdModel | null;\n    sortOrder: number;\n    alias: string;\n    name: string;\n    description?: string | null;\n    dataType: ReferenceByIdModel;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    validation: PropertyTypeValidationModel;\n    appearance: PropertyTypeAppearanceModel;\n};\n\nexport type MediaTypeReferenceResponseModel = {\n    id: string;\n    icon: string;\n    collection?: ReferenceByIdModel | null;\n};\n\nexport type MediaTypeResponseModel = {\n    alias: string;\n    name: string;\n    description?: string | null;\n    icon: string;\n    allowedAsRoot: boolean;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    collection?: ReferenceByIdModel | null;\n    isElement: boolean;\n    properties: Array<(MediaTypePropertyTypeResponseModel)>;\n    containers: Array<(MediaTypePropertyTypeContainerResponseModel)>;\n    id: string;\n    allowedMediaTypes: Array<(MediaTypeSortModel)>;\n    compositions: Array<(MediaTypeCompositionModel)>;\n    isDeletable: boolean;\n    aliasCanBeChanged: boolean;\n};\n\nexport type MediaTypeSortModel = {\n    mediaType: ReferenceByIdModel;\n    sortOrder: number;\n};\n\nexport type MediaTypeTreeItemResponseModel = {\n    hasChildren: boolean;\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name: string;\n    isFolder: boolean;\n    icon: string;\n    isDeletable: boolean;\n};\n\nexport type MediaUrlInfoModel = {\n    culture: string | null;\n    url: string;\n};\n\nexport type MediaUrlInfoResponseModel = {\n    id: string;\n    urlInfos: Array<(MediaUrlInfoModel)>;\n};\n\nexport type MediaValueModel = {\n    culture?: string | null;\n    segment?: string | null;\n    alias: string;\n    value?: unknown;\n};\n\nexport type MediaVariantRequestModel = {\n    culture?: string | null;\n    segment?: string | null;\n    name: string;\n};\n\nexport type MediaVariantResponseModel = {\n    culture?: string | null;\n    segment?: string | null;\n    name: string;\n    createDate: string;\n    updateDate: string;\n};\n\nexport type MemberConfigurationResponseModel = {\n    reservedFieldNames: Array<(string)>;\n};\n\nexport type MemberGroupItemResponseModel = {\n    id: string;\n    name: string;\n};\n\nexport type MemberGroupModel = {\n    id: number;\n    name: string;\n};\n\nexport type MemberGroupResponseModel = {\n    name: string;\n    id: string;\n};\n\nexport type MemberItemResponseModel = {\n    id: string;\n    memberType: MemberTypeReferenceResponseModel;\n    variants: Array<(VariantItemResponseModel)>;\n};\n\nexport type MemberModel = {\n    id: number;\n    username: string;\n    name: string;\n    email: string;\n    createDate: string;\n    udi: string;\n};\n\nexport type MemberResponseModel = {\n    values: Array<(MemberValueModel)>;\n    variants: Array<(MemberVariantResponseModel)>;\n    id: string;\n    email: string;\n    username: string;\n    memberType: MemberTypeReferenceResponseModel;\n    isApproved: boolean;\n    isLockedOut: boolean;\n    isTwoFactorEnabled: boolean;\n    failedPasswordAttempts: number;\n    lastLoginDate?: string | null;\n    lastLockoutDate?: string | null;\n    lastPasswordChangeDate?: string | null;\n    groups: Array<(string)>;\n};\n\nexport type MemberTypeCompositionModel = {\n    memberType: ReferenceByIdModel;\n    compositionType: CompositionTypeModel;\n};\n\nexport type MemberTypeCompositionRequestModel = {\n    id?: string | null;\n    currentPropertyAliases: Array<(string)>;\n    currentCompositeIds: Array<(string)>;\n};\n\nexport type MemberTypeCompositionResponseModel = {\n    id: string;\n    name: string;\n    icon: string;\n};\n\nexport type MemberTypeItemResponseModel = {\n    id: string;\n    name: string;\n    icon?: string | null;\n};\n\nexport type MemberTypePropertyTypeContainerResponseModel = {\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name?: string | null;\n    type: string;\n    sortOrder: number;\n};\n\nexport type MemberTypePropertyTypeResponseModel = {\n    id: string;\n    container?: ReferenceByIdModel | null;\n    sortOrder: number;\n    alias: string;\n    name: string;\n    description?: string | null;\n    dataType: ReferenceByIdModel;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    validation: PropertyTypeValidationModel;\n    appearance: PropertyTypeAppearanceModel;\n    isSensitive: boolean;\n    visibility: MemberTypePropertyTypeVisibilityModel;\n};\n\nexport type MemberTypePropertyTypeVisibilityModel = {\n    memberCanView: boolean;\n    memberCanEdit: boolean;\n};\n\nexport type MemberTypeReferenceResponseModel = {\n    id: string;\n    icon: string;\n    collection?: ReferenceByIdModel | null;\n};\n\nexport type MemberTypeResponseModel = {\n    alias: string;\n    name: string;\n    description?: string | null;\n    icon: string;\n    allowedAsRoot: boolean;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    collection?: ReferenceByIdModel | null;\n    isElement: boolean;\n    properties: Array<(MemberTypePropertyTypeResponseModel)>;\n    containers: Array<(MemberTypePropertyTypeContainerResponseModel)>;\n    id: string;\n    compositions: Array<(MemberTypeCompositionModel)>;\n};\n\nexport type MemberTypeTreeItemResponseModel = {\n    hasChildren: boolean;\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name: string;\n    icon: string;\n};\n\nexport type MemberValueModel = {\n    culture?: string | null;\n    segment?: string | null;\n    alias: string;\n    value?: unknown;\n};\n\nexport type MemberVariantRequestModel = {\n    culture?: string | null;\n    segment?: string | null;\n    name: string;\n};\n\nexport type MemberVariantResponseModel = {\n    culture?: string | null;\n    segment?: string | null;\n    name: string;\n    createDate: string;\n    updateDate: string;\n};\n\nexport type ModelsBuilderResponseModel = {\n    mode: ModelsModeModel;\n    canGenerate: boolean;\n    outOfDateModels: boolean;\n    lastError?: string | null;\n    version?: string | null;\n    modelsNamespace?: string | null;\n    trackingOutOfDateModels: boolean;\n};\n\nexport enum ModelsModeModel {\n    NOTHING = 'Nothing',\n    IN_MEMORY_AUTO = 'InMemoryAuto',\n    SOURCE_CODE_MANUAL = 'SourceCodeManual',\n    SOURCE_CODE_AUTO = 'SourceCodeAuto'\n}\n\nexport type MoveDataTypeRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type MoveDictionaryRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type MoveDocumentBlueprintRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type MoveDocumentRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type MoveDocumentTypeRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type MoveMediaRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type MoveMediaTypeRequestModel = {\n    target?: ReferenceByIdModel | null;\n};\n\nexport type NameValue = {\n    name: string;\n    value: string;\n};\n\nexport type NamedEntityTreeItemResponseModel = {\n    hasChildren: boolean;\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name: string;\n};\n\nexport type NoopSetupTwoFactorModel = {\n    [key: string]: unknown;\n};\n\nexport type NotificationHeaderModel = {\n    message: string;\n    category: string;\n    type: EventMessageTypeModel;\n};\n\nexport type NuCacheItem = {\n    id: number;\n    data: string;\n    title: string;\n    createDate: string;\n};\n\nexport type OEmbedResponseModel = {\n    markup: string;\n};\n\nexport type ObjectTypeResponseModel = {\n    name?: string | null;\n    id: string;\n};\n\nexport enum OperatorModel {\n    EQUALS = 'Equals',\n    NOT_EQUALS = 'NotEquals',\n    CONTAINS = 'Contains',\n    NOT_CONTAINS = 'NotContains',\n    LESS_THAN = 'LessThan',\n    LESS_THAN_EQUAL_TO = 'LessThanEqualTo',\n    GREATER_THAN = 'GreaterThan',\n    GREATER_THAN_EQUAL_TO = 'GreaterThanEqualTo'\n}\n\nexport type OutOfDateStatusResponseModel = {\n    status: OutOfDateTypeModel;\n};\n\nexport enum OutOfDateTypeModel {\n    OUT_OF_DATE = 'OutOfDate',\n    CURRENT = 'Current',\n    UNKNOWN = 'Unknown'\n}\n\nexport enum OverlaySize {\n    SMALL = 'Small',\n    MEDIUM = 'Medium',\n    LARGE = 'Large'\n}\n\nexport type PackageConfigurationResponseModel = {\n    marketplaceUrl: string;\n};\n\nexport type PackageDefinitionResponseModel = {\n    name: string;\n    contentNodeId?: string | null;\n    contentLoadChildNodes: boolean;\n    mediaIds: Array<(string)>;\n    mediaLoadChildNodes: boolean;\n    documentTypes: Array<(string)>;\n    mediaTypes: Array<(string)>;\n    dataTypes: Array<(string)>;\n    templates: Array<(string)>;\n    partialViews: Array<(string)>;\n    stylesheets: Array<(string)>;\n    scripts: Array<(string)>;\n    languages: Array<(string)>;\n    dictionaryItems: Array<(string)>;\n    id: string;\n    packagePath: string;\n};\n\nexport type PackageMigrationStatusResponseModel = {\n    packageName: string;\n    hasPendingMigrations: boolean;\n};\n\nexport type Page_1 = {\n    currentPage: number;\n    totalPages: number;\n    totalItems: number;\n    itemsPerPage: number;\n    items?: Array<(ContentItem)> | null;\n};\n\nexport type PagedAllowedDocumentTypeModel = {\n    total: number;\n    items: Array<(AllowedDocumentTypeModel)>;\n};\n\nexport type PagedAllowedMediaTypeModel = {\n    total: number;\n    items: Array<(AllowedMediaTypeModel)>;\n};\n\nexport type PagedAuditLogResponseModel = {\n    total: number;\n    items: Array<(AuditLogResponseModel)>;\n};\n\nexport type PagedCultureReponseModel = {\n    total: number;\n    items: Array<(CultureReponseModel)>;\n};\n\nexport type PagedDataTypeItemResponseModel = {\n    total: number;\n    items: Array<(DataTypeItemResponseModel)>;\n};\n\nexport type PagedDataTypeTreeItemResponseModel = {\n    total: number;\n    items: Array<(DataTypeTreeItemResponseModel)>;\n};\n\nexport type PagedDictionaryOverviewResponseModel = {\n    total: number;\n    items: Array<(DictionaryOverviewResponseModel)>;\n};\n\nexport type PagedDocumentBlueprintTreeItemResponseModel = {\n    total: number;\n    items: Array<(DocumentBlueprintTreeItemResponseModel)>;\n};\n\nexport type PagedDocumentCollectionResponseModel = {\n    total: number;\n    items: Array<(DocumentCollectionResponseModel)>;\n};\n\nexport type PagedDocumentRecycleBinItemResponseModel = {\n    total: number;\n    items: Array<(DocumentRecycleBinItemResponseModel)>;\n};\n\nexport type PagedDocumentTreeItemResponseModel = {\n    total: number;\n    items: Array<(DocumentTreeItemResponseModel)>;\n};\n\nexport type PagedDocumentTypeBlueprintItemResponseModel = {\n    total: number;\n    items: Array<(DocumentTypeBlueprintItemResponseModel)>;\n};\n\nexport type PagedDocumentTypeTreeItemResponseModel = {\n    total: number;\n    items: Array<(DocumentTypeTreeItemResponseModel)>;\n};\n\nexport type PagedDocumentVersionItemResponseModel = {\n    total: number;\n    items: Array<(DocumentVersionItemResponseModel)>;\n};\n\nexport type PagedFileSystemTreeItemPresentationModel = {\n    total: number;\n    items: Array<(FileSystemTreeItemPresentationModel)>;\n};\n\nexport type PagedHealthCheckGroupResponseModel = {\n    total: number;\n    items: Array<(HealthCheckGroupResponseModel)>;\n};\n\nexport type PagedHelpPageResponseModel = {\n    total: number;\n    items: Array<(HelpPageResponseModel)>;\n};\n\nexport type PagedIReferenceResponseModel = {\n    total: number;\n    items: Array<(DefaultReferenceResponseModel | DocumentReferenceResponseModel | MediaReferenceResponseModel)>;\n};\n\nexport type PagedIndexResponseModel = {\n    total: number;\n    items: Array<(IndexResponseModel)>;\n};\n\nexport type PagedLanguageResponseModel = {\n    total: number;\n    items: Array<(LanguageResponseModel)>;\n};\n\nexport type PagedLogMessageResponseModel = {\n    total: number;\n    items: Array<(LogMessageResponseModel)>;\n};\n\nexport type PagedLogTemplateResponseModel = {\n    total: number;\n    items: Array<(LogTemplateResponseModel)>;\n};\n\nexport type PagedLoggerResponseModel = {\n    total: number;\n    items: Array<(LoggerResponseModel)>;\n};\n\nexport type PagedMediaCollectionResponseModel = {\n    total: number;\n    items: Array<(MediaCollectionResponseModel)>;\n};\n\nexport type PagedMediaRecycleBinItemResponseModel = {\n    total: number;\n    items: Array<(MediaRecycleBinItemResponseModel)>;\n};\n\nexport type PagedMediaTreeItemResponseModel = {\n    total: number;\n    items: Array<(MediaTreeItemResponseModel)>;\n};\n\nexport type PagedMediaTypeTreeItemResponseModel = {\n    total: number;\n    items: Array<(MediaTypeTreeItemResponseModel)>;\n};\n\nexport type PagedMemberGroupResponseModel = {\n    total: number;\n    items: Array<(MemberGroupResponseModel)>;\n};\n\nexport type PagedMemberResponseModel = {\n    total: number;\n    items: Array<(MemberResponseModel)>;\n};\n\nexport type PagedMemberTypeTreeItemResponseModel = {\n    total: number;\n    items: Array<(MemberTypeTreeItemResponseModel)>;\n};\n\nexport type PagedModelDataTypeItemResponseModel = {\n    items: Array<(DataTypeItemResponseModel)>;\n    total: number;\n};\n\nexport type PagedModelDocumentItemResponseModel = {\n    items: Array<(DocumentItemResponseModel)>;\n    total: number;\n};\n\nexport type PagedModelDocumentTypeItemResponseModel = {\n    items: Array<(DocumentTypeItemResponseModel)>;\n    total: number;\n};\n\nexport type PagedModelMediaItemResponseModel = {\n    items: Array<(MediaItemResponseModel)>;\n    total: number;\n};\n\nexport type PagedModelMediaTypeItemResponseModel = {\n    items: Array<(MediaTypeItemResponseModel)>;\n    total: number;\n};\n\nexport type PagedModelMemberItemResponseModel = {\n    items: Array<(MemberItemResponseModel)>;\n    total: number;\n};\n\nexport type PagedModelMemberTypeItemResponseModel = {\n    items: Array<(MemberTypeItemResponseModel)>;\n    total: number;\n};\n\nexport type PagedModelTemplateItemResponseModel = {\n    items: Array<(TemplateItemResponseModel)>;\n    total: number;\n};\n\nexport type PagedNamedEntityTreeItemResponseModel = {\n    total: number;\n    items: Array<(NamedEntityTreeItemResponseModel)>;\n};\n\nexport type PagedObjectTypeResponseModel = {\n    total: number;\n    items: Array<(ObjectTypeResponseModel)>;\n};\n\nexport type PagedPackageDefinitionResponseModel = {\n    total: number;\n    items: Array<(PackageDefinitionResponseModel)>;\n};\n\nexport type PagedPackageMigrationStatusResponseModel = {\n    total: number;\n    items: Array<(PackageMigrationStatusResponseModel)>;\n};\n\nexport type PagedPartialViewSnippetItemResponseModel = {\n    total: number;\n    items: Array<(PartialViewSnippetItemResponseModel)>;\n};\n\nexport type PagedProblemDetailsModel = {\n    total: number;\n    items: Array<(ProblemDetails)>;\n};\n\nexport type PagedRedirectUrlResponseModel = {\n    total: number;\n    items: Array<(RedirectUrlResponseModel)>;\n};\n\nexport type PagedReferenceByIdModel = {\n    total: number;\n    items: Array<(ReferenceByIdModel)>;\n};\n\nexport type PagedRelationResponseModel = {\n    total: number;\n    items: Array<(RelationResponseModel)>;\n};\n\nexport type PagedRelationTypeResponseModel = {\n    total: number;\n    items: Array<(RelationTypeResponseModel)>;\n};\n\nexport type PagedSavedLogSearchResponseModel = {\n    total: number;\n    items: Array<(SavedLogSearchResponseModel)>;\n};\n\nexport type PagedSearchResultResponseModel = {\n    total: number;\n    items: Array<(SearchResultResponseModel)>;\n};\n\nexport type PagedSearcherResponseModel = {\n    total: number;\n    items: Array<(SearcherResponseModel)>;\n};\n\nexport type PagedSegmentResponseModel = {\n    total: number;\n    items: Array<(SegmentResponseModel)>;\n};\n\nexport type PagedTagResponseModel = {\n    total: number;\n    items: Array<(TagResponseModel)>;\n};\n\nexport type PagedTelemetryResponseModel = {\n    total: number;\n    items: Array<(TelemetryResponseModel)>;\n};\n\nexport type PagedUserDataResponseModel = {\n    total: number;\n    items: Array<(UserDataResponseModel)>;\n};\n\nexport type PagedUserGroupResponseModel = {\n    total: number;\n    items: Array<(UserGroupResponseModel)>;\n};\n\nexport type PagedUserResponseModel = {\n    total: number;\n    items: Array<(UserResponseModel)>;\n};\n\nexport type PagedWebhookEventModel = {\n    total: number;\n    items: Array<(WebhookEventModel)>;\n};\n\nexport type PagedWebhookResponseModel = {\n    total: number;\n    items: Array<(WebhookResponseModel)>;\n};\n\nexport type PartialMap = {\n    templateId: number;\n    templateAlias: string;\n    name: string;\n    path: string;\n};\n\nexport type PartialViewFolderResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n};\n\nexport type PartialViewItemResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    isFolder: boolean;\n};\n\nexport type PartialViewResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    content: string;\n};\n\nexport type PartialViewSnippetItemResponseModel = {\n    id: string;\n    name: string;\n};\n\nexport type PartialViewSnippetResponseModel = {\n    id: string;\n    name: string;\n    content: string;\n};\n\nexport type PasswordConfigurationResponseModel = {\n    minimumPasswordLength: number;\n    requireNonLetterOrDigit: boolean;\n    requireDigit: boolean;\n    requireLowercase: boolean;\n    requireUppercase: boolean;\n};\n\nexport type ProblemDetails = {\n    type?: string | null;\n    title?: string | null;\n    status?: number | null;\n    detail?: string | null;\n    instance?: string | null;\n    [key: string]: (unknown | string | number) | undefined;\n};\n\nexport type ProblemDetailsBuilderModel = {\n    [key: string]: unknown;\n};\n\nexport type ProfilingStatusRequestModel = {\n    enabled: boolean;\n};\n\nexport type ProfilingStatusResponseModel = {\n    enabled: boolean;\n};\n\nexport type PropertyTypeAppearanceModel = {\n    labelOnTop: boolean;\n};\n\nexport type PropertyTypeMap = {\n    id: number;\n    udi: string;\n    name: string;\n    alias: string;\n    isOpen: boolean;\n    editorAlias: string;\n    description: string;\n    editorId: number;\n    variesBy: string;\n    supportsPublishing: boolean;\n    storageType: string;\n};\n\nexport type PropertyTypeValidationModel = {\n    mandatory: boolean;\n    mandatoryMessage?: string | null;\n    regEx?: string | null;\n    regExMessage?: string | null;\n};\n\nexport type PublicAccessRequestModel = {\n    loginDocument: ReferenceByIdModel;\n    errorDocument: ReferenceByIdModel;\n    memberUserNames: Array<(string)>;\n    memberGroupNames: Array<(string)>;\n};\n\nexport type PublicAccessResponseModel = {\n    loginDocument: ReferenceByIdModel;\n    errorDocument: ReferenceByIdModel;\n    members: Array<(MemberItemResponseModel)>;\n    groups: Array<(MemberGroupItemResponseModel)>;\n};\n\nexport type PublishDocumentRequestModel = {\n    publishSchedules: Array<(CultureAndScheduleRequestModel)>;\n};\n\nexport type PublishDocumentWithDescendantsRequestModel = {\n    includeUnpublishedDescendants: boolean;\n    cultures: Array<(string)>;\n};\n\nexport enum RedirectStatusModel {\n    ENABLED = 'Enabled',\n    DISABLED = 'Disabled'\n}\n\nexport type RedirectUrlResponseModel = {\n    id: string;\n    originalUrl: string;\n    destinationUrl: string;\n    created: string;\n    document: ReferenceByIdModel;\n    culture?: string | null;\n};\n\nexport type RedirectUrlStatusResponseModel = {\n    status: RedirectStatusModel;\n    userIsAdmin: boolean;\n};\n\nexport type ReferenceByIdModel = {\n    id: string;\n};\n\nexport type RegisteredService = {\n    name: string;\n    namespace: string;\n    fullName: string;\n    isPublic: boolean;\n    implementName: string;\n    implementNamespace: string;\n    implementFullName: string;\n    lifetime: string;\n};\n\nexport type RelationReferenceModel = {\n    id: string;\n    name?: string | null;\n};\n\nexport type RelationResponseModel = {\n    id: string;\n    relationType: ReferenceByIdModel;\n    parent: RelationReferenceModel;\n    child: RelationReferenceModel;\n    createDate: string;\n    comment?: string | null;\n};\n\nexport type RelationTypeItemResponseModel = {\n    id: string;\n    name: string;\n    isDeletable: boolean;\n};\n\nexport type RelationTypeResponseModel = {\n    name: string;\n    isBidirectional: boolean;\n    isDependency: boolean;\n    id: string;\n    alias?: string | null;\n    parentObject?: ObjectTypeResponseModel | null;\n    childObject?: ObjectTypeResponseModel | null;\n};\n\nexport type RenamePartialViewRequestModel = {\n    name: string;\n};\n\nexport type RenameScriptRequestModel = {\n    name: string;\n};\n\nexport type RenameStylesheetRequestModel = {\n    name: string;\n};\n\nexport type ResendInviteUserRequestModel = {\n    user: ReferenceByIdModel;\n    message?: string | null;\n};\n\nexport type ResetPasswordRequestModel = {\n    email: string;\n};\n\nexport type ResetPasswordTokenRequestModel = {\n    user: ReferenceByIdModel;\n    resetCode: string;\n    password: string;\n};\n\nexport type ResetPasswordUserResponseModel = {\n    resetPassword?: string | null;\n};\n\nexport enum RuntimeLevelModel {\n    UNKNOWN = 'Unknown',\n    BOOT = 'Boot',\n    INSTALL = 'Install',\n    UPGRADE = 'Upgrade',\n    RUN = 'Run',\n    BOOT_FAILED = 'BootFailed'\n}\n\nexport enum RuntimeModeModel {\n    BACKOFFICE_DEVELOPMENT = 'BackofficeDevelopment',\n    DEVELOPMENT = 'Development',\n    PRODUCTION = 'Production'\n}\n\nexport type SavedLogSearchRequestModel = {\n    name: string;\n    query: string;\n};\n\nexport type SavedLogSearchResponseModel = {\n    name: string;\n    query: string;\n};\n\nexport type ScheduleRequestModel = {\n    publishTime?: string | null;\n    unpublishTime?: string | null;\n};\n\nexport type ScriptFolderResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n};\n\nexport type ScriptItemResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    isFolder: boolean;\n};\n\nexport type ScriptResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    content: string;\n};\n\nexport type SearchResultResponseModel = {\n    id: string;\n    score: number;\n    readonly fieldCount: number;\n    fields: Array<(FieldPresentationModel)>;\n};\n\nexport type SearcherResponseModel = {\n    name: string;\n};\n\nexport type SecurityConfigurationResponseModel = {\n    passwordConfiguration: PasswordConfigurationResponseModel;\n};\n\nexport type SegmentResponseModel = {\n    name: string;\n    alias: string;\n};\n\nexport type ServerConfigurationItemResponseModel = {\n    name: string;\n    data: string;\n};\n\nexport type ServerConfigurationResponseModel = {\n    allowPasswordReset: boolean;\n};\n\nexport type ServerInformationResponseModel = {\n    version: string;\n    assemblyVersion: string;\n    baseUtcOffset: string;\n    runtimeMode: RuntimeModeModel;\n};\n\nexport type ServerResponse = {\n    message: string;\n    responseType: ServerResponseType;\n    readonly response: string;\n};\n\nexport enum ServerResponseType {\n    SUCCESS = 'Success',\n    ERROR = 'Error',\n    WARNING = 'Warning'\n}\n\nexport type ServerStatusResponseModel = {\n    serverStatus: RuntimeLevelModel;\n};\n\nexport type ServerTroubleshootingResponseModel = {\n    items: Array<(ServerConfigurationItemResponseModel)>;\n};\n\nexport type SetAvatarRequestModel = {\n    file: ReferenceByIdModel;\n};\n\nexport type SortingRequestModel = {\n    parent?: ReferenceByIdModel | null;\n    sorting: Array<(ItemSortingRequestModel)>;\n};\n\nexport type StaticFileItemResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    isFolder: boolean;\n};\n\nexport enum StatusResultTypeModel {\n    SUCCESS = 'Success',\n    WARNING = 'Warning',\n    ERROR = 'Error',\n    INFO = 'Info'\n}\n\nexport type StylesheetFolderResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n};\n\nexport type StylesheetItemResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    isFolder: boolean;\n};\n\nexport type StylesheetResponseModel = {\n    path: string;\n    name: string;\n    parent?: FileSystemFolderModel | null;\n    content: string;\n};\n\nexport type Tag = {\n    text: string;\n    group: string;\n    id: number;\n    nodeCount: number;\n    culture: string;\n};\n\nexport type TagMapping = {\n    key: string;\n    tag: Tag;\n    content: Array<(ContentTags)>;\n    culture: string;\n};\n\nexport type TagResponseModel = {\n    id: string;\n    text?: string | null;\n    group?: string | null;\n    nodeCount: number;\n};\n\nexport enum TelemetryLevelModel {\n    MINIMAL = 'Minimal',\n    BASIC = 'Basic',\n    DETAILED = 'Detailed'\n}\n\nexport type TelemetryRequestModel = {\n    telemetryLevel: TelemetryLevelModel;\n};\n\nexport type TelemetryResponseModel = {\n    telemetryLevel: TelemetryLevelModel;\n};\n\nexport type TemplateConfigurationResponseModel = {\n    disabled: boolean;\n};\n\nexport type TemplateItemResponseModel = {\n    id: string;\n    name: string;\n    alias: string;\n};\n\nexport type TemplateMap = {\n    id: number;\n    udi: string;\n    name: string;\n    alias: string;\n    isOpen: boolean;\n    path: string;\n    isDefault: boolean;\n};\n\nexport type TemplateModel = {\n    id: number;\n    udi: string;\n    name: string;\n    alias: string;\n    isOpen: boolean;\n    virtualPath: string;\n    createDate: string;\n    isMaster: boolean;\n    parents: Array<(TemplateModel)>;\n    path: string;\n    masterAlias: string;\n    filePath: string;\n    hasCorrectMaster: boolean;\n    layout: string;\n    partials: Array<(PartialMap)>;\n    viewComponents: Array<(ComponentMap)>;\n};\n\nexport type TemplateQueryExecuteFilterPresentationModel = {\n    propertyAlias: string;\n    constraintValue: string;\n    operator: OperatorModel;\n};\n\nexport type TemplateQueryExecuteModel = {\n    rootDocument?: ReferenceByIdModel | null;\n    documentTypeAlias?: string | null;\n    filters?: Array<(TemplateQueryExecuteFilterPresentationModel)> | null;\n    sort?: TemplateQueryExecuteSortModel | null;\n    take: number;\n};\n\nexport type TemplateQueryExecuteSortModel = {\n    propertyAlias: string;\n    direction?: string | null;\n};\n\nexport type TemplateQueryOperatorModel = {\n    operator: OperatorModel;\n    applicableTypes: Array<TemplateQueryPropertyTypeModel>;\n};\n\nexport type TemplateQueryPropertyPresentationModel = {\n    alias: string;\n    type: TemplateQueryPropertyTypeModel;\n};\n\nexport enum TemplateQueryPropertyTypeModel {\n    STRING = 'String',\n    DATE_TIME = 'DateTime',\n    INTEGER = 'Integer'\n}\n\nexport type TemplateQueryResultItemPresentationModel = {\n    icon: string;\n    name: string;\n};\n\nexport type TemplateQueryResultResponseModel = {\n    queryExpression: string;\n    sampleResults: Array<(TemplateQueryResultItemPresentationModel)>;\n    resultCount: number;\n    executionTime: number;\n};\n\nexport type TemplateQuerySettingsResponseModel = {\n    documentTypeAliases: Array<(string)>;\n    properties: Array<(TemplateQueryPropertyPresentationModel)>;\n    operators: Array<(TemplateQueryOperatorModel)>;\n};\n\nexport type TemplateResponseModel = {\n    name: string;\n    alias: string;\n    content?: string | null;\n    id: string;\n    masterTemplate?: ReferenceByIdModel | null;\n};\n\nexport type TemporaryFileConfigurationResponseModel = {\n    imageFileTypes: Array<(string)>;\n    disallowedUploadedFilesExtensions: Array<(string)>;\n    allowedUploadedFileExtensions: Array<(string)>;\n    maxFileSize?: number | null;\n};\n\nexport type TemporaryFileResponseModel = {\n    id: string;\n    availableUntil?: string | null;\n    fileName: string;\n};\n\nexport type TrackedReferenceDocumentTypeModel = {\n    icon?: string | null;\n    alias?: string | null;\n    name?: string | null;\n};\n\nexport type TrackedReferenceMediaTypeModel = {\n    icon?: string | null;\n    alias?: string | null;\n    name?: string | null;\n};\n\nexport type TypeMap = {\n    module: string;\n    assembly: string;\n    name: string;\n    namespace: string;\n    baseType: string;\n    loadableName: string;\n    isUmbraco: boolean;\n};\n\nexport type UnknownTypePermissionPresentationModel = {\n    $type: string;\n    verbs: Array<(string)>;\n    context: string;\n};\n\nexport type UnlockUsersRequestModel = {\n    userIds: Array<(ReferenceByIdModel)>;\n};\n\nexport type UnpublishDocumentRequestModel = {\n    cultures?: Array<(string)> | null;\n};\n\nexport type UpdateDataTypeRequestModel = {\n    name: string;\n    editorAlias: string;\n    editorUiAlias: string;\n    values: Array<(DataTypePropertyPresentationModel)>;\n};\n\nexport type UpdateDictionaryItemRequestModel = {\n    name: string;\n    translations: Array<(DictionaryItemTranslationModel)>;\n};\n\nexport type UpdateDocumentBlueprintRequestModel = {\n    values: Array<(DocumentValueModel)>;\n    variants: Array<(DocumentVariantRequestModel)>;\n};\n\nexport type UpdateDocumentNotificationsRequestModel = {\n    subscribedActionIds: Array<(string)>;\n};\n\nexport type UpdateDocumentRequestModel = {\n    values: Array<(DocumentValueModel)>;\n    variants: Array<(DocumentVariantRequestModel)>;\n    template?: ReferenceByIdModel | null;\n};\n\nexport type UpdateDocumentTypePropertyTypeContainerRequestModel = {\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name?: string | null;\n    type: string;\n    sortOrder: number;\n};\n\nexport type UpdateDocumentTypePropertyTypeRequestModel = {\n    id: string;\n    container?: ReferenceByIdModel | null;\n    sortOrder: number;\n    alias: string;\n    name: string;\n    description?: string | null;\n    dataType: ReferenceByIdModel;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    validation: PropertyTypeValidationModel;\n    appearance: PropertyTypeAppearanceModel;\n};\n\nexport type UpdateDocumentTypeRequestModel = {\n    alias: string;\n    name: string;\n    description?: string | null;\n    icon: string;\n    allowedAsRoot: boolean;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    collection?: ReferenceByIdModel | null;\n    isElement: boolean;\n    properties: Array<(UpdateDocumentTypePropertyTypeRequestModel)>;\n    containers: Array<(UpdateDocumentTypePropertyTypeContainerRequestModel)>;\n    allowedTemplates: Array<(ReferenceByIdModel)>;\n    defaultTemplate?: ReferenceByIdModel | null;\n    cleanup: DocumentTypeCleanupModel;\n    allowedDocumentTypes: Array<(DocumentTypeSortModel)>;\n    compositions: Array<(DocumentTypeCompositionModel)>;\n};\n\nexport type UpdateDomainsRequestModel = {\n    defaultIsoCode?: string | null;\n    domains: Array<(DomainPresentationModel)>;\n};\n\nexport type UpdateFolderResponseModel = {\n    name: string;\n};\n\nexport type UpdateLanguageRequestModel = {\n    name: string;\n    isDefault: boolean;\n    isMandatory: boolean;\n    fallbackIsoCode?: string | null;\n};\n\nexport type UpdateMediaRequestModel = {\n    values: Array<(MediaValueModel)>;\n    variants: Array<(MediaVariantRequestModel)>;\n};\n\nexport type UpdateMediaTypePropertyTypeContainerRequestModel = {\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name?: string | null;\n    type: string;\n    sortOrder: number;\n};\n\nexport type UpdateMediaTypePropertyTypeRequestModel = {\n    id: string;\n    container?: ReferenceByIdModel | null;\n    sortOrder: number;\n    alias: string;\n    name: string;\n    description?: string | null;\n    dataType: ReferenceByIdModel;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    validation: PropertyTypeValidationModel;\n    appearance: PropertyTypeAppearanceModel;\n};\n\nexport type UpdateMediaTypeRequestModel = {\n    alias: string;\n    name: string;\n    description?: string | null;\n    icon: string;\n    allowedAsRoot: boolean;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    collection?: ReferenceByIdModel | null;\n    isElement: boolean;\n    properties: Array<(UpdateMediaTypePropertyTypeRequestModel)>;\n    containers: Array<(UpdateMediaTypePropertyTypeContainerRequestModel)>;\n    allowedMediaTypes: Array<(MediaTypeSortModel)>;\n    compositions: Array<(MediaTypeCompositionModel)>;\n};\n\nexport type UpdateMemberGroupRequestModel = {\n    name: string;\n};\n\nexport type UpdateMemberRequestModel = {\n    values: Array<(MemberValueModel)>;\n    variants: Array<(MemberVariantRequestModel)>;\n    email: string;\n    username: string;\n    oldPassword?: string | null;\n    newPassword?: string | null;\n    groups?: Array<(string)> | null;\n    isApproved: boolean;\n    isLockedOut: boolean;\n    isTwoFactorEnabled: boolean;\n};\n\nexport type UpdateMemberTypePropertyTypeContainerRequestModel = {\n    id: string;\n    parent?: ReferenceByIdModel | null;\n    name?: string | null;\n    type: string;\n    sortOrder: number;\n};\n\nexport type UpdateMemberTypePropertyTypeRequestModel = {\n    id: string;\n    container?: ReferenceByIdModel | null;\n    sortOrder: number;\n    alias: string;\n    name: string;\n    description?: string | null;\n    dataType: ReferenceByIdModel;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    validation: PropertyTypeValidationModel;\n    appearance: PropertyTypeAppearanceModel;\n    isSensitive: boolean;\n    visibility: MemberTypePropertyTypeVisibilityModel;\n};\n\nexport type UpdateMemberTypeRequestModel = {\n    alias: string;\n    name: string;\n    description?: string | null;\n    icon: string;\n    allowedAsRoot: boolean;\n    variesByCulture: boolean;\n    variesBySegment: boolean;\n    collection?: ReferenceByIdModel | null;\n    isElement: boolean;\n    properties: Array<(UpdateMemberTypePropertyTypeRequestModel)>;\n    containers: Array<(UpdateMemberTypePropertyTypeContainerRequestModel)>;\n    compositions: Array<(MemberTypeCompositionModel)>;\n};\n\nexport type UpdatePackageRequestModel = {\n    name: string;\n    contentNodeId?: string | null;\n    contentLoadChildNodes: boolean;\n    mediaIds: Array<(string)>;\n    mediaLoadChildNodes: boolean;\n    documentTypes: Array<(string)>;\n    mediaTypes: Array<(string)>;\n    dataTypes: Array<(string)>;\n    templates: Array<(string)>;\n    partialViews: Array<(string)>;\n    stylesheets: Array<(string)>;\n    scripts: Array<(string)>;\n    languages: Array<(string)>;\n    dictionaryItems: Array<(string)>;\n    packagePath: string;\n};\n\nexport type UpdatePartialViewRequestModel = {\n    content: string;\n};\n\nexport type UpdateScriptRequestModel = {\n    content: string;\n};\n\nexport type UpdateStylesheetRequestModel = {\n    content: string;\n};\n\nexport type UpdateTemplateRequestModel = {\n    name: string;\n    alias: string;\n    content?: string | null;\n};\n\nexport type UpdateUserDataRequestModel = {\n    group: string;\n    identifier: string;\n    value: string;\n    key: string;\n};\n\nexport type UpdateUserGroupRequestModel = {\n    name: string;\n    alias: string;\n    icon?: string | null;\n    sections: Array<(string)>;\n    languages: Array<(string)>;\n    hasAccessToAllLanguages: boolean;\n    documentStartNode?: ReferenceByIdModel | null;\n    documentRootAccess: boolean;\n    mediaStartNode?: ReferenceByIdModel | null;\n    mediaRootAccess: boolean;\n    fallbackPermissions: Array<(string)>;\n    permissions: Array<(DocumentPermissionPresentationModel | UnknownTypePermissionPresentationModel)>;\n};\n\nexport type UpdateUserGroupsOnUserRequestModel = {\n    userIds: Array<(ReferenceByIdModel)>;\n    userGroupIds: Array<(ReferenceByIdModel)>;\n};\n\nexport type UpdateUserRequestModel = {\n    email: string;\n    userName: string;\n    name: string;\n    userGroupIds: Array<(ReferenceByIdModel)>;\n    languageIsoCode: string;\n    documentStartNodeIds: Array<(ReferenceByIdModel)>;\n    hasDocumentRootAccess: boolean;\n    mediaStartNodeIds: Array<(ReferenceByIdModel)>;\n    hasMediaRootAccess: boolean;\n};\n\nexport type UpdateWebhookRequestModel = {\n    enabled: boolean;\n    url: string;\n    contentTypeKeys: Array<(string)>;\n    headers: {\n        [key: string]: (string);\n    };\n    events: Array<(string)>;\n};\n\nexport type UpgradeSettingsResponseModel = {\n    currentState: string;\n    newState: string;\n    newVersion: string;\n    oldVersion: string;\n    readonly reportUrl: string;\n};\n\nexport type UsageModel = {\n    id: number;\n    nodeCount: number;\n    description: string;\n    alias: string;\n    icon: string;\n    guidType: string;\n    readonly type: string;\n};\n\nexport type UserConfigurationResponseModel = {\n    canInviteUsers: boolean;\n    passwordConfiguration: PasswordConfigurationResponseModel;\n};\n\nexport type UserDataModel = {\n    group: string;\n    identifier: string;\n    value: string;\n};\n\nexport enum UserDataOperationStatusModel {\n    SUCCESS = 'Success',\n    NOT_FOUND = 'NotFound',\n    USER_NOT_FOUND = 'UserNotFound',\n    ALREADY_EXISTS = 'AlreadyExists'\n}\n\nexport type UserDataResponseModel = {\n    group: string;\n    identifier: string;\n    value: string;\n    key: string;\n};\n\nexport type UserExternalLoginProviderModel = {\n    providerSchemeName: string;\n    providerKey?: string | null;\n    isLinkedOnUser: boolean;\n    hasManualLinkingEnabled: boolean;\n};\n\nexport type UserGroupItemResponseModel = {\n    id: string;\n    name: string;\n    icon?: string | null;\n    alias?: string | null;\n};\n\nexport type UserGroupResponseModel = {\n    name: string;\n    alias: string;\n    icon?: string | null;\n    sections: Array<(string)>;\n    languages: Array<(string)>;\n    hasAccessToAllLanguages: boolean;\n    documentStartNode?: ReferenceByIdModel | null;\n    documentRootAccess: boolean;\n    mediaStartNode?: ReferenceByIdModel | null;\n    mediaRootAccess: boolean;\n    fallbackPermissions: Array<(string)>;\n    permissions: Array<(DocumentPermissionPresentationModel | UnknownTypePermissionPresentationModel)>;\n    id: string;\n    isDeletable: boolean;\n    aliasCanBeChanged: boolean;\n};\n\nexport type UserInstallRequestModel = {\n    name: string;\n    email: string;\n    password: string;\n    readonly subscribeToNewsletter: boolean;\n};\n\nexport type UserItemResponseModel = {\n    id: string;\n    name: string;\n    avatarUrls: Array<(string)>;\n};\n\nexport enum UserOrderModel {\n    USER_NAME = 'UserName',\n    LANGUAGE = 'Language',\n    NAME = 'Name',\n    EMAIL = 'Email',\n    ID = 'Id',\n    CREATE_DATE = 'CreateDate',\n    UPDATE_DATE = 'UpdateDate',\n    IS_APPROVED = 'IsApproved',\n    IS_LOCKED_OUT = 'IsLockedOut',\n    LAST_LOGIN_DATE = 'LastLoginDate'\n}\n\nexport type UserPermissionModel = {\n    nodeKey: string;\n    permissions: Array<(string)>;\n};\n\nexport type UserPermissionsResponseModel = {\n    permissions: Array<(UserPermissionModel)>;\n};\n\nexport type UserResponseModel = {\n    email: string;\n    userName: string;\n    name: string;\n    userGroupIds: Array<(ReferenceByIdModel)>;\n    id: string;\n    languageIsoCode?: string | null;\n    documentStartNodeIds: Array<(ReferenceByIdModel)>;\n    hasDocumentRootAccess: boolean;\n    mediaStartNodeIds: Array<(ReferenceByIdModel)>;\n    hasMediaRootAccess: boolean;\n    avatarUrls: Array<(string)>;\n    state: UserStateModel;\n    failedLoginAttempts: number;\n    createDate: string;\n    updateDate: string;\n    lastLoginDate?: string | null;\n    lastLockoutDate?: string | null;\n    lastPasswordChangeDate?: string | null;\n    isAdmin: boolean;\n};\n\nexport type UserSettingsPresentationModel = {\n    minCharLength: number;\n    minNonAlphaNumericLength: number;\n    consentLevels: Array<(ConsentLevelPresentationModel)>;\n};\n\nexport enum UserStateModel {\n    ACTIVE = 'Active',\n    DISABLED = 'Disabled',\n    LOCKED_OUT = 'LockedOut',\n    INVITED = 'Invited',\n    INACTIVE = 'Inactive',\n    ALL = 'All'\n}\n\nexport type UserTwoFactorProviderModel = {\n    providerName: string;\n    isEnabledOnUser: boolean;\n};\n\nexport type VariantItemResponseModel = {\n    name: string;\n    culture?: string | null;\n};\n\nexport type VerifyInviteUserRequestModel = {\n    user: ReferenceByIdModel;\n    token: string;\n};\n\nexport type VerifyInviteUserResponseModel = {\n    passwordConfiguration: PasswordConfigurationResponseModel;\n};\n\nexport type VerifyResetPasswordResponseModel = {\n    passwordConfiguration: PasswordConfigurationResponseModel;\n};\n\nexport type VerifyResetPasswordTokenRequestModel = {\n    user: ReferenceByIdModel;\n    resetCode: string;\n};\n\nexport type WebhookEventModel = {\n    eventName: string;\n    eventType: string;\n    alias: string;\n};\n\nexport type WebhookEventResponseModel = {\n    eventName: string;\n    eventType: string;\n    alias: string;\n};\n\nexport type WebhookItemResponseModel = {\n    enabled: boolean;\n    name: string;\n    events: string;\n    url: string;\n    types: string;\n};\n\nexport type WebhookResponseModel = {\n    enabled: boolean;\n    url: string;\n    contentTypeKeys: Array<(string)>;\n    headers: {\n        [key: string]: (string);\n    };\n    id: string;\n    events: Array<(WebhookEventResponseModel)>;\n};\n\nexport type GetContentmentConfigurationEditorModelsData = {\n    type?: string;\n};\n\nexport type GetContentmentConfigurationEditorModelsResponse = ConfigurationEditorModelsResponseModel;\n\nexport type PostContentmentDataListEditorData = {\n    requestBody?: DataListConfigurationRequestModel;\n};\n\nexport type PostContentmentDataListEditorResponse = DataListEditorResponseModel;\n\nexport type GetCultureData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetCultureResponse = PagedCultureReponseModel;\n\nexport type PostDataTypeData = {\n    requestBody?: CreateDataTypeRequestModel;\n};\n\nexport type PostDataTypeResponse = string;\n\nexport type GetDataTypeByIdData = {\n    id: string;\n};\n\nexport type GetDataTypeByIdResponse = DataTypeResponseModel;\n\nexport type DeleteDataTypeByIdData = {\n    id: string;\n};\n\nexport type DeleteDataTypeByIdResponse = string;\n\nexport type PutDataTypeByIdData = {\n    id: string;\n    requestBody?: UpdateDataTypeRequestModel;\n};\n\nexport type PutDataTypeByIdResponse = string;\n\nexport type PostDataTypeByIdCopyData = {\n    id: string;\n    requestBody?: CopyDataTypeRequestModel;\n};\n\nexport type PostDataTypeByIdCopyResponse = string;\n\nexport type GetDataTypeByIdIsUsedData = {\n    id: string;\n};\n\nexport type GetDataTypeByIdIsUsedResponse = boolean;\n\nexport type PutDataTypeByIdMoveData = {\n    id: string;\n    requestBody?: MoveDataTypeRequestModel;\n};\n\nexport type PutDataTypeByIdMoveResponse = string;\n\nexport type GetDataTypeByIdReferencesData = {\n    id: string;\n};\n\nexport type GetDataTypeByIdReferencesResponse = Array<(DataTypeReferenceResponseModel)>;\n\nexport type GetDataTypeConfigurationResponse = DatatypeConfigurationResponseModel;\n\nexport type PostDataTypeFolderData = {\n    requestBody?: CreateFolderRequestModel;\n};\n\nexport type PostDataTypeFolderResponse = string;\n\nexport type GetDataTypeFolderByIdData = {\n    id: string;\n};\n\nexport type GetDataTypeFolderByIdResponse = FolderResponseModel;\n\nexport type DeleteDataTypeFolderByIdData = {\n    id: string;\n};\n\nexport type DeleteDataTypeFolderByIdResponse = string;\n\nexport type PutDataTypeFolderByIdData = {\n    id: string;\n    requestBody?: UpdateFolderResponseModel;\n};\n\nexport type PutDataTypeFolderByIdResponse = string;\n\nexport type GetFilterDataTypeData = {\n    editorAlias?: string;\n    editorUiAlias?: string;\n    name?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetFilterDataTypeResponse = PagedDataTypeItemResponseModel;\n\nexport type GetItemDataTypeData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemDataTypeResponse = Array<(DataTypeItemResponseModel)>;\n\nexport type GetItemDataTypeSearchData = {\n    query?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemDataTypeSearchResponse = PagedModelDataTypeItemResponseModel;\n\nexport type GetTreeDataTypeAncestorsData = {\n    descendantId?: string;\n};\n\nexport type GetTreeDataTypeAncestorsResponse = Array<(DataTypeTreeItemResponseModel)>;\n\nexport type GetTreeDataTypeChildrenData = {\n    foldersOnly?: boolean;\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDataTypeChildrenResponse = PagedDataTypeTreeItemResponseModel;\n\nexport type GetTreeDataTypeRootData = {\n    foldersOnly?: boolean;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDataTypeRootResponse = PagedDataTypeTreeItemResponseModel;\n\nexport type GetDictionaryData = {\n    filter?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDictionaryResponse = PagedDictionaryOverviewResponseModel;\n\nexport type PostDictionaryData = {\n    requestBody?: CreateDictionaryItemRequestModel;\n};\n\nexport type PostDictionaryResponse = string;\n\nexport type GetDictionaryByIdData = {\n    id: string;\n};\n\nexport type GetDictionaryByIdResponse = DictionaryItemResponseModel;\n\nexport type DeleteDictionaryByIdData = {\n    id: string;\n};\n\nexport type DeleteDictionaryByIdResponse = string;\n\nexport type PutDictionaryByIdData = {\n    id: string;\n    requestBody?: UpdateDictionaryItemRequestModel;\n};\n\nexport type PutDictionaryByIdResponse = string;\n\nexport type GetDictionaryByIdExportData = {\n    id: string;\n    includeChildren?: boolean;\n};\n\nexport type GetDictionaryByIdExportResponse = (Blob | File);\n\nexport type PutDictionaryByIdMoveData = {\n    id: string;\n    requestBody?: MoveDictionaryRequestModel;\n};\n\nexport type PutDictionaryByIdMoveResponse = string;\n\nexport type PostDictionaryImportData = {\n    requestBody?: ImportDictionaryRequestModel;\n};\n\nexport type PostDictionaryImportResponse = string;\n\nexport type GetItemDictionaryData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemDictionaryResponse = Array<(DictionaryItemItemResponseModel)>;\n\nexport type GetTreeDictionaryAncestorsData = {\n    descendantId?: string;\n};\n\nexport type GetTreeDictionaryAncestorsResponse = Array<(NamedEntityTreeItemResponseModel)>;\n\nexport type GetTreeDictionaryChildrenData = {\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDictionaryChildrenResponse = PagedNamedEntityTreeItemResponseModel;\n\nexport type GetTreeDictionaryRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDictionaryRootResponse = PagedNamedEntityTreeItemResponseModel;\n\nexport type PostDocumentBlueprintData = {\n    requestBody?: CreateDocumentBlueprintRequestModel;\n};\n\nexport type PostDocumentBlueprintResponse = string;\n\nexport type GetDocumentBlueprintByIdData = {\n    id: string;\n};\n\nexport type GetDocumentBlueprintByIdResponse = DocumentBlueprintResponseModel;\n\nexport type DeleteDocumentBlueprintByIdData = {\n    id: string;\n};\n\nexport type DeleteDocumentBlueprintByIdResponse = string;\n\nexport type PutDocumentBlueprintByIdData = {\n    id: string;\n    requestBody?: UpdateDocumentBlueprintRequestModel;\n};\n\nexport type PutDocumentBlueprintByIdResponse = string;\n\nexport type PutDocumentBlueprintByIdMoveData = {\n    id: string;\n    requestBody?: MoveDocumentBlueprintRequestModel;\n};\n\nexport type PutDocumentBlueprintByIdMoveResponse = string;\n\nexport type PostDocumentBlueprintFolderData = {\n    requestBody?: CreateFolderRequestModel;\n};\n\nexport type PostDocumentBlueprintFolderResponse = string;\n\nexport type GetDocumentBlueprintFolderByIdData = {\n    id: string;\n};\n\nexport type GetDocumentBlueprintFolderByIdResponse = FolderResponseModel;\n\nexport type DeleteDocumentBlueprintFolderByIdData = {\n    id: string;\n};\n\nexport type DeleteDocumentBlueprintFolderByIdResponse = string;\n\nexport type PutDocumentBlueprintFolderByIdData = {\n    id: string;\n    requestBody?: UpdateFolderResponseModel;\n};\n\nexport type PutDocumentBlueprintFolderByIdResponse = string;\n\nexport type PostDocumentBlueprintFromDocumentData = {\n    requestBody?: CreateDocumentBlueprintFromDocumentRequestModel;\n};\n\nexport type PostDocumentBlueprintFromDocumentResponse = string;\n\nexport type GetItemDocumentBlueprintData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemDocumentBlueprintResponse = Array<(DocumentBlueprintItemResponseModel)>;\n\nexport type GetTreeDocumentBlueprintAncestorsData = {\n    descendantId?: string;\n};\n\nexport type GetTreeDocumentBlueprintAncestorsResponse = Array<(DocumentBlueprintTreeItemResponseModel)>;\n\nexport type GetTreeDocumentBlueprintChildrenData = {\n    foldersOnly?: boolean;\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDocumentBlueprintChildrenResponse = PagedDocumentBlueprintTreeItemResponseModel;\n\nexport type GetTreeDocumentBlueprintRootData = {\n    foldersOnly?: boolean;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDocumentBlueprintRootResponse = PagedDocumentBlueprintTreeItemResponseModel;\n\nexport type PostDocumentTypeData = {\n    requestBody?: CreateDocumentTypeRequestModel;\n};\n\nexport type PostDocumentTypeResponse = string;\n\nexport type GetDocumentTypeByIdData = {\n    id: string;\n};\n\nexport type GetDocumentTypeByIdResponse = DocumentTypeResponseModel;\n\nexport type DeleteDocumentTypeByIdData = {\n    id: string;\n};\n\nexport type DeleteDocumentTypeByIdResponse = string;\n\nexport type PutDocumentTypeByIdData = {\n    id: string;\n    requestBody?: UpdateDocumentTypeRequestModel;\n};\n\nexport type PutDocumentTypeByIdResponse = string;\n\nexport type GetDocumentTypeByIdAllowedChildrenData = {\n    id: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDocumentTypeByIdAllowedChildrenResponse = PagedAllowedDocumentTypeModel;\n\nexport type GetDocumentTypeByIdBlueprintData = {\n    id: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDocumentTypeByIdBlueprintResponse = PagedDocumentTypeBlueprintItemResponseModel;\n\nexport type GetDocumentTypeByIdCompositionReferencesData = {\n    id: string;\n};\n\nexport type GetDocumentTypeByIdCompositionReferencesResponse = Array<(DocumentTypeCompositionResponseModel)>;\n\nexport type PostDocumentTypeByIdCopyData = {\n    id: string;\n    requestBody?: CopyDocumentTypeRequestModel;\n};\n\nexport type PostDocumentTypeByIdCopyResponse = string;\n\nexport type GetDocumentTypeByIdExportData = {\n    id: string;\n};\n\nexport type GetDocumentTypeByIdExportResponse = (Blob | File);\n\nexport type PutDocumentTypeByIdImportData = {\n    id: string;\n    requestBody?: ImportDocumentTypeRequestModel;\n};\n\nexport type PutDocumentTypeByIdImportResponse = string;\n\nexport type PutDocumentTypeByIdMoveData = {\n    id: string;\n    requestBody?: MoveDocumentTypeRequestModel;\n};\n\nexport type PutDocumentTypeByIdMoveResponse = string;\n\nexport type GetDocumentTypeAllowedAtRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDocumentTypeAllowedAtRootResponse = PagedAllowedDocumentTypeModel;\n\nexport type PostDocumentTypeAvailableCompositionsData = {\n    requestBody?: DocumentTypeCompositionRequestModel;\n};\n\nexport type PostDocumentTypeAvailableCompositionsResponse = Array<(AvailableDocumentTypeCompositionResponseModel)>;\n\nexport type GetDocumentTypeConfigurationResponse = DocumentTypeConfigurationResponseModel;\n\nexport type PostDocumentTypeFolderData = {\n    requestBody?: CreateFolderRequestModel;\n};\n\nexport type PostDocumentTypeFolderResponse = string;\n\nexport type GetDocumentTypeFolderByIdData = {\n    id: string;\n};\n\nexport type GetDocumentTypeFolderByIdResponse = FolderResponseModel;\n\nexport type DeleteDocumentTypeFolderByIdData = {\n    id: string;\n};\n\nexport type DeleteDocumentTypeFolderByIdResponse = string;\n\nexport type PutDocumentTypeFolderByIdData = {\n    id: string;\n    requestBody?: UpdateFolderResponseModel;\n};\n\nexport type PutDocumentTypeFolderByIdResponse = string;\n\nexport type PostDocumentTypeImportData = {\n    requestBody?: ImportDocumentTypeRequestModel;\n};\n\nexport type PostDocumentTypeImportResponse = string;\n\nexport type GetItemDocumentTypeData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemDocumentTypeResponse = Array<(DocumentTypeItemResponseModel)>;\n\nexport type GetItemDocumentTypeSearchData = {\n    query?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemDocumentTypeSearchResponse = PagedModelDocumentTypeItemResponseModel;\n\nexport type GetTreeDocumentTypeAncestorsData = {\n    descendantId?: string;\n};\n\nexport type GetTreeDocumentTypeAncestorsResponse = Array<(DocumentTypeTreeItemResponseModel)>;\n\nexport type GetTreeDocumentTypeChildrenData = {\n    foldersOnly?: boolean;\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDocumentTypeChildrenResponse = PagedDocumentTypeTreeItemResponseModel;\n\nexport type GetTreeDocumentTypeRootData = {\n    foldersOnly?: boolean;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDocumentTypeRootResponse = PagedDocumentTypeTreeItemResponseModel;\n\nexport type GetDocumentVersionData = {\n    culture?: string;\n    documentId: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDocumentVersionResponse = PagedDocumentVersionItemResponseModel;\n\nexport type GetDocumentVersionByIdData = {\n    id: string;\n};\n\nexport type GetDocumentVersionByIdResponse = DocumentVersionResponseModel;\n\nexport type PutDocumentVersionByIdPreventCleanupData = {\n    id: string;\n    preventCleanup?: boolean;\n};\n\nexport type PutDocumentVersionByIdPreventCleanupResponse = string;\n\nexport type PostDocumentVersionByIdRollbackData = {\n    culture?: string;\n    id: string;\n};\n\nexport type PostDocumentVersionByIdRollbackResponse = string;\n\nexport type GetCollectionDocumentByIdData = {\n    dataTypeId?: string;\n    filter?: string;\n    id: string;\n    orderBy?: string;\n    orderCulture?: string;\n    orderDirection?: DirectionModel;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetCollectionDocumentByIdResponse = PagedDocumentCollectionResponseModel;\n\nexport type PostDocumentData = {\n    requestBody?: CreateDocumentRequestModel;\n};\n\nexport type PostDocumentResponse = string;\n\nexport type GetDocumentByIdData = {\n    id: string;\n};\n\nexport type GetDocumentByIdResponse = DocumentResponseModel;\n\nexport type DeleteDocumentByIdData = {\n    id: string;\n};\n\nexport type DeleteDocumentByIdResponse = string;\n\nexport type PutDocumentByIdData = {\n    id: string;\n    requestBody?: UpdateDocumentRequestModel;\n};\n\nexport type PutDocumentByIdResponse = string;\n\nexport type GetDocumentByIdAuditLogData = {\n    id: string;\n    orderDirection?: DirectionModel;\n    sinceDate?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDocumentByIdAuditLogResponse = PagedAuditLogResponseModel;\n\nexport type PostDocumentByIdCopyData = {\n    id: string;\n    requestBody?: CopyDocumentRequestModel;\n};\n\nexport type PostDocumentByIdCopyResponse = string;\n\nexport type GetDocumentByIdDomainsData = {\n    id: string;\n};\n\nexport type GetDocumentByIdDomainsResponse = DomainsResponseModel;\n\nexport type PutDocumentByIdDomainsData = {\n    id: string;\n    requestBody?: UpdateDomainsRequestModel;\n};\n\nexport type PutDocumentByIdDomainsResponse = string;\n\nexport type PutDocumentByIdMoveData = {\n    id: string;\n    requestBody?: MoveDocumentRequestModel;\n};\n\nexport type PutDocumentByIdMoveResponse = string;\n\nexport type PutDocumentByIdMoveToRecycleBinData = {\n    id: string;\n};\n\nexport type PutDocumentByIdMoveToRecycleBinResponse = string;\n\nexport type GetDocumentByIdNotificationsData = {\n    id: string;\n};\n\nexport type GetDocumentByIdNotificationsResponse = Array<(DocumentNotificationResponseModel)>;\n\nexport type PutDocumentByIdNotificationsData = {\n    id: string;\n    requestBody?: UpdateDocumentNotificationsRequestModel;\n};\n\nexport type PutDocumentByIdNotificationsResponse = string;\n\nexport type PostDocumentByIdPublicAccessData = {\n    id: string;\n    requestBody?: PublicAccessRequestModel;\n};\n\nexport type PostDocumentByIdPublicAccessResponse = string;\n\nexport type DeleteDocumentByIdPublicAccessData = {\n    id: string;\n};\n\nexport type DeleteDocumentByIdPublicAccessResponse = string;\n\nexport type GetDocumentByIdPublicAccessData = {\n    id: string;\n};\n\nexport type GetDocumentByIdPublicAccessResponse = PublicAccessResponseModel;\n\nexport type PutDocumentByIdPublicAccessData = {\n    id: string;\n    requestBody?: PublicAccessRequestModel;\n};\n\nexport type PutDocumentByIdPublicAccessResponse = string;\n\nexport type PutDocumentByIdPublishData = {\n    id: string;\n    requestBody?: PublishDocumentRequestModel;\n};\n\nexport type PutDocumentByIdPublishResponse = string;\n\nexport type PutDocumentByIdPublishWithDescendantsData = {\n    id: string;\n    requestBody?: PublishDocumentWithDescendantsRequestModel;\n};\n\nexport type PutDocumentByIdPublishWithDescendantsResponse = string;\n\nexport type GetDocumentByIdReferencedByData = {\n    id: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDocumentByIdReferencedByResponse = PagedIReferenceResponseModel;\n\nexport type GetDocumentByIdReferencedDescendantsData = {\n    id: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDocumentByIdReferencedDescendantsResponse = PagedReferenceByIdModel;\n\nexport type PutDocumentByIdUnpublishData = {\n    id: string;\n    requestBody?: UnpublishDocumentRequestModel;\n};\n\nexport type PutDocumentByIdUnpublishResponse = string;\n\nexport type PutDocumentByIdValidateData = {\n    id: string;\n    requestBody?: UpdateDocumentRequestModel;\n};\n\nexport type PutDocumentByIdValidateResponse = string;\n\nexport type GetDocumentAreReferencedData = {\n    id?: Array<(string)>;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDocumentAreReferencedResponse = PagedReferenceByIdModel;\n\nexport type GetDocumentConfigurationResponse = DocumentConfigurationResponseModel;\n\nexport type PutDocumentSortData = {\n    requestBody?: SortingRequestModel;\n};\n\nexport type PutDocumentSortResponse = string;\n\nexport type GetDocumentUrlsData = {\n    id?: Array<(string)>;\n};\n\nexport type GetDocumentUrlsResponse = Array<(DocumentUrlInfoResponseModel)>;\n\nexport type PostDocumentValidateData = {\n    requestBody?: CreateDocumentRequestModel;\n};\n\nexport type PostDocumentValidateResponse = string;\n\nexport type GetItemDocumentData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemDocumentResponse = Array<(DocumentItemResponseModel)>;\n\nexport type GetItemDocumentSearchData = {\n    query?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemDocumentSearchResponse = PagedModelDocumentItemResponseModel;\n\nexport type DeleteRecycleBinDocumentResponse = string;\n\nexport type DeleteRecycleBinDocumentByIdData = {\n    id: string;\n};\n\nexport type DeleteRecycleBinDocumentByIdResponse = string;\n\nexport type GetRecycleBinDocumentByIdOriginalParentData = {\n    id: string;\n};\n\nexport type GetRecycleBinDocumentByIdOriginalParentResponse = ReferenceByIdModel;\n\nexport type PutRecycleBinDocumentByIdRestoreData = {\n    id: string;\n    requestBody?: MoveMediaRequestModel;\n};\n\nexport type PutRecycleBinDocumentByIdRestoreResponse = string;\n\nexport type GetRecycleBinDocumentChildrenData = {\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetRecycleBinDocumentChildrenResponse = PagedDocumentRecycleBinItemResponseModel;\n\nexport type GetRecycleBinDocumentRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetRecycleBinDocumentRootResponse = PagedDocumentRecycleBinItemResponseModel;\n\nexport type GetTreeDocumentAncestorsData = {\n    descendantId?: string;\n};\n\nexport type GetTreeDocumentAncestorsResponse = Array<(DocumentTreeItemResponseModel)>;\n\nexport type GetTreeDocumentChildrenData = {\n    dataTypeId?: string;\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDocumentChildrenResponse = PagedDocumentTreeItemResponseModel;\n\nexport type GetTreeDocumentRootData = {\n    dataTypeId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeDocumentRootResponse = PagedDocumentTreeItemResponseModel;\n\nexport type PostDynamicRootQueryData = {\n    requestBody?: DynamicRootRequestModel;\n};\n\nexport type PostDynamicRootQueryResponse = DynamicRootResponseModel;\n\nexport type GetDynamicRootStepsResponse = Array<(string)>;\n\nexport type PostUmbracoManagementApiV1GodModeClearUmbracoCacheData = {\n    cache?: string;\n};\n\nexport type PostUmbracoManagementApiV1GodModeClearUmbracoCacheResponse = ServerResponse;\n\nexport type PostUmbracoManagementApiV1GodModeCopyDataTypeData = {\n    id?: number;\n};\n\nexport type PostUmbracoManagementApiV1GodModeCopyDataTypeResponse = ServerResponse;\n\nexport type PostUmbracoManagementApiV1GodModeDeleteTagData = {\n    id?: number;\n};\n\nexport type PostUmbracoManagementApiV1GodModeDeleteTagResponse = ServerResponse;\n\nexport type PostUmbracoManagementApiV1GodModeFixTemplateMastersResponse = number;\n\nexport type GetUmbracoManagementApiV1GodModeGetApiControllersResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetAssembliesResponse = Array<(NameValue)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetAssembliesWithInterfacesResponse = Array<(NameValue)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetComposersResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetCompositionsResponse = Array<(ContentTypeData)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetConfigResponse = GodModeConfig;\n\nexport type GetUmbracoManagementApiV1GodModeGetContentFindersResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetContentPagedData = {\n    alias?: string;\n    creatorId?: number;\n    id?: string;\n    languageId?: number;\n    level?: number;\n    name?: string;\n    orderBy?: string;\n    page?: number;\n    pageSize?: number;\n    trashed?: boolean;\n    updaterId?: number;\n};\n\nexport type GetUmbracoManagementApiV1GodModeGetContentPagedResponse = Page_1;\n\nexport type GetUmbracoManagementApiV1GodModeGetContentTypeAliasesResponse = Array<(string)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetContentTypeMapResponse = Array<(ContentTypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetContentUsageDataData = {\n    id?: number;\n    orderBy?: string;\n};\n\nexport type GetUmbracoManagementApiV1GodModeGetContentUsageDataResponse = Array<(UsageModel)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetDataTypesResponse = Array<(DataTypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetDataTypesStatusResponse = Array<(DataTypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetEnvironmentDiagnosticsResponse = Array<(DiagnosticGroup)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetInterfacesFromData = {\n    assembly?: string;\n};\n\nexport type GetUmbracoManagementApiV1GodModeGetInterfacesFromResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetLanguagesResponse = Array<(Lang)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetMediaData = {\n    id?: number;\n    mediaTypeId?: number;\n    name?: string;\n    orderBy?: string;\n    orderByDir?: string;\n    page?: number;\n    pageSize?: number;\n};\n\nexport type GetUmbracoManagementApiV1GodModeGetMediaResponse = MediaMap;\n\nexport type GetUmbracoManagementApiV1GodModeGetMediaTypesResponse = Array<(ItemBase)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetMemberGroupsResponse = Array<(MemberGroupModel)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetMembersPagedData = {\n    groupId?: number;\n    orderBy?: string;\n    page?: number;\n    pageSize?: number;\n    search?: string;\n};\n\nexport type GetUmbracoManagementApiV1GodModeGetMembersPagedResponse = MemberModel;\n\nexport type GetUmbracoManagementApiV1GodModeGetNonMsAssembliesResponse = Array<(NameValue)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetNuCacheItemData = {\n    id?: number;\n};\n\nexport type GetUmbracoManagementApiV1GodModeGetNuCacheItemResponse = NuCacheItem;\n\nexport type GetUmbracoManagementApiV1GodModeGetNuCacheTypeResponse = string;\n\nexport type GetUmbracoManagementApiV1GodModeGetOrphanedTagsResponse = Array<(Tag)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetPropertyEditorsResponse = Array<(DataTypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetPropertyGroupsResponse = Array<(string)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetPropertyValueConvertersResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetPublishedContentModelsResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetRegisteredServicesResponse = Array<(RegisteredService)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetRenderMvcControllersResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetStandardContentTypeAliasesResponse = Array<(string)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetSurfaceControllersResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetTagHelpersResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetTagMappingResponse = Array<(TagMapping)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetTemplatesResponse = Array<(TemplateModel)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetTemplateUrlsToPingResponse = Array<(string)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetTypesAssignableFromData = {\n    baseType?: string;\n};\n\nexport type GetUmbracoManagementApiV1GodModeGetTypesAssignableFromResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetTypesFromData = {\n    assembly?: string;\n};\n\nexport type GetUmbracoManagementApiV1GodModeGetTypesFromResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetUmbracoAssembliesResponse = Array<(NameValue)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetUrlProvidersResponse = Array<(TypeMap)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetUrlsToPingData = {\n    culture?: string;\n};\n\nexport type GetUmbracoManagementApiV1GodModeGetUrlsToPingResponse = Array<(string)>;\n\nexport type GetUmbracoManagementApiV1GodModeGetViewComponentsResponse = Array<(TypeMap)>;\n\nexport type PostUmbracoManagementApiV1GodModePurgeMediaCacheResponse = ServerResponse;\n\nexport type PostUmbracoManagementApiV1GodModeRestartAppPoolResponse = ServerResponse;\n\nexport type GetHealthCheckGroupData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetHealthCheckGroupResponse = PagedHealthCheckGroupResponseModel;\n\nexport type GetHealthCheckGroupByNameData = {\n    name: string;\n};\n\nexport type GetHealthCheckGroupByNameResponse = HealthCheckGroupPresentationModel;\n\nexport type PostHealthCheckGroupByNameCheckData = {\n    name: string;\n};\n\nexport type PostHealthCheckGroupByNameCheckResponse = HealthCheckGroupWithResultResponseModel;\n\nexport type PostHealthCheckExecuteActionData = {\n    requestBody?: HealthCheckActionRequestModel;\n};\n\nexport type PostHealthCheckExecuteActionResponse = HealthCheckResultResponseModel;\n\nexport type GetHelpData = {\n    baseUrl?: string;\n    section?: string;\n    skip?: number;\n    take?: number;\n    tree?: string;\n};\n\nexport type GetHelpResponse = PagedHelpPageResponseModel;\n\nexport type GetImagingResizeUrlsData = {\n    height?: number;\n    id?: Array<(string)>;\n    mode?: ImageCropModeModel;\n    width?: number;\n};\n\nexport type GetImagingResizeUrlsResponse = Array<(MediaUrlInfoResponseModel)>;\n\nexport type GetImportAnalyzeData = {\n    temporaryFileId?: string;\n};\n\nexport type GetImportAnalyzeResponse = EntityImportAnalysisResponseModel;\n\nexport type GetIndexerData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetIndexerResponse = PagedIndexResponseModel;\n\nexport type GetIndexerByIndexNameData = {\n    indexName: string;\n};\n\nexport type GetIndexerByIndexNameResponse = IndexResponseModel;\n\nexport type PostIndexerByIndexNameRebuildData = {\n    indexName: string;\n};\n\nexport type PostIndexerByIndexNameRebuildResponse = string;\n\nexport type GetInstallSettingsResponse = InstallSettingsResponseModel;\n\nexport type PostInstallSetupData = {\n    requestBody?: InstallRequestModel;\n};\n\nexport type PostInstallSetupResponse = string;\n\nexport type PostInstallValidateDatabaseData = {\n    requestBody?: DatabaseInstallRequestModel;\n};\n\nexport type PostInstallValidateDatabaseResponse = string;\n\nexport type GetItemLanguageData = {\n    isoCode?: Array<(string)>;\n};\n\nexport type GetItemLanguageResponse = Array<(LanguageItemResponseModel)>;\n\nexport type GetItemLanguageDefaultResponse = LanguageItemResponseModel;\n\nexport type GetLanguageData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetLanguageResponse = PagedLanguageResponseModel;\n\nexport type PostLanguageData = {\n    requestBody?: CreateLanguageRequestModel;\n};\n\nexport type PostLanguageResponse = string;\n\nexport type GetLanguageByIsoCodeData = {\n    isoCode: string;\n};\n\nexport type GetLanguageByIsoCodeResponse = LanguageResponseModel;\n\nexport type DeleteLanguageByIsoCodeData = {\n    isoCode: string;\n};\n\nexport type DeleteLanguageByIsoCodeResponse = string;\n\nexport type PutLanguageByIsoCodeData = {\n    isoCode: string;\n    requestBody?: UpdateLanguageRequestModel;\n};\n\nexport type PutLanguageByIsoCodeResponse = string;\n\nexport type GetLogViewerLevelData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetLogViewerLevelResponse = PagedLoggerResponseModel;\n\nexport type GetLogViewerLevelCountData = {\n    endDate?: string;\n    startDate?: string;\n};\n\nexport type GetLogViewerLevelCountResponse = LogLevelCountsReponseModel;\n\nexport type GetLogViewerLogData = {\n    endDate?: string;\n    filterExpression?: string;\n    logLevel?: Array<LogLevelModel>;\n    orderDirection?: DirectionModel;\n    skip?: number;\n    startDate?: string;\n    take?: number;\n};\n\nexport type GetLogViewerLogResponse = PagedLogMessageResponseModel;\n\nexport type GetLogViewerMessageTemplateData = {\n    endDate?: string;\n    skip?: number;\n    startDate?: string;\n    take?: number;\n};\n\nexport type GetLogViewerMessageTemplateResponse = PagedLogTemplateResponseModel;\n\nexport type GetLogViewerSavedSearchData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetLogViewerSavedSearchResponse = PagedSavedLogSearchResponseModel;\n\nexport type PostLogViewerSavedSearchData = {\n    requestBody?: SavedLogSearchRequestModel;\n};\n\nexport type PostLogViewerSavedSearchResponse = string;\n\nexport type GetLogViewerSavedSearchByNameData = {\n    name: string;\n};\n\nexport type GetLogViewerSavedSearchByNameResponse = SavedLogSearchResponseModel;\n\nexport type DeleteLogViewerSavedSearchByNameData = {\n    name: string;\n};\n\nexport type DeleteLogViewerSavedSearchByNameResponse = string;\n\nexport type GetLogViewerValidateLogsSizeData = {\n    endDate?: string;\n    startDate?: string;\n};\n\nexport type GetLogViewerValidateLogsSizeResponse = unknown;\n\nexport type GetManifestManifestResponse = Array<(ManifestResponseModel)>;\n\nexport type GetManifestManifestPrivateResponse = Array<(ManifestResponseModel)>;\n\nexport type GetManifestManifestPublicResponse = Array<(ManifestResponseModel)>;\n\nexport type GetItemMediaTypeData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemMediaTypeResponse = Array<(MediaTypeItemResponseModel)>;\n\nexport type GetItemMediaTypeAllowedData = {\n    fileExtension?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemMediaTypeAllowedResponse = PagedModelMediaTypeItemResponseModel;\n\nexport type GetItemMediaTypeFoldersData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemMediaTypeFoldersResponse = PagedModelMediaTypeItemResponseModel;\n\nexport type GetItemMediaTypeSearchData = {\n    query?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemMediaTypeSearchResponse = PagedModelMediaTypeItemResponseModel;\n\nexport type PostMediaTypeData = {\n    requestBody?: CreateMediaTypeRequestModel;\n};\n\nexport type PostMediaTypeResponse = string;\n\nexport type GetMediaTypeByIdData = {\n    id: string;\n};\n\nexport type GetMediaTypeByIdResponse = MediaTypeResponseModel;\n\nexport type DeleteMediaTypeByIdData = {\n    id: string;\n};\n\nexport type DeleteMediaTypeByIdResponse = string;\n\nexport type PutMediaTypeByIdData = {\n    id: string;\n    requestBody?: UpdateMediaTypeRequestModel;\n};\n\nexport type PutMediaTypeByIdResponse = string;\n\nexport type GetMediaTypeByIdAllowedChildrenData = {\n    id: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetMediaTypeByIdAllowedChildrenResponse = PagedAllowedMediaTypeModel;\n\nexport type GetMediaTypeByIdCompositionReferencesData = {\n    id: string;\n};\n\nexport type GetMediaTypeByIdCompositionReferencesResponse = Array<(MediaTypeCompositionResponseModel)>;\n\nexport type PostMediaTypeByIdCopyData = {\n    id: string;\n    requestBody?: CopyMediaTypeRequestModel;\n};\n\nexport type PostMediaTypeByIdCopyResponse = string;\n\nexport type GetMediaTypeByIdExportData = {\n    id: string;\n};\n\nexport type GetMediaTypeByIdExportResponse = (Blob | File);\n\nexport type PutMediaTypeByIdImportData = {\n    id: string;\n    requestBody?: ImportMediaTypeRequestModel;\n};\n\nexport type PutMediaTypeByIdImportResponse = string;\n\nexport type PutMediaTypeByIdMoveData = {\n    id: string;\n    requestBody?: MoveMediaTypeRequestModel;\n};\n\nexport type PutMediaTypeByIdMoveResponse = string;\n\nexport type GetMediaTypeAllowedAtRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetMediaTypeAllowedAtRootResponse = PagedAllowedMediaTypeModel;\n\nexport type PostMediaTypeAvailableCompositionsData = {\n    requestBody?: MediaTypeCompositionRequestModel;\n};\n\nexport type PostMediaTypeAvailableCompositionsResponse = Array<(AvailableMediaTypeCompositionResponseModel)>;\n\nexport type PostMediaTypeFolderData = {\n    requestBody?: CreateFolderRequestModel;\n};\n\nexport type PostMediaTypeFolderResponse = string;\n\nexport type GetMediaTypeFolderByIdData = {\n    id: string;\n};\n\nexport type GetMediaTypeFolderByIdResponse = FolderResponseModel;\n\nexport type DeleteMediaTypeFolderByIdData = {\n    id: string;\n};\n\nexport type DeleteMediaTypeFolderByIdResponse = string;\n\nexport type PutMediaTypeFolderByIdData = {\n    id: string;\n    requestBody?: UpdateFolderResponseModel;\n};\n\nexport type PutMediaTypeFolderByIdResponse = string;\n\nexport type PostMediaTypeImportData = {\n    requestBody?: ImportMediaTypeRequestModel;\n};\n\nexport type PostMediaTypeImportResponse = string;\n\nexport type GetTreeMediaTypeAncestorsData = {\n    descendantId?: string;\n};\n\nexport type GetTreeMediaTypeAncestorsResponse = Array<(MediaTypeTreeItemResponseModel)>;\n\nexport type GetTreeMediaTypeChildrenData = {\n    foldersOnly?: boolean;\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeMediaTypeChildrenResponse = PagedMediaTypeTreeItemResponseModel;\n\nexport type GetTreeMediaTypeRootData = {\n    foldersOnly?: boolean;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeMediaTypeRootResponse = PagedMediaTypeTreeItemResponseModel;\n\nexport type GetCollectionMediaData = {\n    dataTypeId?: string;\n    filter?: string;\n    id?: string;\n    orderBy?: string;\n    orderDirection?: DirectionModel;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetCollectionMediaResponse = PagedMediaCollectionResponseModel;\n\nexport type GetItemMediaData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemMediaResponse = Array<(MediaItemResponseModel)>;\n\nexport type GetItemMediaSearchData = {\n    query?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemMediaSearchResponse = PagedModelMediaItemResponseModel;\n\nexport type PostMediaData = {\n    requestBody?: CreateMediaRequestModel;\n};\n\nexport type PostMediaResponse = string;\n\nexport type GetMediaByIdData = {\n    id: string;\n};\n\nexport type GetMediaByIdResponse = MediaResponseModel;\n\nexport type DeleteMediaByIdData = {\n    id: string;\n};\n\nexport type DeleteMediaByIdResponse = string;\n\nexport type PutMediaByIdData = {\n    id: string;\n    requestBody?: UpdateMediaRequestModel;\n};\n\nexport type PutMediaByIdResponse = string;\n\nexport type GetMediaByIdAuditLogData = {\n    id: string;\n    orderDirection?: DirectionModel;\n    sinceDate?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetMediaByIdAuditLogResponse = PagedAuditLogResponseModel;\n\nexport type PutMediaByIdMoveData = {\n    id: string;\n    requestBody?: MoveMediaRequestModel;\n};\n\nexport type PutMediaByIdMoveResponse = string;\n\nexport type PutMediaByIdMoveToRecycleBinData = {\n    id: string;\n};\n\nexport type PutMediaByIdMoveToRecycleBinResponse = string;\n\nexport type GetMediaByIdReferencedByData = {\n    id: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetMediaByIdReferencedByResponse = PagedIReferenceResponseModel;\n\nexport type GetMediaByIdReferencedDescendantsData = {\n    id: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetMediaByIdReferencedDescendantsResponse = PagedReferenceByIdModel;\n\nexport type PutMediaByIdValidateData = {\n    id: string;\n    requestBody?: UpdateMediaRequestModel;\n};\n\nexport type PutMediaByIdValidateResponse = string;\n\nexport type GetMediaAreReferencedData = {\n    id?: Array<(string)>;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetMediaAreReferencedResponse = PagedReferenceByIdModel;\n\nexport type GetMediaConfigurationResponse = MediaConfigurationResponseModel;\n\nexport type PutMediaSortData = {\n    requestBody?: SortingRequestModel;\n};\n\nexport type PutMediaSortResponse = string;\n\nexport type GetMediaUrlsData = {\n    id?: Array<(string)>;\n};\n\nexport type GetMediaUrlsResponse = Array<(MediaUrlInfoResponseModel)>;\n\nexport type PostMediaValidateData = {\n    requestBody?: CreateMediaRequestModel;\n};\n\nexport type PostMediaValidateResponse = string;\n\nexport type DeleteRecycleBinMediaResponse = string;\n\nexport type DeleteRecycleBinMediaByIdData = {\n    id: string;\n};\n\nexport type DeleteRecycleBinMediaByIdResponse = string;\n\nexport type GetRecycleBinMediaByIdOriginalParentData = {\n    id: string;\n};\n\nexport type GetRecycleBinMediaByIdOriginalParentResponse = ReferenceByIdModel;\n\nexport type PutRecycleBinMediaByIdRestoreData = {\n    id: string;\n    requestBody?: MoveMediaRequestModel;\n};\n\nexport type PutRecycleBinMediaByIdRestoreResponse = string;\n\nexport type GetRecycleBinMediaChildrenData = {\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetRecycleBinMediaChildrenResponse = PagedMediaRecycleBinItemResponseModel;\n\nexport type GetRecycleBinMediaRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetRecycleBinMediaRootResponse = PagedMediaRecycleBinItemResponseModel;\n\nexport type GetTreeMediaAncestorsData = {\n    descendantId?: string;\n};\n\nexport type GetTreeMediaAncestorsResponse = Array<(MediaTreeItemResponseModel)>;\n\nexport type GetTreeMediaChildrenData = {\n    dataTypeId?: string;\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeMediaChildrenResponse = PagedMediaTreeItemResponseModel;\n\nexport type GetTreeMediaRootData = {\n    dataTypeId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeMediaRootResponse = PagedMediaTreeItemResponseModel;\n\nexport type GetItemMemberGroupData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemMemberGroupResponse = Array<(MemberGroupItemResponseModel)>;\n\nexport type GetMemberGroupData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetMemberGroupResponse = PagedMemberGroupResponseModel;\n\nexport type PostMemberGroupData = {\n    requestBody?: CreateMemberGroupRequestModel;\n};\n\nexport type PostMemberGroupResponse = string;\n\nexport type GetMemberGroupByIdData = {\n    id: string;\n};\n\nexport type GetMemberGroupByIdResponse = MemberGroupResponseModel;\n\nexport type DeleteMemberGroupByIdData = {\n    id: string;\n};\n\nexport type DeleteMemberGroupByIdResponse = string;\n\nexport type PutMemberGroupByIdData = {\n    id: string;\n    requestBody?: UpdateMemberGroupRequestModel;\n};\n\nexport type PutMemberGroupByIdResponse = string;\n\nexport type GetTreeMemberGroupRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeMemberGroupRootResponse = PagedNamedEntityTreeItemResponseModel;\n\nexport type GetItemMemberTypeData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemMemberTypeResponse = Array<(MemberTypeItemResponseModel)>;\n\nexport type GetItemMemberTypeSearchData = {\n    query?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemMemberTypeSearchResponse = PagedModelMemberTypeItemResponseModel;\n\nexport type PostMemberTypeData = {\n    requestBody?: CreateMemberTypeRequestModel;\n};\n\nexport type PostMemberTypeResponse = string;\n\nexport type GetMemberTypeByIdData = {\n    id: string;\n};\n\nexport type GetMemberTypeByIdResponse = MemberTypeResponseModel;\n\nexport type DeleteMemberTypeByIdData = {\n    id: string;\n};\n\nexport type DeleteMemberTypeByIdResponse = string;\n\nexport type PutMemberTypeByIdData = {\n    id: string;\n    requestBody?: UpdateMemberTypeRequestModel;\n};\n\nexport type PutMemberTypeByIdResponse = string;\n\nexport type GetMemberTypeByIdCompositionReferencesData = {\n    id: string;\n};\n\nexport type GetMemberTypeByIdCompositionReferencesResponse = Array<(MemberTypeCompositionResponseModel)>;\n\nexport type PostMemberTypeByIdCopyData = {\n    id: string;\n};\n\nexport type PostMemberTypeByIdCopyResponse = string;\n\nexport type PostMemberTypeAvailableCompositionsData = {\n    requestBody?: MemberTypeCompositionRequestModel;\n};\n\nexport type PostMemberTypeAvailableCompositionsResponse = Array<(AvailableMemberTypeCompositionResponseModel)>;\n\nexport type GetTreeMemberTypeRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeMemberTypeRootResponse = PagedMemberTypeTreeItemResponseModel;\n\nexport type GetFilterMemberData = {\n    filter?: string;\n    isApproved?: boolean;\n    isLockedOut?: boolean;\n    memberGroupName?: string;\n    memberTypeId?: string;\n    orderBy?: string;\n    orderDirection?: DirectionModel;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetFilterMemberResponse = PagedMemberResponseModel;\n\nexport type GetItemMemberData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemMemberResponse = Array<(MemberItemResponseModel)>;\n\nexport type GetItemMemberSearchData = {\n    query?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemMemberSearchResponse = PagedModelMemberItemResponseModel;\n\nexport type PostMemberData = {\n    requestBody?: CreateMemberRequestModel;\n};\n\nexport type PostMemberResponse = string;\n\nexport type GetMemberByIdData = {\n    id: string;\n};\n\nexport type GetMemberByIdResponse = MemberResponseModel;\n\nexport type DeleteMemberByIdData = {\n    id: string;\n};\n\nexport type DeleteMemberByIdResponse = string;\n\nexport type PutMemberByIdData = {\n    id: string;\n    requestBody?: UpdateMemberRequestModel;\n};\n\nexport type PutMemberByIdResponse = string;\n\nexport type PutMemberByIdValidateData = {\n    id: string;\n    requestBody?: UpdateMemberRequestModel;\n};\n\nexport type PutMemberByIdValidateResponse = string;\n\nexport type GetMemberConfigurationResponse = MemberConfigurationResponseModel;\n\nexport type PostMemberValidateData = {\n    requestBody?: CreateMemberRequestModel;\n};\n\nexport type PostMemberValidateResponse = string;\n\nexport type PostModelsBuilderBuildResponse = string;\n\nexport type GetModelsBuilderDashboardResponse = ModelsBuilderResponseModel;\n\nexport type GetModelsBuilderStatusResponse = OutOfDateStatusResponseModel;\n\nexport type GetObjectTypesData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetObjectTypesResponse = PagedObjectTypeResponseModel;\n\nexport type GetOembedQueryData = {\n    maxHeight?: number;\n    maxWidth?: number;\n    url?: string;\n};\n\nexport type GetOembedQueryResponse = OEmbedResponseModel;\n\nexport type PostPackageByNameRunMigrationData = {\n    name: string;\n};\n\nexport type PostPackageByNameRunMigrationResponse = string;\n\nexport type GetPackageConfigurationResponse = PackageConfigurationResponseModel;\n\nexport type GetPackageCreatedData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetPackageCreatedResponse = PagedPackageDefinitionResponseModel;\n\nexport type PostPackageCreatedData = {\n    requestBody?: CreatePackageRequestModel;\n};\n\nexport type PostPackageCreatedResponse = string;\n\nexport type GetPackageCreatedByIdData = {\n    id: string;\n};\n\nexport type GetPackageCreatedByIdResponse = PackageDefinitionResponseModel;\n\nexport type DeletePackageCreatedByIdData = {\n    id: string;\n};\n\nexport type DeletePackageCreatedByIdResponse = string;\n\nexport type PutPackageCreatedByIdData = {\n    id: string;\n    requestBody?: UpdatePackageRequestModel;\n};\n\nexport type PutPackageCreatedByIdResponse = string;\n\nexport type GetPackageCreatedByIdDownloadData = {\n    id: string;\n};\n\nexport type GetPackageCreatedByIdDownloadResponse = (Blob | File);\n\nexport type GetPackageMigrationStatusData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetPackageMigrationStatusResponse = PagedPackageMigrationStatusResponseModel;\n\nexport type GetItemPartialViewData = {\n    path?: Array<(string)>;\n};\n\nexport type GetItemPartialViewResponse = Array<(PartialViewItemResponseModel)>;\n\nexport type PostPartialViewData = {\n    requestBody?: CreatePartialViewRequestModel;\n};\n\nexport type PostPartialViewResponse = string;\n\nexport type GetPartialViewByPathData = {\n    path: string;\n};\n\nexport type GetPartialViewByPathResponse = PartialViewResponseModel;\n\nexport type DeletePartialViewByPathData = {\n    path: string;\n};\n\nexport type DeletePartialViewByPathResponse = string;\n\nexport type PutPartialViewByPathData = {\n    path: string;\n    requestBody?: UpdatePartialViewRequestModel;\n};\n\nexport type PutPartialViewByPathResponse = string;\n\nexport type PutPartialViewByPathRenameData = {\n    path: string;\n    requestBody?: RenamePartialViewRequestModel;\n};\n\nexport type PutPartialViewByPathRenameResponse = string;\n\nexport type PostPartialViewFolderData = {\n    requestBody?: CreatePartialViewFolderRequestModel;\n};\n\nexport type PostPartialViewFolderResponse = string;\n\nexport type GetPartialViewFolderByPathData = {\n    path: string;\n};\n\nexport type GetPartialViewFolderByPathResponse = PartialViewFolderResponseModel;\n\nexport type DeletePartialViewFolderByPathData = {\n    path: string;\n};\n\nexport type DeletePartialViewFolderByPathResponse = string;\n\nexport type GetPartialViewSnippetData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetPartialViewSnippetResponse = PagedPartialViewSnippetItemResponseModel;\n\nexport type GetPartialViewSnippetByIdData = {\n    id: string;\n};\n\nexport type GetPartialViewSnippetByIdResponse = PartialViewSnippetResponseModel;\n\nexport type GetTreePartialViewAncestorsData = {\n    descendantPath?: string;\n};\n\nexport type GetTreePartialViewAncestorsResponse = Array<(FileSystemTreeItemPresentationModel)>;\n\nexport type GetTreePartialViewChildrenData = {\n    parentPath?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreePartialViewChildrenResponse = PagedFileSystemTreeItemPresentationModel;\n\nexport type GetTreePartialViewRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreePartialViewRootResponse = PagedFileSystemTreeItemPresentationModel;\n\nexport type DeletePreviewResponse = string;\n\nexport type PostPreviewResponse = string;\n\nexport type GetProfilingStatusResponse = ProfilingStatusResponseModel;\n\nexport type PutProfilingStatusData = {\n    requestBody?: ProfilingStatusRequestModel;\n};\n\nexport type PutProfilingStatusResponse = string;\n\nexport type GetPropertyTypeIsUsedData = {\n    contentTypeId?: string;\n    propertyAlias?: string;\n};\n\nexport type GetPropertyTypeIsUsedResponse = boolean;\n\nexport type PostPublishedCacheCollectResponse = string;\n\nexport type PostPublishedCacheRebuildResponse = string;\n\nexport type PostPublishedCacheReloadResponse = string;\n\nexport type GetPublishedCacheStatusResponse = string;\n\nexport type GetRedirectManagementData = {\n    filter?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetRedirectManagementResponse = PagedRedirectUrlResponseModel;\n\nexport type GetRedirectManagementByIdData = {\n    id: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetRedirectManagementByIdResponse = PagedRedirectUrlResponseModel;\n\nexport type DeleteRedirectManagementByIdData = {\n    id: string;\n};\n\nexport type DeleteRedirectManagementByIdResponse = string;\n\nexport type GetRedirectManagementStatusResponse = RedirectUrlStatusResponseModel;\n\nexport type PostRedirectManagementStatusData = {\n    status?: RedirectStatusModel;\n};\n\nexport type PostRedirectManagementStatusResponse = string;\n\nexport type GetItemRelationTypeData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemRelationTypeResponse = Array<(RelationTypeItemResponseModel)>;\n\nexport type GetRelationTypeData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetRelationTypeResponse = PagedRelationTypeResponseModel;\n\nexport type GetRelationTypeByIdData = {\n    id: string;\n};\n\nexport type GetRelationTypeByIdResponse = RelationTypeResponseModel;\n\nexport type GetItemScriptData = {\n    path?: Array<(string)>;\n};\n\nexport type GetItemScriptResponse = Array<(ScriptItemResponseModel)>;\n\nexport type PostScriptData = {\n    requestBody?: CreateScriptRequestModel;\n};\n\nexport type PostScriptResponse = string;\n\nexport type GetScriptByPathData = {\n    path: string;\n};\n\nexport type GetScriptByPathResponse = ScriptResponseModel;\n\nexport type DeleteScriptByPathData = {\n    path: string;\n};\n\nexport type DeleteScriptByPathResponse = string;\n\nexport type PutScriptByPathData = {\n    path: string;\n    requestBody?: UpdateScriptRequestModel;\n};\n\nexport type PutScriptByPathResponse = string;\n\nexport type PutScriptByPathRenameData = {\n    path: string;\n    requestBody?: RenameScriptRequestModel;\n};\n\nexport type PutScriptByPathRenameResponse = string;\n\nexport type PostScriptFolderData = {\n    requestBody?: CreateScriptFolderRequestModel;\n};\n\nexport type PostScriptFolderResponse = string;\n\nexport type GetScriptFolderByPathData = {\n    path: string;\n};\n\nexport type GetScriptFolderByPathResponse = ScriptFolderResponseModel;\n\nexport type DeleteScriptFolderByPathData = {\n    path: string;\n};\n\nexport type DeleteScriptFolderByPathResponse = string;\n\nexport type GetTreeScriptAncestorsData = {\n    descendantPath?: string;\n};\n\nexport type GetTreeScriptAncestorsResponse = Array<(FileSystemTreeItemPresentationModel)>;\n\nexport type GetTreeScriptChildrenData = {\n    parentPath?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeScriptChildrenResponse = PagedFileSystemTreeItemPresentationModel;\n\nexport type GetTreeScriptRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeScriptRootResponse = PagedFileSystemTreeItemPresentationModel;\n\nexport type GetSearcherData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetSearcherResponse = PagedSearcherResponseModel;\n\nexport type GetSearcherBySearcherNameQueryData = {\n    searcherName: string;\n    skip?: number;\n    take?: number;\n    term?: string;\n};\n\nexport type GetSearcherBySearcherNameQueryResponse = PagedSearchResultResponseModel;\n\nexport type GetSecurityConfigurationResponse = SecurityConfigurationResponseModel;\n\nexport type PostSecurityForgotPasswordData = {\n    requestBody?: ResetPasswordRequestModel;\n};\n\nexport type PostSecurityForgotPasswordResponse = string;\n\nexport type PostSecurityForgotPasswordResetData = {\n    requestBody?: ResetPasswordTokenRequestModel;\n};\n\nexport type PostSecurityForgotPasswordResetResponse = string;\n\nexport type PostSecurityForgotPasswordVerifyData = {\n    requestBody?: VerifyResetPasswordTokenRequestModel;\n};\n\nexport type PostSecurityForgotPasswordVerifyResponse = VerifyResetPasswordResponseModel;\n\nexport type GetSegmentData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetSegmentResponse = PagedSegmentResponseModel;\n\nexport type GetServerConfigurationResponse = ServerConfigurationResponseModel;\n\nexport type GetServerInformationResponse = ServerInformationResponseModel;\n\nexport type GetServerStatusResponse = ServerStatusResponseModel;\n\nexport type GetServerTroubleshootingResponse = ServerTroubleshootingResponseModel;\n\nexport type GetItemStaticFileData = {\n    path?: Array<(string)>;\n};\n\nexport type GetItemStaticFileResponse = Array<(StaticFileItemResponseModel)>;\n\nexport type GetTreeStaticFileAncestorsData = {\n    descendantPath?: string;\n};\n\nexport type GetTreeStaticFileAncestorsResponse = Array<(FileSystemTreeItemPresentationModel)>;\n\nexport type GetTreeStaticFileChildrenData = {\n    parentPath?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeStaticFileChildrenResponse = PagedFileSystemTreeItemPresentationModel;\n\nexport type GetTreeStaticFileRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeStaticFileRootResponse = PagedFileSystemTreeItemPresentationModel;\n\nexport type GetItemStylesheetData = {\n    path?: Array<(string)>;\n};\n\nexport type GetItemStylesheetResponse = Array<(StylesheetItemResponseModel)>;\n\nexport type PostStylesheetData = {\n    requestBody?: CreateStylesheetRequestModel;\n};\n\nexport type PostStylesheetResponse = string;\n\nexport type GetStylesheetByPathData = {\n    path: string;\n};\n\nexport type GetStylesheetByPathResponse = StylesheetResponseModel;\n\nexport type DeleteStylesheetByPathData = {\n    path: string;\n};\n\nexport type DeleteStylesheetByPathResponse = string;\n\nexport type PutStylesheetByPathData = {\n    path: string;\n    requestBody?: UpdateStylesheetRequestModel;\n};\n\nexport type PutStylesheetByPathResponse = string;\n\nexport type PutStylesheetByPathRenameData = {\n    path: string;\n    requestBody?: RenameStylesheetRequestModel;\n};\n\nexport type PutStylesheetByPathRenameResponse = string;\n\nexport type PostStylesheetFolderData = {\n    requestBody?: CreateStylesheetFolderRequestModel;\n};\n\nexport type PostStylesheetFolderResponse = string;\n\nexport type GetStylesheetFolderByPathData = {\n    path: string;\n};\n\nexport type GetStylesheetFolderByPathResponse = StylesheetFolderResponseModel;\n\nexport type DeleteStylesheetFolderByPathData = {\n    path: string;\n};\n\nexport type DeleteStylesheetFolderByPathResponse = string;\n\nexport type GetTreeStylesheetAncestorsData = {\n    descendantPath?: string;\n};\n\nexport type GetTreeStylesheetAncestorsResponse = Array<(FileSystemTreeItemPresentationModel)>;\n\nexport type GetTreeStylesheetChildrenData = {\n    parentPath?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeStylesheetChildrenResponse = PagedFileSystemTreeItemPresentationModel;\n\nexport type GetTreeStylesheetRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeStylesheetRootResponse = PagedFileSystemTreeItemPresentationModel;\n\nexport type GetTagData = {\n    culture?: string;\n    query?: string;\n    skip?: number;\n    tagGroup?: string;\n    take?: number;\n};\n\nexport type GetTagResponse = PagedTagResponseModel;\n\nexport type GetTelemetryData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTelemetryResponse = PagedTelemetryResponseModel;\n\nexport type GetTelemetryLevelResponse = TelemetryResponseModel;\n\nexport type PostTelemetryLevelData = {\n    requestBody?: TelemetryRequestModel;\n};\n\nexport type PostTelemetryLevelResponse = string;\n\nexport type GetItemTemplateData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemTemplateResponse = Array<(TemplateItemResponseModel)>;\n\nexport type GetItemTemplateSearchData = {\n    query?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetItemTemplateSearchResponse = PagedModelTemplateItemResponseModel;\n\nexport type PostTemplateData = {\n    requestBody?: CreateTemplateRequestModel;\n};\n\nexport type PostTemplateResponse = string;\n\nexport type GetTemplateByIdData = {\n    id: string;\n};\n\nexport type GetTemplateByIdResponse = TemplateResponseModel;\n\nexport type DeleteTemplateByIdData = {\n    id: string;\n};\n\nexport type DeleteTemplateByIdResponse = string;\n\nexport type PutTemplateByIdData = {\n    id: string;\n    requestBody?: UpdateTemplateRequestModel;\n};\n\nexport type PutTemplateByIdResponse = string;\n\nexport type GetTemplateConfigurationResponse = TemplateConfigurationResponseModel;\n\nexport type PostTemplateQueryExecuteData = {\n    requestBody?: TemplateQueryExecuteModel;\n};\n\nexport type PostTemplateQueryExecuteResponse = TemplateQueryResultResponseModel;\n\nexport type GetTemplateQuerySettingsResponse = TemplateQuerySettingsResponseModel;\n\nexport type GetTreeTemplateAncestorsData = {\n    descendantId?: string;\n};\n\nexport type GetTreeTemplateAncestorsResponse = Array<(NamedEntityTreeItemResponseModel)>;\n\nexport type GetTreeTemplateChildrenData = {\n    parentId?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeTemplateChildrenResponse = PagedNamedEntityTreeItemResponseModel;\n\nexport type GetTreeTemplateRootData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetTreeTemplateRootResponse = PagedNamedEntityTreeItemResponseModel;\n\nexport type PostTemporaryFileData = {\n    formData?: {\n        Id: string;\n        File: (Blob | File);\n    };\n};\n\nexport type PostTemporaryFileResponse = string;\n\nexport type GetTemporaryFileByIdData = {\n    id: string;\n};\n\nexport type GetTemporaryFileByIdResponse = TemporaryFileResponseModel;\n\nexport type DeleteTemporaryFileByIdData = {\n    id: string;\n};\n\nexport type DeleteTemporaryFileByIdResponse = string;\n\nexport type GetTemporaryFileConfigurationResponse = TemporaryFileConfigurationResponseModel;\n\nexport type PostUpgradeAuthorizeResponse = string;\n\nexport type GetUpgradeSettingsResponse = UpgradeSettingsResponseModel;\n\nexport type PostUserDataData = {\n    requestBody?: CreateUserDataRequestModel;\n};\n\nexport type PostUserDataResponse = string;\n\nexport type GetUserDataData = {\n    groups?: Array<(string)>;\n    identifiers?: Array<(string)>;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetUserDataResponse = PagedUserDataResponseModel;\n\nexport type PutUserDataData = {\n    requestBody?: UpdateUserDataRequestModel;\n};\n\nexport type PutUserDataResponse = string;\n\nexport type GetUserDataByIdData = {\n    id: string;\n};\n\nexport type GetUserDataByIdResponse = UserDataModel;\n\nexport type GetFilterUserGroupData = {\n    filter?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetFilterUserGroupResponse = PagedUserGroupResponseModel;\n\nexport type GetItemUserGroupData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemUserGroupResponse = Array<(UserGroupItemResponseModel)>;\n\nexport type DeleteUserGroupData = {\n    requestBody?: DeleteUserGroupsRequestModel;\n};\n\nexport type DeleteUserGroupResponse = string;\n\nexport type PostUserGroupData = {\n    requestBody?: CreateUserGroupRequestModel;\n};\n\nexport type PostUserGroupResponse = string;\n\nexport type GetUserGroupData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetUserGroupResponse = PagedUserGroupResponseModel;\n\nexport type GetUserGroupByIdData = {\n    id: string;\n};\n\nexport type GetUserGroupByIdResponse = UserGroupResponseModel;\n\nexport type DeleteUserGroupByIdData = {\n    id: string;\n};\n\nexport type DeleteUserGroupByIdResponse = string;\n\nexport type PutUserGroupByIdData = {\n    id: string;\n    requestBody?: UpdateUserGroupRequestModel;\n};\n\nexport type PutUserGroupByIdResponse = string;\n\nexport type DeleteUserGroupByIdUsersData = {\n    id: string;\n    requestBody?: Array<(ReferenceByIdModel)>;\n};\n\nexport type DeleteUserGroupByIdUsersResponse = string;\n\nexport type PostUserGroupByIdUsersData = {\n    id: string;\n    requestBody?: Array<(ReferenceByIdModel)>;\n};\n\nexport type PostUserGroupByIdUsersResponse = string;\n\nexport type GetFilterUserData = {\n    filter?: string;\n    orderBy?: UserOrderModel;\n    orderDirection?: DirectionModel;\n    skip?: number;\n    take?: number;\n    userGroupIds?: Array<(string)>;\n    userStates?: Array<UserStateModel>;\n};\n\nexport type GetFilterUserResponse = PagedUserResponseModel;\n\nexport type GetItemUserData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemUserResponse = Array<(UserItemResponseModel)>;\n\nexport type PostUserData = {\n    requestBody?: CreateUserRequestModel;\n};\n\nexport type PostUserResponse = string;\n\nexport type DeleteUserData = {\n    requestBody?: DeleteUsersRequestModel;\n};\n\nexport type DeleteUserResponse = string;\n\nexport type GetUserData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetUserResponse = PagedUserResponseModel;\n\nexport type GetUserByIdData = {\n    id: string;\n};\n\nexport type GetUserByIdResponse = UserResponseModel;\n\nexport type DeleteUserByIdData = {\n    id: string;\n};\n\nexport type DeleteUserByIdResponse = string;\n\nexport type PutUserByIdData = {\n    id: string;\n    requestBody?: UpdateUserRequestModel;\n};\n\nexport type PutUserByIdResponse = string;\n\nexport type GetUserById2FaData = {\n    id: string;\n};\n\nexport type GetUserById2FaResponse = Array<(UserTwoFactorProviderModel)>;\n\nexport type DeleteUserById2FaByProviderNameData = {\n    id: string;\n    providerName: string;\n};\n\nexport type DeleteUserById2FaByProviderNameResponse = string;\n\nexport type PostUserByIdChangePasswordData = {\n    id: string;\n    requestBody?: ChangePasswordUserRequestModel;\n};\n\nexport type PostUserByIdChangePasswordResponse = string;\n\nexport type PostUserByIdResetPasswordData = {\n    id: string;\n};\n\nexport type PostUserByIdResetPasswordResponse = ResetPasswordUserResponseModel;\n\nexport type DeleteUserAvatarByIdData = {\n    id: string;\n};\n\nexport type DeleteUserAvatarByIdResponse = string;\n\nexport type PostUserAvatarByIdData = {\n    id: string;\n    requestBody?: SetAvatarRequestModel;\n};\n\nexport type PostUserAvatarByIdResponse = string;\n\nexport type GetUserConfigurationResponse = UserConfigurationResponseModel;\n\nexport type GetUserCurrentResponse = CurrentUserResponseModel;\n\nexport type GetUserCurrent2FaResponse = Array<(UserTwoFactorProviderModel)>;\n\nexport type DeleteUserCurrent2FaByProviderNameData = {\n    code?: string;\n    providerName: string;\n};\n\nexport type DeleteUserCurrent2FaByProviderNameResponse = string;\n\nexport type PostUserCurrent2FaByProviderNameData = {\n    providerName: string;\n    requestBody?: EnableTwoFactorRequestModel;\n};\n\nexport type PostUserCurrent2FaByProviderNameResponse = NoopSetupTwoFactorModel;\n\nexport type GetUserCurrent2FaByProviderNameData = {\n    providerName: string;\n};\n\nexport type GetUserCurrent2FaByProviderNameResponse = NoopSetupTwoFactorModel;\n\nexport type PostUserCurrentAvatarData = {\n    requestBody?: SetAvatarRequestModel;\n};\n\nexport type PostUserCurrentAvatarResponse = string;\n\nexport type PostUserCurrentChangePasswordData = {\n    requestBody?: ChangePasswordCurrentUserRequestModel;\n};\n\nexport type PostUserCurrentChangePasswordResponse = string;\n\nexport type GetUserCurrentConfigurationResponse = CurrenUserConfigurationResponseModel;\n\nexport type GetUserCurrentLoginProvidersResponse = Array<(UserExternalLoginProviderModel)>;\n\nexport type GetUserCurrentPermissionsData = {\n    id?: Array<(string)>;\n};\n\nexport type GetUserCurrentPermissionsResponse = UserPermissionsResponseModel;\n\nexport type GetUserCurrentPermissionsDocumentData = {\n    id?: Array<(string)>;\n};\n\nexport type GetUserCurrentPermissionsDocumentResponse = Array<(UserPermissionsResponseModel)>;\n\nexport type GetUserCurrentPermissionsMediaData = {\n    id?: Array<(string)>;\n};\n\nexport type GetUserCurrentPermissionsMediaResponse = UserPermissionsResponseModel;\n\nexport type PostUserDisableData = {\n    requestBody?: DisableUserRequestModel;\n};\n\nexport type PostUserDisableResponse = string;\n\nexport type PostUserEnableData = {\n    requestBody?: EnableUserRequestModel;\n};\n\nexport type PostUserEnableResponse = string;\n\nexport type PostUserInviteData = {\n    requestBody?: InviteUserRequestModel;\n};\n\nexport type PostUserInviteResponse = string;\n\nexport type PostUserInviteCreatePasswordData = {\n    requestBody?: CreateInitialPasswordUserRequestModel;\n};\n\nexport type PostUserInviteCreatePasswordResponse = string;\n\nexport type PostUserInviteResendData = {\n    requestBody?: ResendInviteUserRequestModel;\n};\n\nexport type PostUserInviteResendResponse = string;\n\nexport type PostUserInviteVerifyData = {\n    requestBody?: VerifyInviteUserRequestModel;\n};\n\nexport type PostUserInviteVerifyResponse = VerifyInviteUserResponseModel;\n\nexport type PostUserSetUserGroupsData = {\n    requestBody?: UpdateUserGroupsOnUserRequestModel;\n};\n\nexport type PostUserSetUserGroupsResponse = string;\n\nexport type PostUserUnlockData = {\n    requestBody?: UnlockUsersRequestModel;\n};\n\nexport type PostUserUnlockResponse = string;\n\nexport type GetItemWebhookData = {\n    id?: Array<(string)>;\n};\n\nexport type GetItemWebhookResponse = Array<(WebhookItemResponseModel)>;\n\nexport type GetWebhookData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetWebhookResponse = PagedWebhookResponseModel;\n\nexport type PostWebhookData = {\n    requestBody?: CreateWebhookRequestModel;\n};\n\nexport type PostWebhookResponse = string;\n\nexport type GetWebhookByIdData = {\n    id: string;\n};\n\nexport type GetWebhookByIdResponse = WebhookResponseModel;\n\nexport type DeleteWebhookByIdData = {\n    id: string;\n};\n\nexport type DeleteWebhookByIdResponse = string;\n\nexport type PutWebhookByIdData = {\n    id: string;\n    requestBody?: UpdateWebhookRequestModel;\n};\n\nexport type PutWebhookByIdResponse = string;\n\nexport type GetWebhookEventsData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetWebhookEventsResponse = PagedWebhookEventModel;\n\nexport type $OpenApiTs = {\n    '/umbraco/management/api/v1/contentment/configuration-editor/models': {\n        get: {\n            req: GetContentmentConfigurationEditorModelsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: ConfigurationEditorModelsResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/contentment/data-list/editor': {\n        post: {\n            req: PostContentmentDataListEditorData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: DataListEditorResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/culture': {\n        get: {\n            req: GetCultureData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedCultureReponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/data-type': {\n        post: {\n            req: PostDataTypeData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/data-type/{id}': {\n        get: {\n            req: GetDataTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: DataTypeResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteDataTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDataTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/data-type/{id}/copy': {\n        post: {\n            req: PostDataTypeByIdCopyData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/data-type/{id}/is-used': {\n        get: {\n            req: GetDataTypeByIdIsUsedData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: boolean;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/data-type/{id}/move': {\n        put: {\n            req: PutDataTypeByIdMoveData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/data-type/{id}/references': {\n        get: {\n            req: GetDataTypeByIdReferencesData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DataTypeReferenceResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/data-type/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: DatatypeConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/data-type/folder': {\n        post: {\n            req: PostDataTypeFolderData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/data-type/folder/{id}': {\n        get: {\n            req: GetDataTypeFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: FolderResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteDataTypeFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDataTypeFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/filter/data-type': {\n        get: {\n            req: GetFilterDataTypeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDataTypeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/data-type': {\n        get: {\n            req: GetItemDataTypeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DataTypeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/data-type/search': {\n        get: {\n            req: GetItemDataTypeSearchData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelDataTypeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/data-type/ancestors': {\n        get: {\n            req: GetTreeDataTypeAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DataTypeTreeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/data-type/children': {\n        get: {\n            req: GetTreeDataTypeChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDataTypeTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/data-type/root': {\n        get: {\n            req: GetTreeDataTypeRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDataTypeTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/dictionary': {\n        get: {\n            req: GetDictionaryData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDictionaryOverviewResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n        post: {\n            req: PostDictionaryData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n                /**\n                 * Conflict\n                 */\n                409: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/dictionary/{id}': {\n        get: {\n            req: GetDictionaryByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: DictionaryItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteDictionaryByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDictionaryByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/dictionary/{id}/export': {\n        get: {\n            req: GetDictionaryByIdExportData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: (Blob | File);\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/dictionary/{id}/move': {\n        put: {\n            req: PutDictionaryByIdMoveData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/dictionary/import': {\n        post: {\n            req: PostDictionaryImportData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/dictionary': {\n        get: {\n            req: GetItemDictionaryData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DictionaryItemItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/dictionary/ancestors': {\n        get: {\n            req: GetTreeDictionaryAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(NamedEntityTreeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/dictionary/children': {\n        get: {\n            req: GetTreeDictionaryChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedNamedEntityTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/dictionary/root': {\n        get: {\n            req: GetTreeDictionaryRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedNamedEntityTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-blueprint': {\n        post: {\n            req: PostDocumentBlueprintData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-blueprint/{id}': {\n        get: {\n            req: GetDocumentBlueprintByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: DocumentBlueprintResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteDocumentBlueprintByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDocumentBlueprintByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-blueprint/{id}/move': {\n        put: {\n            req: PutDocumentBlueprintByIdMoveData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-blueprint/folder': {\n        post: {\n            req: PostDocumentBlueprintFolderData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-blueprint/folder/{id}': {\n        get: {\n            req: GetDocumentBlueprintFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: FolderResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteDocumentBlueprintFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDocumentBlueprintFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-blueprint/from-document': {\n        post: {\n            req: PostDocumentBlueprintFromDocumentData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/document-blueprint': {\n        get: {\n            req: GetItemDocumentBlueprintData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DocumentBlueprintItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/document-blueprint/ancestors': {\n        get: {\n            req: GetTreeDocumentBlueprintAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DocumentBlueprintTreeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/document-blueprint/children': {\n        get: {\n            req: GetTreeDocumentBlueprintChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentBlueprintTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/document-blueprint/root': {\n        get: {\n            req: GetTreeDocumentBlueprintRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentBlueprintTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type': {\n        post: {\n            req: PostDocumentTypeData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/{id}': {\n        get: {\n            req: GetDocumentTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: DocumentTypeResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteDocumentTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDocumentTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/{id}/allowed-children': {\n        get: {\n            req: GetDocumentTypeByIdAllowedChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedAllowedDocumentTypeModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/{id}/blueprint': {\n        get: {\n            req: GetDocumentTypeByIdBlueprintData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentTypeBlueprintItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/{id}/composition-references': {\n        get: {\n            req: GetDocumentTypeByIdCompositionReferencesData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DocumentTypeCompositionResponseModel)>;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/{id}/copy': {\n        post: {\n            req: PostDocumentTypeByIdCopyData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/{id}/export': {\n        get: {\n            req: GetDocumentTypeByIdExportData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: (Blob | File);\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/{id}/import': {\n        put: {\n            req: PutDocumentTypeByIdImportData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/{id}/move': {\n        put: {\n            req: PutDocumentTypeByIdMoveData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/allowed-at-root': {\n        get: {\n            req: GetDocumentTypeAllowedAtRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedAllowedDocumentTypeModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/available-compositions': {\n        post: {\n            req: PostDocumentTypeAvailableCompositionsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(AvailableDocumentTypeCompositionResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: DocumentTypeConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/folder': {\n        post: {\n            req: PostDocumentTypeFolderData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/folder/{id}': {\n        get: {\n            req: GetDocumentTypeFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: FolderResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteDocumentTypeFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDocumentTypeFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-type/import': {\n        post: {\n            req: PostDocumentTypeImportData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/document-type': {\n        get: {\n            req: GetItemDocumentTypeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DocumentTypeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/document-type/search': {\n        get: {\n            req: GetItemDocumentTypeSearchData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelDocumentTypeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/document-type/ancestors': {\n        get: {\n            req: GetTreeDocumentTypeAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DocumentTypeTreeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/document-type/children': {\n        get: {\n            req: GetTreeDocumentTypeChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentTypeTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/document-type/root': {\n        get: {\n            req: GetTreeDocumentTypeRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentTypeTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-version': {\n        get: {\n            req: GetDocumentVersionData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentVersionItemResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-version/{id}': {\n        get: {\n            req: GetDocumentVersionByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: DocumentVersionResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-version/{id}/prevent-cleanup': {\n        put: {\n            req: PutDocumentVersionByIdPreventCleanupData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document-version/{id}/rollback': {\n        post: {\n            req: PostDocumentVersionByIdRollbackData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/collection/document/{id}': {\n        get: {\n            req: GetCollectionDocumentByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentCollectionResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document': {\n        post: {\n            req: PostDocumentData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}': {\n        get: {\n            req: GetDocumentByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: DocumentResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteDocumentByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDocumentByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/audit-log': {\n        get: {\n            req: GetDocumentByIdAuditLogData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedAuditLogResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/copy': {\n        post: {\n            req: PostDocumentByIdCopyData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/domains': {\n        get: {\n            req: GetDocumentByIdDomainsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: DomainsResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDocumentByIdDomainsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n                /**\n                 * Conflict\n                 */\n                409: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/move': {\n        put: {\n            req: PutDocumentByIdMoveData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/move-to-recycle-bin': {\n        put: {\n            req: PutDocumentByIdMoveToRecycleBinData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/notifications': {\n        get: {\n            req: GetDocumentByIdNotificationsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DocumentNotificationResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDocumentByIdNotificationsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/public-access': {\n        post: {\n            req: PostDocumentByIdPublicAccessData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteDocumentByIdPublicAccessData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        get: {\n            req: GetDocumentByIdPublicAccessData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PublicAccessResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutDocumentByIdPublicAccessData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/publish': {\n        put: {\n            req: PutDocumentByIdPublishData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/publish-with-descendants': {\n        put: {\n            req: PutDocumentByIdPublishWithDescendantsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/referenced-by': {\n        get: {\n            req: GetDocumentByIdReferencedByData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedIReferenceResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/referenced-descendants': {\n        get: {\n            req: GetDocumentByIdReferencedDescendantsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedReferenceByIdModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/unpublish': {\n        put: {\n            req: PutDocumentByIdUnpublishData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/{id}/validate': {\n        put: {\n            req: PutDocumentByIdValidateData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/are-referenced': {\n        get: {\n            req: GetDocumentAreReferencedData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedReferenceByIdModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: DocumentConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/sort': {\n        put: {\n            req: PutDocumentSortData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/urls': {\n        get: {\n            req: GetDocumentUrlsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DocumentUrlInfoResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/document/validate': {\n        post: {\n            req: PostDocumentValidateData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/document': {\n        get: {\n            req: GetItemDocumentData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DocumentItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/document/search': {\n        get: {\n            req: GetItemDocumentSearchData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelDocumentItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/document': {\n        delete: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/document/{id}': {\n        delete: {\n            req: DeleteRecycleBinDocumentByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/document/{id}/original-parent': {\n        get: {\n            req: GetRecycleBinDocumentByIdOriginalParentData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: ReferenceByIdModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/document/{id}/restore': {\n        put: {\n            req: PutRecycleBinDocumentByIdRestoreData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/document/children': {\n        get: {\n            req: GetRecycleBinDocumentChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentRecycleBinItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/document/root': {\n        get: {\n            req: GetRecycleBinDocumentRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentRecycleBinItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/document/ancestors': {\n        get: {\n            req: GetTreeDocumentAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DocumentTreeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/document/children': {\n        get: {\n            req: GetTreeDocumentChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/document/root': {\n        get: {\n            req: GetTreeDocumentRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedDocumentTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/dynamic-root/query': {\n        post: {\n            req: PostDynamicRootQueryData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: DynamicRootResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/dynamic-root/steps': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(string)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/ClearUmbracoCache': {\n        post: {\n            req: PostUmbracoManagementApiV1GodModeClearUmbracoCacheData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: ServerResponse;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/CopyDataType': {\n        post: {\n            req: PostUmbracoManagementApiV1GodModeCopyDataTypeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: ServerResponse;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/DeleteTag': {\n        post: {\n            req: PostUmbracoManagementApiV1GodModeDeleteTagData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: ServerResponse;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/FixTemplateMasters': {\n        post: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: number;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetApiControllers': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetAssemblies': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(NameValue)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetAssembliesWithInterfaces': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(NameValue)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetComposers': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetCompositions': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(ContentTypeData)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetConfig': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: GodModeConfig;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetContentFinders': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetContentPaged': {\n        get: {\n            req: GetUmbracoManagementApiV1GodModeGetContentPagedData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Page_1;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetContentTypeAliases': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(string)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetContentTypeMap': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(ContentTypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetContentUsageData': {\n        get: {\n            req: GetUmbracoManagementApiV1GodModeGetContentUsageDataData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(UsageModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetDataTypes': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DataTypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetDataTypesStatus': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DataTypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetEnvironmentDiagnostics': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DiagnosticGroup)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetInterfacesFrom': {\n        get: {\n            req: GetUmbracoManagementApiV1GodModeGetInterfacesFromData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetLanguages': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(Lang)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetMedia': {\n        get: {\n            req: GetUmbracoManagementApiV1GodModeGetMediaData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: MediaMap;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetMediaTypes': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(ItemBase)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetMemberGroups': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MemberGroupModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetMembersPaged': {\n        get: {\n            req: GetUmbracoManagementApiV1GodModeGetMembersPagedData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: MemberModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetNonMsAssemblies': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(NameValue)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetNuCacheItem': {\n        get: {\n            req: GetUmbracoManagementApiV1GodModeGetNuCacheItemData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: NuCacheItem;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetNuCacheType': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetOrphanedTags': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(Tag)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetPropertyEditors': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(DataTypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetPropertyGroups': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(string)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetPropertyValueConverters': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetPublishedContentModels': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetRegisteredServices': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(RegisteredService)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetRenderMvcControllers': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetStandardContentTypeAliases': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(string)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetSurfaceControllers': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetTagHelpers': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetTagMapping': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TagMapping)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetTemplates': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TemplateModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetTemplateUrlsToPing': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(string)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetTypesAssignableFrom': {\n        get: {\n            req: GetUmbracoManagementApiV1GodModeGetTypesAssignableFromData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetTypesFrom': {\n        get: {\n            req: GetUmbracoManagementApiV1GodModeGetTypesFromData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetUmbracoAssemblies': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(NameValue)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetUrlProviders': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetUrlsToPing': {\n        get: {\n            req: GetUmbracoManagementApiV1GodModeGetUrlsToPingData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(string)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/GetViewComponents': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TypeMap)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/PurgeMediaCache': {\n        post: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: ServerResponse;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/god-mode/RestartAppPool': {\n        post: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: ServerResponse;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/health-check-group': {\n        get: {\n            req: GetHealthCheckGroupData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedHealthCheckGroupResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/health-check-group/{name}': {\n        get: {\n            req: GetHealthCheckGroupByNameData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: HealthCheckGroupPresentationModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/health-check-group/{name}/check': {\n        post: {\n            req: PostHealthCheckGroupByNameCheckData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: HealthCheckGroupWithResultResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/health-check/execute-action': {\n        post: {\n            req: PostHealthCheckExecuteActionData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: HealthCheckResultResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/help': {\n        get: {\n            req: GetHelpData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedHelpPageResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/imaging/resize/urls': {\n        get: {\n            req: GetImagingResizeUrlsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MediaUrlInfoResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/import/analyze': {\n        get: {\n            req: GetImportAnalyzeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: EntityImportAnalysisResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/indexer': {\n        get: {\n            req: GetIndexerData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedIndexResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/indexer/{indexName}': {\n        get: {\n            req: GetIndexerByIndexNameData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: IndexResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/indexer/{indexName}/rebuild': {\n        post: {\n            req: PostIndexerByIndexNameRebuildData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n                /**\n                 * Conflict\n                 */\n                409: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/install/settings': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: InstallSettingsResponseModel;\n                /**\n                 * Precondition Required\n                 */\n                428: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/install/setup': {\n        post: {\n            req: PostInstallSetupData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Precondition Required\n                 */\n                428: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/install/validate-database': {\n        post: {\n            req: PostInstallValidateDatabaseData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/language': {\n        get: {\n            req: GetItemLanguageData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(LanguageItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/language/default': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: LanguageItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/language': {\n        get: {\n            req: GetLanguageData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedLanguageResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n        post: {\n            req: PostLanguageData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/language/{isoCode}': {\n        get: {\n            req: GetLanguageByIsoCodeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: LanguageResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteLanguageByIsoCodeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutLanguageByIsoCodeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/log-viewer/level': {\n        get: {\n            req: GetLogViewerLevelData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedLoggerResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/log-viewer/level-count': {\n        get: {\n            req: GetLogViewerLevelCountData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: LogLevelCountsReponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/log-viewer/log': {\n        get: {\n            req: GetLogViewerLogData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedLogMessageResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/log-viewer/message-template': {\n        get: {\n            req: GetLogViewerMessageTemplateData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedLogTemplateResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/log-viewer/saved-search': {\n        get: {\n            req: GetLogViewerSavedSearchData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedSavedLogSearchResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n        post: {\n            req: PostLogViewerSavedSearchData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/log-viewer/saved-search/{name}': {\n        get: {\n            req: GetLogViewerSavedSearchByNameData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: SavedLogSearchResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteLogViewerSavedSearchByNameData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/log-viewer/validate-logs-size': {\n        get: {\n            req: GetLogViewerValidateLogsSizeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: unknown;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/manifest/manifest': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(ManifestResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/manifest/manifest/private': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(ManifestResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/manifest/manifest/public': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(ManifestResponseModel)>;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/media-type': {\n        get: {\n            req: GetItemMediaTypeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MediaTypeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/media-type/allowed': {\n        get: {\n            req: GetItemMediaTypeAllowedData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelMediaTypeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/media-type/folders': {\n        get: {\n            req: GetItemMediaTypeFoldersData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelMediaTypeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/media-type/search': {\n        get: {\n            req: GetItemMediaTypeSearchData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelMediaTypeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type': {\n        post: {\n            req: PostMediaTypeData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/{id}': {\n        get: {\n            req: GetMediaTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: MediaTypeResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteMediaTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutMediaTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/{id}/allowed-children': {\n        get: {\n            req: GetMediaTypeByIdAllowedChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedAllowedMediaTypeModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/{id}/composition-references': {\n        get: {\n            req: GetMediaTypeByIdCompositionReferencesData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MediaTypeCompositionResponseModel)>;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/{id}/copy': {\n        post: {\n            req: PostMediaTypeByIdCopyData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/{id}/export': {\n        get: {\n            req: GetMediaTypeByIdExportData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: (Blob | File);\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/{id}/import': {\n        put: {\n            req: PutMediaTypeByIdImportData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/{id}/move': {\n        put: {\n            req: PutMediaTypeByIdMoveData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/allowed-at-root': {\n        get: {\n            req: GetMediaTypeAllowedAtRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedAllowedMediaTypeModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/available-compositions': {\n        post: {\n            req: PostMediaTypeAvailableCompositionsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(AvailableMediaTypeCompositionResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/folder': {\n        post: {\n            req: PostMediaTypeFolderData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/folder/{id}': {\n        get: {\n            req: GetMediaTypeFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: FolderResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteMediaTypeFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutMediaTypeFolderByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media-type/import': {\n        post: {\n            req: PostMediaTypeImportData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/media-type/ancestors': {\n        get: {\n            req: GetTreeMediaTypeAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MediaTypeTreeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/media-type/children': {\n        get: {\n            req: GetTreeMediaTypeChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMediaTypeTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/media-type/root': {\n        get: {\n            req: GetTreeMediaTypeRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMediaTypeTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/collection/media': {\n        get: {\n            req: GetCollectionMediaData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMediaCollectionResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/media': {\n        get: {\n            req: GetItemMediaData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MediaItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/media/search': {\n        get: {\n            req: GetItemMediaSearchData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelMediaItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media': {\n        post: {\n            req: PostMediaData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/{id}': {\n        get: {\n            req: GetMediaByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: MediaResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteMediaByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutMediaByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/{id}/audit-log': {\n        get: {\n            req: GetMediaByIdAuditLogData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedAuditLogResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/{id}/move': {\n        put: {\n            req: PutMediaByIdMoveData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/{id}/move-to-recycle-bin': {\n        put: {\n            req: PutMediaByIdMoveToRecycleBinData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/{id}/referenced-by': {\n        get: {\n            req: GetMediaByIdReferencedByData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedIReferenceResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/{id}/referenced-descendants': {\n        get: {\n            req: GetMediaByIdReferencedDescendantsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedReferenceByIdModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/{id}/validate': {\n        put: {\n            req: PutMediaByIdValidateData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/are-referenced': {\n        get: {\n            req: GetMediaAreReferencedData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedReferenceByIdModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: MediaConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/sort': {\n        put: {\n            req: PutMediaSortData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/urls': {\n        get: {\n            req: GetMediaUrlsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MediaUrlInfoResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/media/validate': {\n        post: {\n            req: PostMediaValidateData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/media': {\n        delete: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/media/{id}': {\n        delete: {\n            req: DeleteRecycleBinMediaByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/media/{id}/original-parent': {\n        get: {\n            req: GetRecycleBinMediaByIdOriginalParentData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: ReferenceByIdModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/media/{id}/restore': {\n        put: {\n            req: PutRecycleBinMediaByIdRestoreData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/media/children': {\n        get: {\n            req: GetRecycleBinMediaChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMediaRecycleBinItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/recycle-bin/media/root': {\n        get: {\n            req: GetRecycleBinMediaRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMediaRecycleBinItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/media/ancestors': {\n        get: {\n            req: GetTreeMediaAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MediaTreeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/media/children': {\n        get: {\n            req: GetTreeMediaChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMediaTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/media/root': {\n        get: {\n            req: GetTreeMediaRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMediaTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/member-group': {\n        get: {\n            req: GetItemMemberGroupData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MemberGroupItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member-group': {\n        get: {\n            req: GetMemberGroupData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMemberGroupResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n        post: {\n            req: PostMemberGroupData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member-group/{id}': {\n        get: {\n            req: GetMemberGroupByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: MemberGroupResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: unknown;\n            };\n        };\n        delete: {\n            req: DeleteMemberGroupByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutMemberGroupByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/member-group/root': {\n        get: {\n            req: GetTreeMemberGroupRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedNamedEntityTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/member-type': {\n        get: {\n            req: GetItemMemberTypeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MemberTypeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/member-type/search': {\n        get: {\n            req: GetItemMemberTypeSearchData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelMemberTypeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member-type': {\n        post: {\n            req: PostMemberTypeData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member-type/{id}': {\n        get: {\n            req: GetMemberTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: MemberTypeResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteMemberTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutMemberTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member-type/{id}/composition-references': {\n        get: {\n            req: GetMemberTypeByIdCompositionReferencesData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MemberTypeCompositionResponseModel)>;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member-type/{id}/copy': {\n        post: {\n            req: PostMemberTypeByIdCopyData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member-type/available-compositions': {\n        post: {\n            req: PostMemberTypeAvailableCompositionsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(AvailableMemberTypeCompositionResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/member-type/root': {\n        get: {\n            req: GetTreeMemberTypeRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMemberTypeTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/filter/member': {\n        get: {\n            req: GetFilterMemberData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedMemberResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/member': {\n        get: {\n            req: GetItemMemberData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(MemberItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/member/search': {\n        get: {\n            req: GetItemMemberSearchData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelMemberItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member': {\n        post: {\n            req: PostMemberData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member/{id}': {\n        get: {\n            req: GetMemberByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: MemberResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteMemberByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutMemberByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member/{id}/validate': {\n        put: {\n            req: PutMemberByIdValidateData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: MemberConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/member/validate': {\n        post: {\n            req: PostMemberValidateData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/models-builder/build': {\n        post: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Precondition Required\n                 */\n                428: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/models-builder/dashboard': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: ModelsBuilderResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/models-builder/status': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: OutOfDateStatusResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/object-types': {\n        get: {\n            req: GetObjectTypesData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedObjectTypeResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/oembed/query': {\n        get: {\n            req: GetOembedQueryData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: OEmbedResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/package/{name}/run-migration': {\n        post: {\n            req: PostPackageByNameRunMigrationData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n                /**\n                 * Conflict\n                 */\n                409: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/package/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: PackageConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/package/created': {\n        get: {\n            req: GetPackageCreatedData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedPackageDefinitionResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n        post: {\n            req: PostPackageCreatedData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/package/created/{id}': {\n        get: {\n            req: GetPackageCreatedByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PackageDefinitionResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeletePackageCreatedByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutPackageCreatedByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/package/created/{id}/download': {\n        get: {\n            req: GetPackageCreatedByIdDownloadData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: (Blob | File);\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/package/migration-status': {\n        get: {\n            req: GetPackageMigrationStatusData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedPackageMigrationStatusResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/partial-view': {\n        get: {\n            req: GetItemPartialViewData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(PartialViewItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/partial-view': {\n        post: {\n            req: PostPartialViewData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/partial-view/{path}': {\n        get: {\n            req: GetPartialViewByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PartialViewResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeletePartialViewByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutPartialViewByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/partial-view/{path}/rename': {\n        put: {\n            req: PutPartialViewByPathRenameData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/partial-view/folder': {\n        post: {\n            req: PostPartialViewFolderData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/partial-view/folder/{path}': {\n        get: {\n            req: GetPartialViewFolderByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PartialViewFolderResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeletePartialViewFolderByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/partial-view/snippet': {\n        get: {\n            req: GetPartialViewSnippetData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedPartialViewSnippetItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/partial-view/snippet/{id}': {\n        get: {\n            req: GetPartialViewSnippetByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PartialViewSnippetResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/partial-view/ancestors': {\n        get: {\n            req: GetTreePartialViewAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(FileSystemTreeItemPresentationModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/partial-view/children': {\n        get: {\n            req: GetTreePartialViewChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedFileSystemTreeItemPresentationModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/partial-view/root': {\n        get: {\n            req: GetTreePartialViewRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedFileSystemTreeItemPresentationModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/preview': {\n        delete: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n            };\n        };\n        post: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/profiling/status': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: ProfilingStatusResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n        put: {\n            req: PutProfilingStatusData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/property-type/is-used': {\n        get: {\n            req: GetPropertyTypeIsUsedData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: boolean;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/published-cache/collect': {\n        post: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/published-cache/rebuild': {\n        post: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/published-cache/reload': {\n        post: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/published-cache/status': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/redirect-management': {\n        get: {\n            req: GetRedirectManagementData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedRedirectUrlResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/redirect-management/{id}': {\n        get: {\n            req: GetRedirectManagementByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedRedirectUrlResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n        delete: {\n            req: DeleteRedirectManagementByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/redirect-management/status': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: RedirectUrlStatusResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n        post: {\n            req: PostRedirectManagementStatusData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/relation-type': {\n        get: {\n            req: GetItemRelationTypeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(RelationTypeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/relation-type': {\n        get: {\n            req: GetRelationTypeData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedRelationTypeResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/relation-type/{id}': {\n        get: {\n            req: GetRelationTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: RelationTypeResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/relation/type/{id}': {\n        get: {\n            req: GetRelationTypeByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedRelationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: PagedProblemDetailsModel;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/script': {\n        get: {\n            req: GetItemScriptData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(ScriptItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/script': {\n        post: {\n            req: PostScriptData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/script/{path}': {\n        get: {\n            req: GetScriptByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: ScriptResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteScriptByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutScriptByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/script/{path}/rename': {\n        put: {\n            req: PutScriptByPathRenameData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/script/folder': {\n        post: {\n            req: PostScriptFolderData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/script/folder/{path}': {\n        get: {\n            req: GetScriptFolderByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: ScriptFolderResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteScriptFolderByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/script/ancestors': {\n        get: {\n            req: GetTreeScriptAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(FileSystemTreeItemPresentationModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/script/children': {\n        get: {\n            req: GetTreeScriptChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedFileSystemTreeItemPresentationModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/script/root': {\n        get: {\n            req: GetTreeScriptRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedFileSystemTreeItemPresentationModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/searcher': {\n        get: {\n            req: GetSearcherData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedSearcherResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/searcher/{searcherName}/query': {\n        get: {\n            req: GetSearcherBySearcherNameQueryData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedSearchResultResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/security/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: SecurityConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/security/forgot-password': {\n        post: {\n            req: PostSecurityForgotPasswordData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/security/forgot-password/reset': {\n        post: {\n            req: PostSecurityForgotPasswordResetData;\n            res: {\n                /**\n                 * No Content\n                 */\n                204: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetailsBuilderModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetailsBuilderModel;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/security/forgot-password/verify': {\n        post: {\n            req: PostSecurityForgotPasswordVerifyData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: VerifyResetPasswordResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetailsBuilderModel;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetailsBuilderModel;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/segment': {\n        get: {\n            req: GetSegmentData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedSegmentResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/server/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: ServerConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/server/information': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: ServerInformationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/server/status': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: ServerStatusResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/server/troubleshooting': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: ServerTroubleshootingResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/static-file': {\n        get: {\n            req: GetItemStaticFileData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(StaticFileItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/static-file/ancestors': {\n        get: {\n            req: GetTreeStaticFileAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(FileSystemTreeItemPresentationModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/static-file/children': {\n        get: {\n            req: GetTreeStaticFileChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedFileSystemTreeItemPresentationModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/static-file/root': {\n        get: {\n            req: GetTreeStaticFileRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedFileSystemTreeItemPresentationModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/stylesheet': {\n        get: {\n            req: GetItemStylesheetData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(StylesheetItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/stylesheet': {\n        post: {\n            req: PostStylesheetData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/stylesheet/{path}': {\n        get: {\n            req: GetStylesheetByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: StylesheetResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteStylesheetByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutStylesheetByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/stylesheet/{path}/rename': {\n        put: {\n            req: PutStylesheetByPathRenameData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/stylesheet/folder': {\n        post: {\n            req: PostStylesheetFolderData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/stylesheet/folder/{path}': {\n        get: {\n            req: GetStylesheetFolderByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: StylesheetFolderResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteStylesheetFolderByPathData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/stylesheet/ancestors': {\n        get: {\n            req: GetTreeStylesheetAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(FileSystemTreeItemPresentationModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/stylesheet/children': {\n        get: {\n            req: GetTreeStylesheetChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedFileSystemTreeItemPresentationModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/stylesheet/root': {\n        get: {\n            req: GetTreeStylesheetRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedFileSystemTreeItemPresentationModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tag': {\n        get: {\n            req: GetTagData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedTagResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/telemetry': {\n        get: {\n            req: GetTelemetryData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedTelemetryResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/telemetry/level': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: TelemetryResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n        post: {\n            req: PostTelemetryLevelData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/template': {\n        get: {\n            req: GetItemTemplateData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(TemplateItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/template/search': {\n        get: {\n            req: GetItemTemplateSearchData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedModelTemplateItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/template': {\n        post: {\n            req: PostTemplateData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/template/{id}': {\n        get: {\n            req: GetTemplateByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: TemplateResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteTemplateByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutTemplateByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/template/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: TemplateConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/template/query/execute': {\n        post: {\n            req: PostTemplateQueryExecuteData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: TemplateQueryResultResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/template/query/settings': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: TemplateQuerySettingsResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/template/ancestors': {\n        get: {\n            req: GetTreeTemplateAncestorsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(NamedEntityTreeItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/template/children': {\n        get: {\n            req: GetTreeTemplateChildrenData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedNamedEntityTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/tree/template/root': {\n        get: {\n            req: GetTreeTemplateRootData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedNamedEntityTreeItemResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/temporary-file': {\n        post: {\n            req: PostTemporaryFileData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/temporary-file/{id}': {\n        get: {\n            req: GetTemporaryFileByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: TemporaryFileResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteTemporaryFileByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/temporary-file/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: TemporaryFileConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/upgrade/authorize': {\n        post: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Precondition Required\n                 */\n                428: ProblemDetails;\n                /**\n                 * Internal Server Error\n                 */\n                500: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/upgrade/settings': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: UpgradeSettingsResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Precondition Required\n                 */\n                428: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user-data': {\n        post: {\n            req: PostUserDataData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: UserDataOperationStatusModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: UserDataOperationStatusModel;\n            };\n        };\n        get: {\n            req: GetUserDataData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedUserDataResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n        put: {\n            req: PutUserDataData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: UserDataOperationStatusModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: UserDataOperationStatusModel;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user-data/{id}': {\n        get: {\n            req: GetUserDataByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: UserDataModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/filter/user-group': {\n        get: {\n            req: GetFilterUserGroupData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedUserGroupResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/user-group': {\n        get: {\n            req: GetItemUserGroupData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(UserGroupItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user-group': {\n        delete: {\n            req: DeleteUserGroupData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        post: {\n            req: PostUserGroupData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n        get: {\n            req: GetUserGroupData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedUserGroupResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user-group/{id}': {\n        get: {\n            req: GetUserGroupByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: UserGroupResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteUserGroupByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutUserGroupByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user-group/{id}/users': {\n        delete: {\n            req: DeleteUserGroupByIdUsersData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        post: {\n            req: PostUserGroupByIdUsersData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/filter/user': {\n        get: {\n            req: GetFilterUserData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedUserResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/user': {\n        get: {\n            req: GetItemUserData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(UserItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user': {\n        post: {\n            req: PostUserData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteUserData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n        get: {\n            req: GetUserData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedUserResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/{id}': {\n        get: {\n            req: GetUserByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: UserResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteUserByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutUserByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/{id}/2fa': {\n        get: {\n            req: GetUserById2FaData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(UserTwoFactorProviderModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/{id}/2fa/{providerName}': {\n        delete: {\n            req: DeleteUserById2FaByProviderNameData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/{id}/change-password': {\n        post: {\n            req: PostUserByIdChangePasswordData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/{id}/reset-password': {\n        post: {\n            req: PostUserByIdResetPasswordData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: ResetPasswordUserResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/avatar/{id}': {\n        delete: {\n            req: DeleteUserAvatarByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        post: {\n            req: PostUserAvatarByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: UserConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: CurrentUserResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current/2fa': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(UserTwoFactorProviderModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current/2fa/{providerName}': {\n        delete: {\n            req: DeleteUserCurrent2FaByProviderNameData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        post: {\n            req: PostUserCurrent2FaByProviderNameData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: NoopSetupTwoFactorModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        get: {\n            req: GetUserCurrent2FaByProviderNameData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: NoopSetupTwoFactorModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current/avatar': {\n        post: {\n            req: PostUserCurrentAvatarData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current/change-password': {\n        post: {\n            req: PostUserCurrentChangePasswordData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current/configuration': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: CurrenUserConfigurationResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current/login-providers': {\n        get: {\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(UserExternalLoginProviderModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current/permissions': {\n        get: {\n            req: GetUserCurrentPermissionsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: UserPermissionsResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current/permissions/document': {\n        get: {\n            req: GetUserCurrentPermissionsDocumentData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(UserPermissionsResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/current/permissions/media': {\n        get: {\n            req: GetUserCurrentPermissionsMediaData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: UserPermissionsResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/disable': {\n        post: {\n            req: PostUserDisableData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/enable': {\n        post: {\n            req: PostUserEnableData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/invite': {\n        post: {\n            req: PostUserInviteData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/invite/create-password': {\n        post: {\n            req: PostUserInviteCreatePasswordData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/invite/resend': {\n        post: {\n            req: PostUserInviteResendData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/invite/verify': {\n        post: {\n            req: PostUserInviteVerifyData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: VerifyInviteUserResponseModel;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/set-user-groups': {\n        post: {\n            req: PostUserSetUserGroupsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/user/unlock': {\n        post: {\n            req: PostUserUnlockData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/item/webhook': {\n        get: {\n            req: GetItemWebhookData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: Array<(WebhookItemResponseModel)>;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/webhook': {\n        get: {\n            req: GetWebhookData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedWebhookResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n        post: {\n            req: PostWebhookData;\n            res: {\n                /**\n                 * Created\n                 */\n                201: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/webhook/{id}': {\n        get: {\n            req: GetWebhookByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: WebhookResponseModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        delete: {\n            req: DeleteWebhookByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n        put: {\n            req: PutWebhookByIdData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: string;\n                /**\n                 * Bad Request\n                 */\n                400: ProblemDetails;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n                /**\n                 * The authenticated user do not have access to this resource\n                 */\n                403: string;\n                /**\n                 * Not Found\n                 */\n                404: ProblemDetails;\n            };\n        };\n    };\n    '/umbraco/management/api/v1/webhook/events': {\n        get: {\n            req: GetWebhookEventsData;\n            res: {\n                /**\n                 * OK\n                 */\n                200: PagedWebhookEventModel;\n                /**\n                 * The resource is protected and requires an authentication token\n                 */\n                401: unknown;\n            };\n        };\n    };\n};","import { DirectionModel } from \"../api\";\r\n\r\nexport const sortData = <T>(data: T[], sortBy: keyof T, sortDirection: DirectionModel) => {\r\n\r\n  if (sortBy && sortDirection) {\r\n    return data.sort((a: T, b: T) => {\r\n      const aValue = a[sortBy];\r\n      const bValue = b[sortBy];\r\n\r\n      if (aValue < bValue) {\r\n        return sortDirection === DirectionModel.ASCENDING ? -1 : 1;\r\n      } else if (aValue > bValue) {\r\n        return sortDirection === DirectionModel.ASCENDING ? 1 : -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  return data;\r\n\r\n}","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { LitElement, css, customElement, html, ifDefined, property, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { DirectionModel, GodModeService, TypeMap } from \"../api\";\r\nimport { tryExecuteAndNotify } from \"@umbraco-cms/backoffice/resources\";\r\nimport { UmbDataSourceResponse } from \"@umbraco-cms/backoffice/repository\";\r\nimport { UUIInputEvent, UUISelectEvent } from \"@umbraco-cms/backoffice/external/uui\";\r\nimport { sortData } from \"../helpers/sort\";\r\nimport type { UmbTableColumn, UmbTableConfig, UmbTableElement, UmbTableItem, UmbTableOrderedEvent } from '@umbraco-cms/backoffice/components';\r\n\r\n@customElement('godmode-reflection-browser')\r\nexport class GodModeReflectionBrowserElement extends UmbElementMixin(LitElement) {\r\n    \r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    }\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'Name',\r\n            alias: 'name',\r\n            allowSorting: true\r\n        },\r\n        {\r\n            name: 'Module',\r\n            alias: 'module',\r\n            allowSorting: true\r\n        },\r\n        {\r\n            name: 'Base Type',\r\n            alias: 'baseType',\r\n            allowSorting: true\r\n        },\r\n        {\r\n            name: 'Umbraco?',\r\n            alias: 'isUmbraco',\r\n            allowSorting: true,\r\n            \r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    @property({ type: String })\r\n    type?: string;\r\n\r\n    @state()\r\n    name?: string;\r\n\r\n    @state()\r\n    data: TypeMap[] = [];\r\n\r\n    @state()\r\n    filteredData: TypeMap[] = [];\r\n\r\n    @state()\r\n    searchName: string = '';\r\n\r\n    @state()\r\n    namespaces: Option[] = [];\r\n\r\n    @state()\r\n    selectedNamespace: string = '';\r\n\r\n    @state()\r\n    inherits: Option[] = [];\r\n\r\n    @state()\r\n    selectedInherits: string = '';\r\n\r\n    @state()\r\n    umbraco: Option[] = [{ name: 'Any', value: '', selected: true }, { name: 'Yes', value: 'yes' }, { name: 'No', value: 'no' }]\r\n\r\n    @state()\r\n    selectedUmbraco: string = '';\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#init();\r\n    }\r\n\r\n    #sortingHandler(event: UmbTableOrderedEvent) {\r\n        const table = event.target as UmbTableElement;\r\n        const orderingColumn = table.orderingColumn as keyof TypeMap;\r\n        const orderingDesc = table.orderingDesc;\r\n        \r\n        this.filteredData = sortData(structuredClone(this.data), orderingColumn, orderingDesc ? DirectionModel.DESCENDING : DirectionModel.ASCENDING);\r\n        this._tableItems = this.#mapData(this.filteredData);\r\n    }\r\n\r\n    async #init() {\r\n        if (this.type) {\r\n            let response: UmbDataSourceResponse<TypeMap[]> = {};\r\n\r\n            if (this.type === \"surface\") {\r\n                this.name = \"Surface Controller Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetSurfaceControllers());\r\n            }\r\n\r\n            if (this.type === \"api\") {\r\n                this.name = \"API Controller Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetApiControllers());\r\n            }\r\n\r\n            if (this.type === \"render\") {\r\n                this.name = \"RenderMvc Controller Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetRenderMvcControllers());\r\n            }\r\n\r\n            if (this.type === \"models\") {\r\n                this.name = \"Published Content Model Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetPublishedContentModels());\r\n            }\r\n\r\n            if (this.type === \"composers\") {\r\n                this.name = \"Composer Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetComposers());\r\n            }\r\n\r\n            if (this.type === \"converters\") {\r\n                this.name = \"Property Value Converter Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetRenderMvcControllers());\r\n            }\r\n\r\n            if (this.type === \"components\") {\r\n                this.name = \"View Component Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetViewComponents());\r\n            }\r\n\r\n            if (this.type === \"taghelpers\") {\r\n                this.name = \"Tag Helpers Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetTagHelpers());\r\n            }\r\n\r\n            if (this.type === \"finders\") {\r\n                this.name = \"Content Finders Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetContentFinders());\r\n            }\r\n\r\n            if (this.type === \"urlproviders\") {\r\n                this.name = \"URL Providers Browser\";\r\n                response = await tryExecuteAndNotify(this, GodModeService.getUmbracoManagementApiV1GodModeGetUrlProviders());\r\n            }\r\n\r\n            if (response) {\r\n                if (response.data) {\r\n                    this.data = response.data;\r\n                    this.filteredData = structuredClone(this.data);\r\n                    this._tableItems = this.#mapData(this.filteredData);\r\n\r\n                    let namespaces = [...new Set(this.data.map(x => x.namespace))];\r\n                    this.namespaces = namespaces.map(x => { return { name: x, value: x } });\r\n                    this.namespaces.unshift({ name: 'Any', value: '', selected: true });\r\n\r\n                    let inherits = [...new Set(this.data.map(x => x.baseType))];\r\n                    this.inherits = inherits.map(x => { return { name: x, value: x } });\r\n                    this.inherits.unshift({ name: 'Any', value: '', selected: true });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    #mapData(data: TypeMap[]): UmbTableItem[] {\r\n        return data.map((data) => {\r\n            return {\r\n                id: data.name,\r\n                data: [\r\n                    {\r\n                        columnAlias: 'name',\r\n                        value: data.name\r\n                    },\r\n                    {\r\n                        columnAlias: 'module',\r\n                        value: data.module\r\n                    },\r\n                    {\r\n                        columnAlias: 'baseType',\r\n                        value: data.baseType\r\n                    },\r\n                    {\r\n                        columnAlias: 'isUmbraco',\r\n                        value: data.isUmbraco\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    #setSearchName(event: UUIInputEvent) {\r\n        const value = event.target.value as string;\r\n        this.searchName = value;\r\n        this.#filterValues();\r\n    }\r\n\r\n    #setSelectedNamspace(event: UUISelectEvent) {\r\n        const value = event.target.value as string;\r\n        this.selectedNamespace = value;\r\n        this.#filterValues();\r\n    }\r\n\r\n    #setSelectedInherits(event: UUISelectEvent) {\r\n        const value = event.target.value as string;\r\n        this.selectedInherits = value;\r\n        this.#filterValues();\r\n    }\r\n\r\n    #setSelectedUmbraco(event: UUISelectEvent) {\r\n        const value = event.target.value as string;\r\n        this.selectedUmbraco = value;\r\n        this.#filterValues();\r\n    }\r\n\r\n    #filterValues() {\r\n        this.filteredData = structuredClone(this.data);\r\n\r\n        if (this.searchName !== '') {\r\n            this.filteredData = this.filteredData?.filter(x => x.name.toLowerCase().includes(this.searchName));\r\n        }\r\n\r\n        if (this.selectedNamespace !== '') {\r\n            this.filteredData = this.filteredData?.filter(x => x.namespace === this.selectedNamespace);\r\n        }\r\n\r\n        if (this.selectedInherits !== '') {\r\n            this.filteredData = this.filteredData?.filter(x => x.baseType === this.selectedInherits);\r\n        }\r\n\r\n        if (this.selectedUmbraco !== '') {\r\n            this.filteredData = this.filteredData?.filter(x => x.isUmbraco === (this.selectedUmbraco === 'Yes' ? true : false));\r\n        }\r\n\r\n        if (this.filteredData) {\r\n            this._tableItems = this.#mapData(this.filteredData);\r\n        }\r\n        else this._tableItems = [];\r\n    }\r\n\r\n    override render() {\r\n        return html`\r\n            <umb-body-layout>\r\n                <godmode-header name=${ifDefined(this.name)} slot=\"header\"></godmode-header>\r\n                <uui-box>\r\n                    <div class=\"grid\">\r\n                        <div>\r\n                            <uui-label>Search:</uui-label>\r\n                            <uui-input\r\n                                placeholder=\"Search names\"\r\n                                .value=${this.searchName}\r\n                                @input=${this.#setSearchName}>\r\n                            </uui-input>\r\n                        </div>\r\n                        <div>\r\n                            <uui-label>In Namespace:</uui-label>\r\n                            <uui-select\r\n                                .options=${this.namespaces}\r\n                                .value=${this.selectedNamespace}\r\n                                @change=${this.#setSelectedNamspace}>\r\n                            </uui-select>\r\n                        </div>\r\n                        <div>\r\n                            <uui-label>Inherits From:</uui-label>\r\n                            <uui-select\r\n                                .options=${this.inherits}\r\n                                .value=${this.selectedInherits}\r\n                                @change=${this.#setSelectedInherits}>\r\n                            </uui-select>\r\n                        </div>\r\n                        <div>\r\n                            <uui-label>Is Umbraco?</uui-label>\r\n                            <uui-select\r\n                                .options=${this.umbraco}\r\n                                .value=${this.selectedUmbraco}\r\n                                @change=${this.#setSelectedUmbraco}>\r\n                            </uui-select>\r\n                        </div>\r\n                    </div>\r\n                </uui-box>\r\n\r\n                ${this._tableItems.length !== 0 ? \r\n                    html`\r\n                        <uui-box style=\"--uui-box-default-padding: 0;\">\r\n                            <umb-table .config=${this._tableConfig} .columns=${this._tableColumns} .items=${this._tableItems} @ordered=${this.#sortingHandler} />\r\n                        </uui-box>\r\n                    ` : html`` }\r\n            </umb-body-layout>\r\n        `;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            .grid {\r\n                display: grid;\r\n                grid-template-columns: repeat(4, 1fr);\r\n                gap: 20px;\r\n\r\n                div {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    align-items: flex-start;\r\n                }\r\n            }\r\n\r\n            uui-box {\r\n\t            margin-bottom: 20px;\r\n            }\r\n\r\n            .inline-flex {\r\n                display: inline-flex;\r\n                align-items: center;\r\n\r\n                uui-icon {\r\n                    margin-right: 6px;\r\n                }\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default GodModeReflectionBrowserElement;","import type { ManifestTypes, ManifestWorkspace } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nconst workspace: ManifestWorkspace = {\r\n\ttype: 'workspace',\r\n\talias: 'Umb.Workspace.GodModeRoot',\r\n\tname: 'GodMode Root Workspace',\r\n\telement: () => import('./godmode-root-workspace.element'),\r\n\tmeta: {\r\n\t\tentityType: 'godmode-root',\r\n\t},\r\n};\r\n\r\nexport const manifests: Array<ManifestTypes> = [workspace];\r\n","import { ManifestTypes, ManifestWorkspaceView, ManifestWorkspaces } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nconst workspace: ManifestWorkspaces = {\r\n\ttype: 'workspace',\r\n\tkind: 'routable',\r\n\talias: 'Umb.Workspace.GodMode',\r\n\tname: 'God Mode Workspace',\r\n\tapi: () => import('./godmode-workspace.context'),\r\n\tmeta: {\t\t\r\n\t\tentityType: 'godmode',\r\n\t},\r\n};\r\n\r\nconst workspaceView: ManifestWorkspaceView = {\r\n\ttype: 'workspaceView',\r\n\talias: 'Umb.WorkspaceView.GodMode.View',\r\n\tname: 'God Mode Workspace View',\r\n\telement: () => import('./godmode-workspace-editor.element'),\r\n\tweight: 90,\r\n\tmeta: {\r\n\t\tlabel: 'View',\r\n\t\tpathname: 'browse',\r\n\t\ticon: 'edit'\r\n\t},\r\n\tconditions: [\r\n\t\t{\r\n\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\tmatch: workspace.alias\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const manifests: Array<ManifestTypes> = [\r\n\tworkspace,\r\n\tworkspaceView\r\n];","import type { ManifestTypes, ManifestWorkspace } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nconst workspace: ManifestWorkspace = {\r\n  type: 'workspace',\r\n  alias: 'Umb.Workspace.GodModeFolder',\r\n  name: 'GodMode Folder Workspace',\r\n  element: () => import('./godmode-folder-workspace.element'),\r\n  meta: {\r\n    entityType: 'godmode-folder',\r\n  },\r\n};\r\n\r\nexport const manifests: Array<ManifestTypes> = [workspace];\r\n","import type { ManifestTypes } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nimport { manifests as godModeRootManifests } from './godmode-root/manifests';\r\nimport { manifests as godModeManifests } from './godmode/manifests';\r\nimport { manifests as godModeFolderManifests } from './godmode-folder/manifests';\r\n\r\nexport const manifests: Array<ManifestTypes> = [\r\n    ...godModeRootManifests,\r\n    ...godModeManifests,\r\n    ...godModeFolderManifests\r\n];\r\n","import type { ManifestTypes } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const manifests: Array<ManifestTypes> = [\r\n    {\r\n        type: 'menuItem',\r\n        kind: 'tree',\r\n        alias: 'Umb.MenuItem.GodMode',\r\n        name: 'God Mode Menu Item',\r\n        weight: 100,\r\n        meta: {\r\n            label: 'God Mode',\r\n            icon: 'icon-sience',\r\n            entityType: 'godmode',\r\n            treeAlias: 'Umb.Tree.GodMode',\r\n            menus: ['Umb.Menu.AdvancedSettings'],\r\n        }\r\n    }\r\n];","import { ManifestRepository, ManifestTree, ManifestTreeItem, ManifestTreeStore, ManifestTypes } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { GOD_MODE_TREE_STORE_ALIAS, GOD_MODE_TREE_REPOSITORY_ALIAS } from \"../constants\";\r\n\r\nconst treeRepository: ManifestRepository = {\r\n\ttype: 'repository',\r\n\talias: GOD_MODE_TREE_REPOSITORY_ALIAS,\r\n\tname: 'God Mode Tree Repository',\r\n\tapi: () => import('./godmode-tree.repository'),\r\n};\r\n\r\nconst treeStore: ManifestTreeStore = {\r\n\ttype: 'treeStore',\r\n\talias: GOD_MODE_TREE_STORE_ALIAS,\r\n\tname: 'God Mode Tree Store',\r\n\tapi: () => import('./godmode-tree.store'),\r\n};\r\n\r\nconst tree: ManifestTree = {\r\n\ttype: 'tree',\r\n\tkind: 'default',\r\n\talias: \"Umb.Tree.GodMode\",\r\n\tname: 'God Mode Tree',\r\n\tmeta: {\r\n\t\trepositoryAlias: \"Umb.Repository.GodMode.Tree\",\r\n\t}\r\n};\r\n\r\nconst treeItem: ManifestTreeItem = {\r\n\ttype: 'treeItem',\r\n\tkind: 'default',\r\n\talias: 'Umb.TreeItem.GodMode',\r\n\tname: 'God Mode Tree Item',\r\n\tforEntityTypes: ['godmode-root', 'godmode', 'godmode-folder'],\r\n};\r\n\r\nexport const manifests: Array<ManifestTypes> = [\r\n\ttreeRepository,\r\n\ttreeStore,\r\n\ttree,\r\n\ttreeItem\r\n];","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport { OpenAPI } from './api/core/OpenAPI.ts';\r\n\r\nexport { GOD_MODE_TREE_ALIAS, GOD_MODE_TREE_REPOSITORY_ALIAS, GOD_MODE_TREE_STORE_ALIAS } from './constants';\r\nexport * from './elements/godmode-header.element';\r\nexport * from './elements/godmode-reflection-browser.element';\r\n\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as menuManifests } from './menu/manifests';\r\nimport { manifests as treeManifests } from './tree/manifests';\r\n\r\nexport const onInit: UmbEntryPointOnInit = (host, extensionRegistry) => {\r\n\r\n    extensionRegistry.registerMany([\r\n        ...workspaceManifests,\r\n        ...menuManifests,\r\n        ...treeManifests\r\n    ]);\r\n\r\n    host.consumeContext(UMB_AUTH_CONTEXT, async (auth) => {\r\n        if (!auth) return;\r\n\r\n        const umbOpenApi = auth.getOpenApiConfiguration();\r\n        OpenAPI.BASE = umbOpenApi.base;\r\n        OpenAPI.TOKEN = umbOpenApi.token;\r\n        OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n        OpenAPI.CREDENTIALS = umbOpenApi.credentials;\r\n    });\r\n};\r\n"],"names":["Interceptors","fn","index","OpenAPI","GOD_MODE_TREE_REPOSITORY_ALIAS","GOD_MODE_TREE_STORE_ALIAS","GOD_MODE_TREE_ALIAS","GodModeHeaderElement","UmbElementMixin","LitElement","html","ifDefined","css","__decorateClass","property","customElement","ApiError","request","response","message","CancelError","CancelablePromise","executor","resolve","reject","onResolve","value","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","encodePair","v","k","getUrl","config","options","encoder","path","substring","group","_a","url","getFormData","formData","process","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","_b","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","binaryTypes","type","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","transformedBody","GodModeService","data","__request","DirectionModel","sortData","sortBy","sortDirection","b","aValue","bValue","_sortingHandler","sortingHandler_fn","_init","init_fn","_mapData","mapData_fn","_setSearchName","setSearchName_fn","_setSelectedNamspace","setSelectedNamspace_fn","_setSelectedInherits","setSelectedInherits_fn","_setSelectedUmbraco","setSelectedUmbraco_fn","_filterValues","filterValues_fn","GodModeReflectionBrowserElement","__privateAdd","__privateMethod","event","table","orderingColumn","orderingDesc","tryExecuteAndNotify","namespaces","x","inherits","_c","_d","state","GodModeReflectionBrowserElement$1","workspace","manifests","workspaceView","godModeRootManifests","godModeManifests","godModeFolderManifests","treeRepository","treeStore","tree","treeItem","onInit","host","extensionRegistry","workspaceManifests","menuManifests","treeManifests","UMB_AUTH_CONTEXT","auth","umbOpenApi"],"mappings":";;;;AAMO,MAAMA,EAAgB;AAAA,EAG3B,cAAc;AACZ,SAAK,OAAO;EACd;AAAA,EAEA,MAAMC,GAAyB;AAC7B,UAAMC,IAAQ,KAAK,KAAK,QAAQD,CAAE;AAClC,IAAIC,MAAU,OACZ,KAAK,OAAO,CAAC,GAAG,KAAK,KAAK,MAAM,GAAGA,CAAK,GAAG,GAAG,KAAK,KAAK,MAAMA,IAAQ,CAAC,CAAC;AAAA,EAE5E;AAAA,EAEA,IAAID,GAAyB;AAC3B,SAAK,OAAO,CAAC,GAAG,KAAK,MAAMA,CAAE;AAAA,EAC/B;AACF;AAkBO,MAAME,IAAyB;AAAA,EACrC,MAAM;AAAA,EACN,aAAa;AAAA,EACb,aAAa;AAAA,EACb,SAAS;AAAA,EACT,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS;AAAA,EACT,kBAAkB;AAAA,EAClB,cAAc;AAAA,IACb,SAAS,IAAIH,EAAa;AAAA,IAC1B,UAAU,IAAIA,EAAa;AAAA,EAC5B;AACD,GCvDaI,KAAiC,+BACjCC,KAA4B,0BAC5BC,KAAsB;;;;;;ACE5B,IAAMC,IAAN,cAAmCC,EAAgBC,CAAU,EAAE;AAAA,EAIlE,cAAc;AACJ;EACV;AAAA,EAEA,SAAS;AACE,WAAAC;AAAA;AAAA;AAAA,+BAGgBC,EAAU,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA,EAG/C;AAiBJ;AAhCaJ,EAiBF,SAAS;AAAA,EACZK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaJ;AA7BAC,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ,WAAW,IAAM;AAAA,GADlCP,EAET,WAAA,QAAA,CAAA;AAFSA,IAANM,EAAA;AAAA,EADNE,EAAc,gBAAgB;AAAA,GAClBR,CAAA;ACDN,MAAMS,UAAiB,MAAM;AAAA,EAOnC,YAAYC,GAA4BC,GAAqBC,GAAiB;AAC7E,UAAMA,CAAO,GAEb,KAAK,OAAO,YACZ,KAAK,MAAMD,EAAS,KACpB,KAAK,SAASA,EAAS,QACvB,KAAK,aAAaA,EAAS,YAC3B,KAAK,OAAOA,EAAS,MACrB,KAAK,UAAUD;AAAA,EAChB;AACD;ACpBO,MAAMG,WAAoB,MAAM;AAAA,EACtC,YAAYD,GAAiB;AAC5B,UAAMA,CAAO,GACb,KAAK,OAAO;AAAA,EACb;AAAA,EAEA,IAAW,cAAuB;AAC1B,WAAA;AAAA,EACR;AACD;AAUO,MAAME,GAA2C;AAAA,EASvD,YACCC,GAKC;AACD,SAAK,cAAc,IACnB,KAAK,cAAc,IACnB,KAAK,eAAe,IACpB,KAAK,iBAAiB,IACtB,KAAK,UAAU,IAAI,QAAW,CAACC,GAASC,MAAW;AAClD,WAAK,WAAWD,GAChB,KAAK,UAAUC;AAET,YAAAC,IAAY,CAACC,MAAoC;AACtD,QAAI,KAAK,eAAe,KAAK,eAAe,KAAK,iBAGjD,KAAK,cAAc,IACf,KAAK,YAAU,KAAK,SAASA,CAAK;AAAA,MAAA,GAGjCC,IAAW,CAACC,MAA2B;AAC5C,QAAI,KAAK,eAAe,KAAK,eAAe,KAAK,iBAGjD,KAAK,cAAc,IACf,KAAK,WAAS,KAAK,QAAQA,CAAM;AAAA,MAAA,GAGhCC,IAAW,CAACC,MAAoC;AACrD,QAAI,KAAK,eAAe,KAAK,eAAe,KAAK,gBAG5C,KAAA,eAAe,KAAKA,CAAa;AAAA,MAAA;AAGhC,oBAAA,eAAeD,GAAU,cAAc;AAAA,QAC7C,KAAK,MAAe,KAAK;AAAA,MAAA,CACzB,GAEM,OAAA,eAAeA,GAAU,cAAc;AAAA,QAC7C,KAAK,MAAe,KAAK;AAAA,MAAA,CACzB,GAEM,OAAA,eAAeA,GAAU,eAAe;AAAA,QAC9C,KAAK,MAAe,KAAK;AAAA,MAAA,CACzB,GAEMP,EAASG,GAAWE,GAAUE,CAAoB;AAAA,IAAA,CACzD;AAAA,EACF;AAAA,EAEA,KAAK,OAAO,WAAW,IAAI;AACnB,WAAA;AAAA,EACR;AAAA,EAEO,KACNE,GACAC,GAC+B;AAC/B,WAAO,KAAK,QAAQ,KAAKD,GAAaC,CAAU;AAAA,EACjD;AAAA,EAEO,MACNA,GACuB;AAChB,WAAA,KAAK,QAAQ,MAAMA,CAAU;AAAA,EACrC;AAAA,EAEO,QAAQC,GAA6C;AACpD,WAAA,KAAK,QAAQ,QAAQA,CAAS;AAAA,EACtC;AAAA,EAEO,SAAe;AACrB,QAAI,OAAK,eAAe,KAAK,eAAe,KAAK,eAI7C;AAAA,UADJ,KAAK,eAAe,IAChB,KAAK,eAAe;AACnB,YAAA;AACQ,qBAAAH,KAAiB,KAAK;AAClB,YAAAA;iBAEPI,GAAO;AACP,kBAAA,KAAK,+BAA+BA,CAAK;AACjD;AAAA,QACD;AAED,WAAK,eAAe,SAAS,GACzB,KAAK,WAAS,KAAK,QAAQ,IAAId,GAAY,iBAAiB,CAAC;AAAA;AAAA,EAClE;AAAA,EAEA,IAAW,cAAuB;AACjC,WAAO,KAAK;AAAA,EACb;AACD;ACtHa,MAAAe,IAAW,CAACT,MACjB,OAAOA,KAAU,UAGZU,IAAoB,CAACV,MAC1BS,EAAST,CAAK,KAAKA,MAAU,IAGxBW,IAAS,CAACX,MACfA,aAAiB,MAGZY,IAAa,CAACZ,MACnBA,aAAiB,UAGZa,KAAS,CAACC,MAAwB;AAC1C,MAAA;AACH,WAAO,KAAKA,CAAG;AAAA,UACF;AAEb,WAAO,OAAO,KAAKA,CAAG,EAAE,SAAS,QAAQ;AAAA,EAC1C;AACD,GAEaC,KAAiB,CAACC,MAA4C;AAC1E,QAAMC,IAAe,CAAA,GAEfC,IAAS,CAACC,GAAanB,MAAmB;AAC5C,IAAAiB,EAAA,KAAK,GAAG,mBAAmBE,CAAG,CAAC,IAAI,mBAAmB,OAAOnB,CAAK,CAAC,CAAC,EAAE;AAAA,EAAA,GAGpEoB,IAAa,CAACD,GAAanB,MAAmB;AAC/C,IAAuBA,KAAU,SAIjCA,aAAiB,OACbkB,EAAAC,GAAKnB,EAAM,YAAa,CAAA,IACrB,MAAM,QAAQA,CAAK,IAC7BA,EAAM,QAAQ,CAAAqB,MAAKD,EAAWD,GAAKE,CAAC,CAAC,IAC3B,OAAOrB,KAAU,WAC3B,OAAO,QAAQA,CAAK,EAAE,QAAQ,CAAC,CAACsB,GAAGD,CAAC,MAAMD,EAAW,GAAGD,CAAG,IAAIG,CAAC,KAAKD,CAAC,CAAC,IAEvEH,EAAOC,GAAKnB,CAAK;AAAA,EAClB;AAGD,gBAAO,QAAQgB,CAAM,EAAE,QAAQ,CAAC,CAACG,GAAKnB,CAAK,MAAMoB,EAAWD,GAAKnB,CAAK,CAAC,GAEhEiB,EAAG,SAAS,IAAIA,EAAG,KAAK,GAAG,CAAC,KAAK;AACzC,GAEMM,KAAS,CAACC,GAAuBC,MAAuC;AACvE,QAAAC,IAAUF,EAAO,eAAe,WAEhCG,IAAOF,EAAQ,IACnB,QAAQ,iBAAiBD,EAAO,OAAO,EACvC,QAAQ,YAAY,CAACI,GAAmBC,MAAkB;;AAC1D,YAAIC,IAAAL,EAAQ,SAAR,QAAAK,EAAc,eAAeD,KACzBH,EAAQ,OAAOD,EAAQ,KAAKI,CAAK,CAAC,CAAC,IAEpCD;AAAA,EAAA,CACP,GAEIG,IAAMP,EAAO,OAAOG;AAC1B,SAAOF,EAAQ,QAAQM,IAAMhB,GAAeU,EAAQ,KAAK,IAAIM;AAC9D,GAEaC,KAAc,CAACP,MAAqD;AAChF,MAAIA,EAAQ,UAAU;AACf,UAAAQ,IAAW,IAAI,YAEfC,IAAU,CAACf,GAAanB,MAAmB;AAChD,MAAIS,EAAST,CAAK,KAAKW,EAAOX,CAAK,IACzBiC,EAAA,OAAOd,GAAKnB,CAAK,IAE1BiC,EAAS,OAAOd,GAAK,KAAK,UAAUnB,CAAK,CAAC;AAAA,IAC3C;AAGM,kBAAA,QAAQyB,EAAQ,QAAQ,EAC7B,OAAO,CAAC,CAAG,EAAAzB,CAAK,MAA6BA,KAAU,IAAI,EAC3D,QAAQ,CAAC,CAACmB,GAAKnB,CAAK,MAAM;AACtB,MAAA,MAAM,QAAQA,CAAK,IACtBA,EAAM,QAAQ,CAAAqB,MAAKa,EAAQf,GAAKE,CAAC,CAAC,IAElCa,EAAQf,GAAKnB,CAAK;AAAA,IACnB,CACA,GAEKiC;AAAA,EACR;AAED,GAIapC,IAAU,OAAU4B,GAA+BU,MAC3D,OAAOA,KAAa,aACfA,EAAyBV,CAAO,IAElCU,GAGKC,KAAa,OAAUZ,GAAuBC,MAAoD;AACxG,QAAA,CAACY,GAAOC,GAAUC,GAAUC,CAAiB,IAAI,MAAM,QAAQ,IAAI;AAAA;AAAA,IAExE3C,EAAQ4B,GAASD,EAAO,KAAK;AAAA;AAAA,IAE7B3B,EAAQ4B,GAASD,EAAO,QAAQ;AAAA;AAAA,IAEhC3B,EAAQ4B,GAASD,EAAO,QAAQ;AAAA;AAAA,IAEhC3B,EAAQ4B,GAASD,EAAO,OAAO;AAAA,EAAA,CAC/B,GAEKiB,IAAU,OAAO,QAAQ;AAAA,IAC9B,QAAQ;AAAA,IACR,GAAGD;AAAA,IACH,GAAGf,EAAQ;AAAA,EAAA,CACX,EACC,OAAO,CAAC,CAAA,EAAGzB,CAAK,MAA6BA,KAAU,IAAI,EAC3D,OAAO,CAACyC,GAAS,CAACtB,GAAKnB,CAAK,OAAO;AAAA,IACnC,GAAGyC;AAAAA,IACH,CAACtB,CAAG,GAAG,OAAOnB,CAAK;AAAA,EAAA,IAChB,CAA4B,CAAA;AAMjC,MAJIU,EAAkB2B,CAAK,MAClBI,EAAA,gBAAmB,UAAUJ,CAAK,KAGvC3B,EAAkB4B,CAAQ,KAAK5B,EAAkB6B,CAAQ,GAAG;AAC/D,UAAMG,IAAc7B,GAAO,GAAGyB,CAAQ,IAAIC,CAAQ,EAAE;AAC5C,IAAAE,EAAA,gBAAmB,SAASC,CAAW;AAAA,EAChD;AAEI,SAAAjB,EAAQ,SAAS,WAChBA,EAAQ,YACHgB,EAAA,cAAc,IAAIhB,EAAQ,YACxBd,EAAOc,EAAQ,IAAI,IAC7BgB,EAAQ,cAAc,IAAIhB,EAAQ,KAAK,QAAQ,6BACrChB,EAASgB,EAAQ,IAAI,IAC/BgB,EAAQ,cAAc,IAAI,eACf7B,EAAWa,EAAQ,IAAI,MAClCgB,EAAQ,cAAc,IAAI,sBAIrB,IAAI,QAAQA,CAAO;AAC3B,GAEaE,KAAiB,CAAClB,MAAwC;;AAClE,MAAAA,EAAQ,SAAS;AAChB,YAAAK,IAAAL,EAAQ,cAAR,QAAAK,EAAmB,SAAS,wBAAuBc,IAAAnB,EAAQ,cAAR,QAAAmB,EAAmB,SAAS,WAC3E,KAAK,UAAUnB,EAAQ,IAAI,IACxBhB,EAASgB,EAAQ,IAAI,KAAKd,EAAOc,EAAQ,IAAI,KAAKb,EAAWa,EAAQ,IAAI,IAC5EA,EAAQ,OAER,KAAK,UAAUA,EAAQ,IAAI;AAIrC,GAEaoB,KAAc,OAC1BrB,GACAC,GACAM,GACAe,GACAb,GACAQ,GACAtC,MACuB;AACjB,QAAA4C,IAAa,IAAI;AAEvB,MAAIxD,IAAuB;AAAA,IAC1B,SAAAkD;AAAA,IACA,MAAMK,KAAQb;AAAA,IACd,QAAQR,EAAQ;AAAA,IAChB,QAAQsB,EAAW;AAAA,EAAA;AAGpB,EAAIvB,EAAO,qBACVjC,EAAQ,cAAciC,EAAO;AAG9B,aAAWjD,KAAMiD,EAAO,aAAa,QAAQ;AAC5CjC,IAAAA,IAAU,MAAMhB,EAAGgB,CAAO;AAGlB,SAAAY,EAAA,MAAM4C,EAAW,MAAA,CAAO,GAE1B,MAAM,MAAMhB,GAAKxC,CAAO;AAChC,GAEayD,KAAoB,CAACxD,GAAoByD,MAAgD;AACrG,MAAIA,GAAgB;AACnB,UAAMC,IAAU1D,EAAS,QAAQ,IAAIyD,CAAc;AAC/C,QAAAxC,EAASyC,CAAO;AACZ,aAAAA;AAAA,EAET;AAED,GAEaC,KAAkB,OAAO3D,MAAyC;AAC1E,MAAAA,EAAS,WAAW;AACnB,QAAA;AACH,YAAM4D,IAAc5D,EAAS,QAAQ,IAAI,cAAc;AACvD,UAAI4D,GAAa;AAChB,cAAMC,IAAc,CAAC,4BAA4B,mBAAmB,mBAAmB,UAAU,UAAU,QAAQ;AACnH,YAAID,EAAY,SAAS,kBAAkB,KAAKA,EAAY,SAAS,OAAO;AACpE,iBAAA,MAAM5D,EAAS;AACvB,YAAW6D,EAAY,KAAK,CAAAC,MAAQF,EAAY,SAASE,CAAI,CAAC;AACtD,iBAAA,MAAM9D,EAAS;AACZ,YAAA4D,EAAY,SAAS,qBAAqB;AAC7C,iBAAA,MAAM5D,EAAS;AACZ,YAAA4D,EAAY,SAAS,OAAO;AAC/B,iBAAA,MAAM5D,EAAS;MAExB;AAAA,aACQgB,GAAO;AACf,cAAQ,MAAMA,CAAK;AAAA,IACpB;AAGF,GAEa+C,KAAkB,CAAC9B,GAA4B+B,MAA4B;AA6CjF,QAAAhD,IA5CiC;AAAA,IACtiB,EAAQ;AAAA,EAAA,EAGS+B,EAAO,MAAM;AAClC,MAAIhD;AACH,UAAM,IAAIlB,EAASmC,GAAS+B,GAAQhD,CAAK;AAGtC,MAAA,CAACgD,EAAO,IAAI;AACT,UAAAC,IAAcD,EAAO,UAAU,WAC/BE,IAAkBF,EAAO,cAAc,WACvCG,KAAa,MAAM;AACpB,UAAA;AACH,eAAO,KAAK,UAAUH,EAAO,MAAM,MAAM,CAAC;AAAA,cAC/B;AACJ;AAAA,MACR;AAAA,IAAA;AAGD,UAAM,IAAIlE;AAAA,MAASmC;AAAA,MAAS+B;AAAA,MAC3B,0BAA0BC,CAAW,kBAAkBC,CAAe,WAAWC,CAAS;AAAA,IAAA;AAAA,EAE5F;AACD,GASapE,IAAU,CAAIiC,GAAuBC,MAC1C,IAAI9B,GAAkB,OAAOE,GAASC,GAAQK,MAAa;AAC7D,MAAA;AACG,UAAA4B,IAAMR,GAAOC,GAAQC,CAAO,GAC5BQ,IAAWD,GAAYP,CAAO,GAC9BqB,IAAOH,GAAelB,CAAO,GAC7BgB,IAAU,MAAML,GAAWZ,GAAQC,CAAO;AAE5C,QAAA,CAACtB,EAAS,aAAa;AACtB,UAAAX,IAAW,MAAMqD,GAAYrB,GAAQC,GAASM,GAAKe,GAAMb,GAAUQ,GAAStC,CAAQ;AAExF,iBAAW5B,MAAMiD,EAAO,aAAa,SAAS;AAClC,QAAAhC,IAAA,MAAMjB,GAAGiB,CAAQ;AAGvB,YAAAoE,IAAe,MAAMT,GAAgB3D,CAAQ,GAC7CyD,KAAiBD,GAAkBxD,GAAUiC,EAAQ,cAAc;AAEzE,UAAIoC,IAAkBD;AAClB,MAAAnC,EAAQ,uBAAuBjC,EAAS,OACzBqE,IAAA,MAAMpC,EAAQ,oBAAoBmC,CAAY;AAGjE,YAAMJ,IAAoB;AAAA,QACzB,KAAAzB;AAAA,QACA,IAAIvC,EAAS;AAAA,QACb,QAAQA,EAAS;AAAA,QACjB,YAAYA,EAAS;AAAA,QACrB,MAAMyD,MAAkBY;AAAA,MAAA;AAGzB,MAAAN,GAAgB9B,GAAS+B,CAAM,GAE/B3D,EAAQ2D,EAAO,IAAI;AAAA,IACpB;AAAA,WACQhD,GAAO;AACf,IAAAV,EAAOU,CAAK;AAAA,EACb;AAAA,CACA;ACg1EK,MAAMsD,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxB,OAAc,mDAAmDC,IAA+D,IAAmF;AAC/M,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,OAAOsF,EAAK;AAAA,MAChB;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,8CAA8CA,IAA0D,IAA8E;AAChM,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,IAAIsF,EAAK;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,2CAA2CA,IAAuD,IAA2E;AACvL,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,IAAIsF,EAAK;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,sDAAsI;AAChJ,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,oDAAkI;AAC5I,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,gDAA0H;AACpI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,8DAAsJ;AAChK,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,+CAAwH;AAClI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,kDAA8H;AACxI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,4CAAkH;AAC5H,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,oDAAkI;AAC5I,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBA,OAAc,gDAAgDsF,IAA4D,IAAgF;AACtM,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,MAAMsF,EAAK;AAAA,QACX,UAAUA,EAAK;AAAA,QACf,MAAMA,EAAK;AAAA,QACX,OAAOA,EAAK;AAAA,QACZ,WAAWA,EAAK;AAAA,QAChB,IAAIA,EAAK;AAAA,QACT,OAAOA,EAAK;AAAA,QACZ,SAASA,EAAK;AAAA,QACd,WAAWA,EAAK;AAAA,QAChB,YAAYA,EAAK;AAAA,QACjB,SAASA,EAAK;AAAA,MAClB;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,wDAA0I;AACpJ,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,oDAAkI;AAC5I,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAc,oDAAoDsF,IAAgE,IAAoF;AAClN,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,IAAIsF,EAAK;AAAA,QACT,SAASA,EAAK;AAAA,MAClB;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,+CAAwH;AAClI,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,qDAAoI;AAC9I,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,4DAAkJ;AAC5J,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,kDAAkDsF,IAA8D,IAAkF;AAC5M,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,UAAUsF,EAAK;AAAA,MACnB;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,+CAAwH;AAClI,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,OAAc,yCAAyCsF,IAAqD,IAAyE;AACjL,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,MAAMsF,EAAK;AAAA,QACX,UAAUA,EAAK;AAAA,QACf,MAAMA,EAAK;AAAA,QACX,IAAIA,EAAK;AAAA,QACT,aAAaA,EAAK;AAAA,QAClB,SAASA,EAAK;AAAA,QACd,YAAYA,EAAK;AAAA,MACrB;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,gDAA0H;AACpI,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,kDAA8H;AACxI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,OAAc,gDAAgDsF,IAA4D,IAAgF;AACtM,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,MAAMsF,EAAK;AAAA,QACX,UAAUA,EAAK;AAAA,QACf,SAASA,EAAK;AAAA,QACd,QAAQA,EAAK;AAAA,QACb,SAASA,EAAK;AAAA,MAClB;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,qDAAoI;AAC9I,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,+CAA+CsF,IAA2D,IAA+E;AACnM,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,IAAIsF,EAAK;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,iDAA4H;AACtI,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,kDAA8H;AACxI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,qDAAoI;AAC9I,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,oDAAkI;AAC5I,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,6DAAoJ;AAC9J,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,4DAAkJ;AAC5J,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,wDAA0I;AACpJ,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,0DAA8I;AACxJ,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,gEAA0J;AACpK,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,wDAA0I;AACpJ,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,gDAA0H;AACpI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,gDAA0H;AACpI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,+CAAwH;AAClI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,wDAA0I;AACpJ,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,uDAAuDsF,IAAmE,IAAuF;AAC3N,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,UAAUsF,EAAK;AAAA,MACnB;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,6CAA6CA,IAAyD,IAA6E;AAC7L,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,UAAUsF,EAAK;AAAA,MACnB;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,uDAAwI;AAClJ,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,kDAA8H;AACxI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,8CAA8CsF,IAA0D,IAA8E;AAChM,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,SAASsF,EAAK;AAAA,MAClB;AAAA,MACA,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,oDAAkI;AAC5I,WAAOC,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,mDAAgI;AAC1I,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,kDAA8H;AACxI,WAAOuF,EAAUvF,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IAAA,CACH;AAAA,EACL;AAEJ;ACjvFY,IAAAwF,sBAAAA,OACRA,EAAA,YAAY,aACZA,EAAA,aAAa,cAFLA,IAAAA,KAAA,CAAA,CAAA;AChvBL,MAAMC,KAAW,CAAIH,GAAWI,GAAiBC,MAElDD,KAAUC,IACLL,EAAK,KAAK,CAAC,GAAMM,MAAS;AACzB,QAAAC,IAAS,EAAEH,CAAM,GACjBI,IAASF,EAAEF,CAAM;AAEvB,SAAIG,IAASC,IACJH,MAAkBH,EAAe,YAAY,KAAK,IAChDK,IAASC,IACXH,MAAkBH,EAAe,YAAY,IAAI,KAEjD;AACT,CACD,IAGIF;;;;;;;;;;;;4DCnBTS,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAAC,GAAAC;AAUO,IAAMC,IAAN,cAA8C1G,EAAgBC,CAAU,EAAE;AAAA,EAqE7E,cAAc;AACJ,aAQV0G,EAAA,MAAAjB,CAAA,GASMiB,EAAA,MAAAf,CAAA,GAwENe,EAAA,MAAAb,CAAA,GA0BAa,EAAA,MAAAX,CAAA,GAMAW,EAAA,MAAAT,CAAA,GAMAS,EAAA,MAAAP,CAAA,GAMAO,EAAA,MAAAL,CAAA,GAMAK,EAAA,MAAAH,CAAA,GA9MA,KAAQ,eAA+B;AAAA,MACnC,gBAAgB;AAAA,MAChB,UAAU;AAAA,IAAA,GAId,KAAQ,gBAAuC;AAAA,MAC3C;AAAA,QACI,MAAM;AAAA,QACN,OAAO;AAAA,QACP,cAAc;AAAA,MAClB;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,OAAO;AAAA,QACP,cAAc;AAAA,MAClB;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,OAAO;AAAA,QACP,cAAc;AAAA,MAClB;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,OAAO;AAAA,QACP,cAAc;AAAA,MAElB;AAAA,IAAA,GAIJ,KAAQ,cAAmC,IAS3C,KAAA,OAAkB,IAGlB,KAAA,eAA0B,IAGL,KAAA,aAAA,IAGrB,KAAA,aAAuB,IAGK,KAAA,oBAAA,IAG5B,KAAA,WAAqB,IAGM,KAAA,mBAAA,IAGP,KAAA,UAAA,CAAC,EAAE,MAAM,OAAO,OAAO,IAAI,UAAU,GAAQ,GAAA,EAAE,MAAM,OAAO,OAAO,SAAS,EAAE,MAAM,MAAM,OAAO,MAAM,GAGjG,KAAA,kBAAA;AAAA,EAI1B;AAAA,EAEA,MAAM,oBAAoB;AACtB,UAAM,kBAAkB,GACxBI,EAAA,MAAKhB,GAALC,CAAA,EAAA,KAAA,IAAA;AAAA,EACJ;AAAA,EA8JS,SAAS;AACP,WAAA3F;AAAA;AAAA,uCAEwBC,EAAU,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAOlB,KAAK,UAAU;AAAA,yCACfyG,QAAKZ,GAAcC,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAMjB,KAAK,UAAU;AAAA,yCACjB,KAAK,iBAAiB;AAAA,0CACrBW,QAAKV,GAAoBC,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAMxB,KAAK,QAAQ;AAAA,yCACf,KAAK,gBAAgB;AAAA,0CACpBS,QAAKR,GAAoBC,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAMxB,KAAK,OAAO;AAAA,yCACd,KAAK,eAAe;AAAA,0CACnBO,QAAKN,GAAmBC,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMhD,KAAK,YAAY,WAAW,IAC1BrG;AAAA;AAAA,iDAE6B,KAAK,YAAY,aAAa,KAAK,aAAa,WAAW,KAAK,WAAW,aAAa0G,EAAA,MAAKlB,GAAeC,CAAA,CAAA;AAAA;AAAA,wBAErIzF,GAAO;AAAA;AAAA;AAAA,EAG3B;AA8BJ;AA3OIwF,IAAA,oBAAA,QAAA;AAAAC,IAAe,SAACkB,GAA6B;AACzC,QAAMC,IAAQD,EAAM,QACdE,IAAiBD,EAAM,gBACvBE,IAAeF,EAAM;AAEtB,OAAA,eAAe1B,GAAS,gBAAgB,KAAK,IAAI,GAAG2B,GAAgBC,IAAe7B,EAAe,aAAaA,EAAe,SAAS,GAC5I,KAAK,cAAcyB,EAAA,MAAKd,GAALC,CAAA,EAAA,KAAA,MAAc,KAAK,YAAA;AAC1C;AAEMH,IAAA,oBAAA,QAAA;AAAAC,IAAK,iBAAG;AACV,MAAI,KAAK,MAAM;AACX,QAAInF,IAA6C,CAAA;AAoDjD,QAlDI,KAAK,SAAS,cACd,KAAK,OAAO,8BACZA,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,sDAAuD,CAAA,IAGjH,KAAK,SAAS,UACd,KAAK,OAAO,0BACZtE,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,kDAAmD,CAAA,IAG7G,KAAK,SAAS,aACd,KAAK,OAAO,gCACZtE,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,wDAAyD,CAAA,IAGnH,KAAK,SAAS,aACd,KAAK,OAAO,mCACZtE,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,0DAA2D,CAAA,IAGrH,KAAK,SAAS,gBACd,KAAK,OAAO,oBACZtE,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,6CAA8C,CAAA,IAGxG,KAAK,SAAS,iBACd,KAAK,OAAO,oCACZtE,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,wDAAyD,CAAA,IAGnH,KAAK,SAAS,iBACd,KAAK,OAAO,0BACZtE,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,kDAAmD,CAAA,IAG7G,KAAK,SAAS,iBACd,KAAK,OAAO,uBACZtE,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,8CAA+C,CAAA,IAGzG,KAAK,SAAS,cACd,KAAK,OAAO,2BACZtE,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,kDAAmD,CAAA,IAG7G,KAAK,SAAS,mBACd,KAAK,OAAO,yBACZtE,IAAW,MAAMuG,EAAoB,MAAMjC,EAAe,gDAAiD,CAAA,IAG3GtE,KACIA,EAAS,MAAM;AACf,WAAK,OAAOA,EAAS,MAChB,KAAA,eAAe,gBAAgB,KAAK,IAAI,GAC7C,KAAK,cAAckG,EAAA,MAAKd,GAALC,CAAA,EAAA,KAAA,MAAc,KAAK,YAAA;AAEtC,UAAImB,IAAa,CAAC,GAAG,IAAI,IAAI,KAAK,KAAK,IAAI,CAAKC,MAAAA,EAAE,SAAS,CAAC,CAAC;AACxD,WAAA,aAAaD,EAAW,IAAI,CAAKC,OAAS,EAAE,MAAMA,GAAG,OAAOA,EAAE,EAAG,GACjE,KAAA,WAAW,QAAQ,EAAE,MAAM,OAAO,OAAO,IAAI,UAAU,GAAA,CAAM;AAElE,UAAIC,IAAW,CAAC,GAAG,IAAI,IAAI,KAAK,KAAK,IAAI,CAAKD,MAAAA,EAAE,QAAQ,CAAC,CAAC;AACrD,WAAA,WAAWC,EAAS,IAAI,CAAKD,OAAS,EAAE,MAAMA,GAAG,OAAOA,EAAE,EAAG,GAC7D,KAAA,SAAS,QAAQ,EAAE,MAAM,OAAO,OAAO,IAAI,UAAU,GAAA,CAAM;AAAA,IACpE;AAAA,EAER;AACJ;AAEArB,IAAA,oBAAA,QAAA;AAAAC,IAAQ,SAACd,GAAiC;AAC/B,SAAAA,EAAK,IAAI,CAACA,OACN;AAAA,IACH,IAAIA,EAAK;AAAA,IACT,MAAM;AAAA,MACF;AAAA,QACI,aAAa;AAAA,QACb,OAAOA,EAAK;AAAA,MAChB;AAAA,MACA;AAAA,QACI,aAAa;AAAA,QACb,OAAOA,EAAK;AAAA,MAChB;AAAA,MACA;AAAA,QACI,aAAa;AAAA,QACb,OAAOA,EAAK;AAAA,MAChB;AAAA,MACA;AAAA,QACI,aAAa;AAAA,QACb,OAAOA,EAAK;AAAA,MAChB;AAAA,IACJ;AAAA,EAAA,EAEP;AACL;AAEAe,IAAA,oBAAA,QAAA;AAAAC,IAAc,SAACY,GAAsB;AAC3B,QAAA3F,IAAQ2F,EAAM,OAAO;AAC3B,OAAK,aAAa3F,GAClB0F,EAAA,MAAKJ,GAALC,CAAA,EAAA,KAAA,IAAA;AACJ;AAEAP,IAAA,oBAAA,QAAA;AAAAC,IAAoB,SAACU,GAAuB;AAClC,QAAA3F,IAAQ2F,EAAM,OAAO;AAC3B,OAAK,oBAAoB3F,GACzB0F,EAAA,MAAKJ,GAALC,CAAA,EAAA,KAAA,IAAA;AACJ;AAEAL,IAAA,oBAAA,QAAA;AAAAC,IAAoB,SAACQ,GAAuB;AAClC,QAAA3F,IAAQ2F,EAAM,OAAO;AAC3B,OAAK,mBAAmB3F,GACxB0F,EAAA,MAAKJ,GAALC,CAAA,EAAA,KAAA,IAAA;AACJ;AAEAH,IAAA,oBAAA,QAAA;AAAAC,KAAmB,SAACM,GAAuB;AACjC,QAAA3F,IAAQ2F,EAAM,OAAO;AAC3B,OAAK,kBAAkB3F,GACvB0F,EAAA,MAAKJ,GAALC,CAAA,EAAA,KAAA,IAAA;AACJ;AAEAD,IAAA,oBAAA,QAAA;AAAAC,IAAa,WAAG;;AACP,OAAA,eAAe,gBAAgB,KAAK,IAAI,GAEzC,KAAK,eAAe,OACpB,KAAK,gBAAezD,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,OAAO,CAAKmE,MAAAA,EAAE,KAAK,YAAA,EAAc,SAAS,KAAK,UAAU,KAGhG,KAAK,sBAAsB,OACtB,KAAA,gBAAerD,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,OAAO,OAAKqD,EAAE,cAAc,KAAK,qBAGxE,KAAK,qBAAqB,OACrB,KAAA,gBAAeE,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,OAAO,OAAKF,EAAE,aAAa,KAAK,oBAGvE,KAAK,oBAAoB,OACpB,KAAA,gBAAeG,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,OAAO,CAAAH,MAAKA,EAAE,eAAe,KAAK,oBAAoB,UAG7F,KAAK,eACL,KAAK,cAAcP,EAAA,MAAKd,GAALC,CAAA,EAAA,KAAA,MAAc,KAAK,YAAA,IAErC,KAAK,cAAc;AAC5B;AAxOSW,EA6RF,SAAS;AAAA,EACZtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BJ;AArTQC,EAAA;AAAA,EADPkH,EAAM;AAAA,GAFEb,EAGD,WAAA,gBAAA,CAAA;AAMArG,EAAA;AAAA,EADPkH,EAAM;AAAA,GAREb,EASD,WAAA,iBAAA,CAAA;AAyBArG,EAAA;AAAA,EADPkH,EAAM;AAAA,GAjCEb,EAkCD,WAAA,eAAA,CAAA;AAGRrG,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ;AAAA,GApCjBoG,EAqCT,WAAA,QAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GAvCEb,EAwCT,WAAA,QAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GA1CEb,EA2CT,WAAA,QAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GA7CEb,EA8CT,WAAA,gBAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GAhDEb,EAiDT,WAAA,cAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GAnDEb,EAoDT,WAAA,cAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GAtDEb,EAuDT,WAAA,qBAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GAzDEb,EA0DT,WAAA,YAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GA5DEb,EA6DT,WAAA,oBAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GA/DEb,EAgET,WAAA,WAAA,CAAA;AAGArG,EAAA;AAAA,EADCkH,EAAM;AAAA,GAlEEb,EAmET,WAAA,mBAAA,CAAA;AAnESA,IAANrG,EAAA;AAAA,EADNE,EAAc,4BAA4B;AAAA,GAC9BmG,CAAA;AA2Tb,MAAAc,KAAed,GCnUTe,KAA+B;AAAA,EACpC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,SAAS,MAAM,OAAO,8CAAkC;AAAA,EACxD,MAAM;AAAA,IACL,YAAY;AAAA,EACb;AACD,GAEaC,KAAkC,CAACD,EAAS,GCVnDA,KAAgC;AAAA,EACrC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK,MAAM,OAAO,yCAA6B;AAAA,EAC/C,MAAM;AAAA,IACL,YAAY;AAAA,EACb;AACD,GAEME,KAAuC;AAAA,EAC5C,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,SAAS,MAAM,OAAO,gDAAoC;AAAA,EAC1D,QAAQ;AAAA,EACR,MAAM;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,EACP;AAAA,EACA,YAAY;AAAA,IACX;AAAA,MACC,OAAO;AAAA,MACP,OAAOF,GAAU;AAAA,IAClB;AAAA,EACD;AACD,GAEaC,KAAkC;AAAA,EAC9CD;AAAAA,EACAE;AACD,GCjCMF,KAA+B;AAAA,EACnC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,SAAS,MAAM,OAAO,gDAAoC;AAAA,EAC1D,MAAM;AAAA,IACJ,YAAY;AAAA,EACd;AACF,GAEaC,KAAkC,CAACD,EAAS,GCN5CC,KAAkC;AAAA,EAC3C,GAAGE;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AACP,GCRaJ,KAAkC;AAAA,EAC3C;AAAA,IACI,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,MACF,OAAO;AAAA,MACP,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,OAAO,CAAC,2BAA2B;AAAA,IACvC;AAAA,EACJ;AACJ,GCdMK,KAAqC;AAAA,EAC1C,MAAM;AAAA,EACN,OAAOnI;AAAA,EACP,MAAM;AAAA,EACN,KAAK,MAAM,OAAO,uCAA2B;AAC9C,GAEMoI,KAA+B;AAAA,EACpC,MAAM;AAAA,EACN,OAAOnI;AAAA,EACP,MAAM;AAAA,EACN,KAAK,MAAM,OAAO,kCAAsB;AACzC,GAEMoI,KAAqB;AAAA,EAC1B,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,IACL,iBAAiB;AAAA,EAClB;AACD,GAEMC,KAA6B;AAAA,EAClC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,gBAAgB,CAAC,gBAAgB,WAAW,gBAAgB;AAC7D,GAEaR,KAAkC;AAAA,EAC9CK;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AACD,GC5BaC,KAA8B,CAACC,GAAMC,MAAsB;AAEpE,EAAAA,EAAkB,aAAa;AAAA,IAC3B,GAAGC;AAAAA,IACH,GAAGC;AAAAA,IACH,GAAGC;AAAAA,EAAA,CACN,GAEIJ,EAAA,eAAeK,IAAkB,OAAOC,MAAS;AAClD,QAAI,CAACA;AAAM;AAEL,UAAAC,IAAaD,EAAK;AACxB,IAAA/I,EAAQ,OAAOgJ,EAAW,MAC1BhJ,EAAQ,QAAQgJ,EAAW,OAC3BhJ,EAAQ,mBAAmBgJ,EAAW,iBACtChJ,EAAQ,cAAcgJ,EAAW;AAAA,EAAA,CACpC;AACL;"}