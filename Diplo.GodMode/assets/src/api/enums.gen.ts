// This file is auto-generated by @hey-api/openapi-ts

export enum AuditTypeModelEnum {
    NEW = 'New',
    SAVE = 'Save',
    SAVE_VARIANT = 'SaveVariant',
    OPEN = 'Open',
    DELETE = 'Delete',
    PUBLISH = 'Publish',
    PUBLISH_VARIANT = 'PublishVariant',
    SEND_TO_PUBLISH = 'SendToPublish',
    SEND_TO_PUBLISH_VARIANT = 'SendToPublishVariant',
    UNPUBLISH = 'Unpublish',
    UNPUBLISH_VARIANT = 'UnpublishVariant',
    MOVE = 'Move',
    COPY = 'Copy',
    ASSIGN_DOMAIN = 'AssignDomain',
    PUBLIC_ACCESS = 'PublicAccess',
    SORT = 'Sort',
    NOTIFY = 'Notify',
    SYSTEM = 'System',
    ROLL_BACK = 'RollBack',
    PACKAGER_INSTALL = 'PackagerInstall',
    PACKAGER_UNINSTALL = 'PackagerUninstall',
    CUSTOM = 'Custom',
    CONTENT_VERSION_PREVENT_CLEANUP = 'ContentVersionPreventCleanup',
    CONTENT_VERSION_ENABLE_CLEANUP = 'ContentVersionEnableCleanup'
}

export enum CompositionTypeModelEnum {
    COMPOSITION = 'Composition',
    INHERITANCE = 'Inheritance'
}

export enum ContentVariationModelEnum {
    NOTHING = 'Nothing',
    CULTURE = 'Culture',
    SEGMENT = 'Segment',
    CULTURE_AND_SEGMENT = 'CultureAndSegment'
}

export enum DataTypeChangeModeModelEnum {
    TRUE = 'True',
    FALSE = 'False',
    FALSE_WITH_HELP_TEXT = 'FalseWithHelpText'
}

export enum DirectionModelEnum {
    ASCENDING = 'Ascending',
    DESCENDING = 'Descending'
}

export enum DocumentVariantStateModelEnum {
    NOT_CREATED = 'NotCreated',
    DRAFT = 'Draft',
    PUBLISHED = 'Published',
    PUBLISHED_PENDING_CHANGES = 'PublishedPendingChanges'
}

export enum EventMessageTypeModelEnum {
    DEFAULT = 'Default',
    INFO = 'Info',
    ERROR = 'Error',
    SUCCESS = 'Success',
    WARNING = 'Warning'
}

export enum HealthStatusModelEnum {
    HEALTHY = 'Healthy',
    UNHEALTHY = 'Unhealthy',
    REBUILDING = 'Rebuilding'
}

export enum ImageCropModeModelEnum {
    CROP = 'Crop',
    MAX = 'Max',
    STRETCH = 'Stretch',
    PAD = 'Pad',
    BOX_PAD = 'BoxPad',
    MIN = 'Min'
}

export enum LogLevelModelEnum {
    VERBOSE = 'Verbose',
    DEBUG = 'Debug',
    INFORMATION = 'Information',
    WARNING = 'Warning',
    ERROR = 'Error',
    FATAL = 'Fatal'
}

export enum ModelsModeModelEnum {
    NOTHING = 'Nothing',
    IN_MEMORY_AUTO = 'InMemoryAuto',
    SOURCE_CODE_MANUAL = 'SourceCodeManual',
    SOURCE_CODE_AUTO = 'SourceCodeAuto'
}

export enum OperatorModelEnum {
    EQUALS = 'Equals',
    NOT_EQUALS = 'NotEquals',
    CONTAINS = 'Contains',
    NOT_CONTAINS = 'NotContains',
    LESS_THAN = 'LessThan',
    LESS_THAN_EQUAL_TO = 'LessThanEqualTo',
    GREATER_THAN = 'GreaterThan',
    GREATER_THAN_EQUAL_TO = 'GreaterThanEqualTo'
}

export enum OutOfDateTypeModelEnum {
    OUT_OF_DATE = 'OutOfDate',
    CURRENT = 'Current',
    UNKNOWN = 'Unknown'
}

export enum OverlaySizeEnum {
    SMALL = 'Small',
    MEDIUM = 'Medium',
    LARGE = 'Large'
}

export enum RedirectStatusModelEnum {
    ENABLED = 'Enabled',
    DISABLED = 'Disabled'
}

export enum RuntimeLevelModelEnum {
    UNKNOWN = 'Unknown',
    BOOT = 'Boot',
    INSTALL = 'Install',
    UPGRADE = 'Upgrade',
    RUN = 'Run',
    BOOT_FAILED = 'BootFailed'
}

export enum RuntimeModeModelEnum {
    BACKOFFICE_DEVELOPMENT = 'BackofficeDevelopment',
    DEVELOPMENT = 'Development',
    PRODUCTION = 'Production'
}

export enum ServerResponseTypeEnum {
    SUCCESS = 'Success',
    ERROR = 'Error',
    WARNING = 'Warning'
}

export enum StatusResultTypeModelEnum {
    SUCCESS = 'Success',
    WARNING = 'Warning',
    ERROR = 'Error',
    INFO = 'Info'
}

export enum TelemetryLevelModelEnum {
    MINIMAL = 'Minimal',
    BASIC = 'Basic',
    DETAILED = 'Detailed'
}

export enum TemplateQueryPropertyTypeModelEnum {
    STRING = 'String',
    DATE_TIME = 'DateTime',
    INTEGER = 'Integer'
}

export enum UserDataOperationStatusModelEnum {
    SUCCESS = 'Success',
    NOT_FOUND = 'NotFound',
    USER_NOT_FOUND = 'UserNotFound',
    ALREADY_EXISTS = 'AlreadyExists'
}

export enum UserOrderModelEnum {
    USER_NAME = 'UserName',
    LANGUAGE = 'Language',
    NAME = 'Name',
    EMAIL = 'Email',
    ID = 'Id',
    CREATE_DATE = 'CreateDate',
    UPDATE_DATE = 'UpdateDate',
    IS_APPROVED = 'IsApproved',
    IS_LOCKED_OUT = 'IsLockedOut',
    LAST_LOGIN_DATE = 'LastLoginDate'
}

export enum UserStateModelEnum {
    ACTIVE = 'Active',
    DISABLED = 'Disabled',
    LOCKED_OUT = 'LockedOut',
    INVITED = 'Invited',
    INACTIVE = 'Inactive',
    ALL = 'All'
}